[
  
    {
      "title"    : "How do I learn about the Spine Model?",
      "category" : "FAQ",
      "tags"     : "FAQ",
      "url"      : "/faq/Learn",
      "date"     : "2017-04-23 00:00:00 +0200",
      "content"  : "This site is a wiki catalog for the Spine Model. The model itself is described at spinemodel.info."
    } ,
  
    {
      "title"    : "How to Contribution to spine.wiki",
      "category" : "Explanation",
      "tags"     : "Meta",
      "url"      : "/explanation/Contribution",
      "date"     : "2017-04-23 00:00:00 +0200",
      "content"  : "  First off, thanks for taking the time to contribute! Were really glad youre reading this, because we need volunteers to help the wiki come to fruition.   Important resources:  There is a SpineModel slack group (spinemodel.slack.com). Send us an email to get invited.  You can follow @spinemodel on twitter.  If youre familiar with GitHub, the repository for this site is here.  If youd like to send us an email directly, use &amp;#115;&amp;#112;&amp;#105;&amp;#110;&amp;#101;&amp;#064;&amp;#100;&amp;#114;&amp;#105;&amp;#118;&amp;#101;&amp;#110;&amp;#046;&amp;#101;&amp;#109;&amp;#097;&amp;#105;&amp;#108;.Did you find a bug/mistake/broken link?Please report it via &amp;#115;&amp;#112;&amp;#105;&amp;#110;&amp;#101;&amp;#064;&amp;#100;&amp;#114;&amp;#105;&amp;#118;&amp;#101;&amp;#110;&amp;#046;&amp;#101;&amp;#109;&amp;#097;&amp;#105;&amp;#108;.Do you intend to add a new page or change an existing one?Easiest WayEmail your contribution to us. The preferred format is markdown, but any text format is accepted (Word, Pdf, even plain text in your email). Well credit you on the page(s) you contribute to.For those familiar with using GitHub and JekyllSpine.wiki is a static jekyll site.You add new pages by creating a new markdown file in the _posts folder on the develop branch (master branch contains the generated site, develop branch has the raw files). Starting from a copy of an existing file is easiest. Fork the spine.wiki repo from GitHub and send a pull request with your contribution. Style ConventionsSpine.wiki has been developed with the following values, keep them in mind when contributing:  Precise - Short, concise descriptions of various parts of Spine Models.  Simple - Avoid jargon where plain language will do.   Shallow - Create a map, not an archive. Rather than duplicating content from other sources, add the relevant snippet and link to the source.Welcome!Spine.wiki is a volunteer effort. We encourage you to pitch in and join the team!Thanks!   "
    } ,
  
    {
      "title"    : "eXtreme Programming (XP)",
      "category" : "Archetype",
      "tags"     : "Archetype, XP",
      "url"      : "/archetype/XP",
      "date"     : "2017-04-22 00:00:00 +0200",
      "content"  : "OriginThe term XP predates the term Agile by several years. XP stands for Extreme Programming, and is a suite of Practices, Principles, and Values invented by Kent Beck in the late 90s.Learning ItOur recommended way of learning XP is through  [Book] Extreme Programming Explained: Embrace Change, 2nd Edition - Kent Beck  What is Extreme Programming? - Ron Jefferies  Extreme Programming:A gentle introduction - Don Wells* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.XP SpineFrom the perspective of prospective users of eXtreme ProgrammingNeed (Where might it be used?)Extreme Programming is a discipline of software development based on values of simplicity, communication, feedback, courage, and respect. It works by bringing the whole team together in the presence of simple practices, with enough feedback to enable the team to see where they are and to tune the practices to their unique situation.Source: What is Extreme Programming?Values (What does it optimise for?)  Simplicity  Communication  Feedback  Respect  CouragePrinciples (What is it based on?)See XP Principles.Practices (What does it suggest you do?)XPs philosophy on Practices is very non-prescriptive, and advises an explorative approach, based on its Principles and Values.For a broad list see XP Practices.Tools (What does it suggest you use?)XP does not explicitly recommend any Tools"
    } ,
  
    {
      "title"    : "To Do",
      "category" : "Explanation",
      "tags"     : "Meta",
      "url"      : "/explanation/TODO",
      "date"     : "2017-04-22 00:00:00 +0200",
      "content"  : "Many of the pages and sections on this site have yet to be fleshed out. We felt that since the page structure of the site is as informative as the content, that it was valuable to publish incomplete pages.If you would like to contribute to any of the pages or add new ones please contact Us, or use GitHub."
    } ,
  
    {
      "title"    : "Scrum",
      "category" : "Archetype",
      "tags"     : "Archetype, Scrum",
      "url"      : "/archetype/Scrum",
      "date"     : "2017-04-22 00:00:00 +0200",
      "content"  : "OriginJeff Sutherland and Ken Schwaber conceived the Scrum process in the early 90s. They codified Scrum in 1995 in order to present it at the Oopsla conference in Austin, Texas (US) and published the paper SCRUM Software Development Process.Ken and Jeff inherited the name Scrum from the 1986 groundbreaking paper The New New Product Development Game by Takeuchi and Nonaka, two acknowledged management thinkers. With the term Scrum Nonaka and Takeuchi referred to the game of rugby to stress the importance of teams and some analogies between a team sport like rugby and being successful in the game of new product development. The research described in their paper showed that outstanding performance in the development of new, complex products is achieved when teams, as small and self-organizing units of people, are fed with objectives, not with tasks. The best teams are those that are given direction within which they have room to devise their own tactics on how to best head towards their joint objective. Teams require autonomy to achieve excellence.Source: The History of ScrumLearning ItOur recommended way of learning scrum is through  Scrum Primer - Deemer, Benefield, Larman, Vodde  Scrum Guide - Sutherland, Schwaber* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.Scrum SpineFrom the perspective of prospective users of ScrumNeed (Where might it be used?)Scrum describes itself as:  A framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value.Source: The Official Scrum GuideValues (What does it optimise for?)Though not in mentioned in the Official Scrum Guide, there are official sources that mention five values:  Focus  Courage  Openness  Commitment  RespectPrinciples (What is it based on?)To DoPractices (What does it suggest you do?)  Scrum Master  Product Owner  Sprint RetrospectiveTools (What does it suggest you use?)Scrum does not explicitly recommend any Tools"
    } ,
  
    {
      "title"    : "Scaled Agile Framework (SAFe)",
      "category" : "Archetype",
      "tags"     : "Archetype",
      "url"      : "/archetype/SAFe",
      "date"     : "2017-04-22 00:00:00 +0200",
      "content"  : "OriginDean Leffingwell describes the origin of SAFe as follows  Over the last few years, Ive worked extensively with a number of other professionals (including Drew Jemilo, Colin ONeill, Alex Yakyma, Mauricio Zamora) in the implementation of a number of large enterprise lean|agile transformations. This collaboration has resulted in many back and forth discussions around implementation of the Scaled Agile Framework. To date, this framework has been elaborated primarily in my books Agile Software Requirements, Scaling Software Agility, and blog).Recently, we decided to formalize our collaboration with the intent of making the framework public-facing and more readily available to a larger audience, and we have also committed to developing certain extensions and enhancements to the framework that have presented themselves as the marketplace, agile enterprise maturity, and our thinking and experiences have evolved.To that end, we will offer the Scaled Agile Framework (SAF) as a proven, publicly available, framework for applying Lean|Agile practices at enterprise scale, presented in a structured, interactive, web format.Source: Dean Leffingwell, Introducing the Scaled Agile FrameworkLearning ItOur recommended way of learning about SAFe is through  SAFe Reference Guide  SAFe has extensive training and certification schemes* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.SAFe SpineFrom the perspective of prospective users of SAFeNeed (Where might it be used?)To DoValues (What does it optimise for?)  Alignment  Code Quality  Transparency  Program ExecutionPrinciples (What is it based on?)  Take an Economic View  Apply Systems Thinking  Assume Variability; Preserve Options  Build Incrementally With Fast Integrated Learning Cycles  Base Milestones On Objective Evaluation Of Working Systems  Visualize and limit WIP, reduce batch sizes, and manage queue lengths   Apply cadence, synchronize with cross-domain planning  Unlock the intrinsic motivation of knowledge workers  Decentralize decision-makingPractices (What does it suggest you do?)To DoTools (What does it suggest you use?)To Do"
    } ,
  
    {
      "title"    : "Principles of LeSS",
      "category" : "Principle",
      "tags"     : "LeSS",
      "url"      : "/principle/PrinciplesOfLeSS",
      "date"     : "2017-04-22 00:00:00 +0200",
      "content"  : "10 Principles  Large-Scale Scrum is Scrum  Transparency  More with LeSS  Whole Product Focus  Customer Centric  Continuous Improvement Towards Perfection  Lean Thinking  Systems Thinking  Empirical Process Control  Queueing TheoryOther Principles  Agile Manifesto  Avoiding False Dichotomies (explored in Scaling Agile and Lean Development)  Be Agile Rather than Do Agile (explored in Scaling Agile and Lean Development)  Total Quality Management/Control (an early and excellent book on this is What is Total Quality Control: The Japanese Way)  Demings 14 points (from Out of the Crisis)For more information, review the LeSS archetype.(Source: Less.works)"
    } ,
  
    {
      "title"    : "Large-Scale Scrum (LeSS)",
      "category" : "Archetype",
      "tags"     : "Archetype, LeSS",
      "url"      : "/archetype/LeSS",
      "date"     : "2017-04-22 00:00:00 +0200",
      "content"  : "OriginLeSS emerged from the work of Craig Larman and Bas Vodde:  Since 2005, weve worked with clients to apply the LeSS (Large-Scale Scrum) framework for scaling Scrum, lean and agile development to big product groups. We share that experience and knowledge through LeSS so that you too can succeed when scaling.Source: LeSS.worksLearning ItOur recommended way of learning about LeSS is through  [Book] Large-Scale Scrum: More with LeSS - Larman, Vodde  Less.works website* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.LeSS SpineFrom the perspective of prospective users of Large-Scale ScrumNeed (Where might it be used?)LeSS is a set of rules combined with guides for applying Scrum in a multi-team context. It is not a framework that applies Scrum at team level and then adds additional scaling processes, instead it is Scrum scaled on all the levels.Rather than having Scrum as a building block for a scaled framework, LeSS looks at Scrum and for each element ask Why is it there? followed by If we have more than one team, how can we achieve the same purpose on a larger scale?Source: Large-Scale Scrum is ScrumValues (What does it optimise for?)Since LeSS is Scrum scaled, it builds on the Scrum Values. Other than that, the focus for LeSS was on keeping it simple, avoiding adding additional roles, artifacts of processes that should be empirically managed by the product group.The other significant optimisation was for scaling up instead of tailoring down. Rather than defining a universal, overarching framework and then contextually tailoring it down, LeSS is kept to a minimum and the concept of Less Huge is introduced for very large product groups ( more than 8 teams).Source: Why LeSS?Principles (What is it based on?)See LeSS Principles.Practices (What does it suggest you do?)To DoTools (What does it suggest you use?)LeSS does not explicitly recommend any Tools"
    } ,
  
    {
      "title"    : "Generic List of Values",
      "category" : "Value",
      "tags"     : "",
      "url"      : "/value/GenericValues",
      "date"     : "2016-01-25 00:00:00 +0200",
      "content"  : "  Abundance  Acceptance  Accessibility  Accomplishment  Accountability  Accuracy  Achievement  Acknowledgement  Activeness  Activism  Adaptability  Adoration  Adroitness  Advancement  Adventure  Affection  Affluence  Aggressiveness  Agility  Alertness  Altruism  Amazement  Ambition  Amusement  Anticipation  Appreciation  Approachability  Approval  Art  Articulacy  Artistry  Assertiveness  Assurance  Attainment  Attention  Attentiveness  Attractiveness  Audacity  Availability  Awareness  Awe  Balance  Beauty  Being present  Belonging  Benevolence  Bliss  Boldness  Bravery  Brilliance  Buoyancy  Calmness  Camaraderie  Candor  Capability  Caring  Caution  Certainty  Challenge  Change  Charity  Charm  Chastity  Cheerfulness  Clarity  Cleanliness  Cleverness  Closeness  Comfort  Commitment  Communication  Community  Compassion  Competence  Competition  Completion  Composure  Concentration  Conciseness  Confidence  Conformity  Congruency  Connection  Consciousness  Conservation  Consistency  Contentment  Continuity  Contribution  Control  Conviction  Coolness  Cooperation  Cordiality  Correctness  Courage  Courtesy  Craftiness  Creativity  Credibility  Cunning  Curiosity  Daring  Decisiveness  Deference  Delight  Dependability  Depth  Desire  Detail  Determination  Devotion  Devoutness  Dignity  Diligence  Direction  Directness  Discipline  Discovery  Discretion  Diversity  Dominance  Dreaming  Drive  Duty  Eagerness  Ease  Economy  Ecstasy  Education  Effectiveness  Efficiency  Elation  Elegance  Empathy  Encouragement  Endurance  Energy  Enjoyment  Enlightenment  Entertainment  Enthusiasm  Environment  Equanimity  Ethics  Excellence  Excitement  Exhilaration  Expediency  Experience  Expertise  Exploration  Expressiveness  Extravagance  Extroversion  Exuberance  Fairness  Faith  Fame  Family  Fascination  Fearlessness  Ferocity  Fidelity  Fierceness  Firmness  Fitness  Flexibility  Flow  Fluency  Focus  Fortitude  Frankness  Freedom  Friendliness  Friendship  Frugality  Fun  Gallantry  Generosity  Gentility  Giving  Grace  Gratitude  Gregariousness  Growth  Guidance  Happiness  Harmony  Health  Heart  Helpfulness  Heroism  Holism  Honesty  Honor  Hopefulness  Hospitality  Humanity  Humility  Humor  Hygiene  Imagination  Impact  Impartiality  Independence  Individuality  Industry  Influence  Ingenuity  Inquisitiveness  Insightfulness  Inspiration  Integrity  Intellect  Intelligence  Intimacy  Intrepidness  Intrigue  Introspection  Introversion  Intuition  Intuitiveness  Inventiveness  Involvement  Joy  Judiciousness  Justice  Keenness  Kindness  Knowledge  Laid back-ness  Leadership  Learning  Legacy  Liberation  Liberty  Lightness  Liveliness  Logic  Longevity  Love  Loyalty  Majesty  Manners  Marriage  Mastery  Maturity  Meaning  Meekness  Mellowness  Mindfulness  Modesty  Motivation  Mystery  Nature  Neatness  Nerve  Non-conformity  Obedience  Open mindedness  Openness  Optimism  Order  Organization  Originality  Outdoors  Outlandishness  Outrageousness  Partnership  Passion  Patience  Patriotism  Peace  Perceptiveness  Perkiness  Perseverance  Persistence  Persuasiveness  Philanthropy  Piety  Playfulness  Pleasantness  Pleasure  Poise  Polish  Popularity  Power  Practicality  Pragmatism  Precision  Preparedness  Presence  Pride  Privacy  Professionalism  Prosperity  Prudence  Punctuality  Purity  Quiet  Quirkiness  Rationality  Realism  Reason  Recognition  Recreation  Refinement  Reflection  Relaxation  Reliability  Relief  Religiousness  Reputation  Resilience  Resolution  Resoluteness  Resolve  Resourcefulness  Respect  Responsibility  Restraint  Reverence  Richness  Rigor  Sacredness  Sacrifice  Satisfaction  Security  Self-control  Self-growth  Selflessness  Self-reliance  Self-respect  Self-sustainability  Sensitivity  Sensuality  Serenity  Service  Sexiness  Sexuality  Sharing  Shrewdness  Silence  Silliness  Simplicity  Sincerity  Skillfulness  Solidarity  Solitude  Solution-Focus  Sophistication  Speed  Spirituality  Spontaneity  Stability  Status  Stealth  Stillness  Strategy  Strength  Structure  Success  Support  Sympathy  Synergy  Teaching  Teamwork  Tenacity  Thankfulness  Thoroughness  Thoughtfulness  Thrift  Tidiness  Timeliness  Traditionalism  Tranquility  Transcendence  Trust  Trustworthiness  Truth  Understanding  Uniqueness  Unity  Usefulness  Utility  Valor  Variety  Victory  Vigor  Virtue  Vision  Vitality  Vivacity  Volunteerism  Warmth  Wealth  Wellness  Willfulness  Willingness  Wisdom  Wit  Wonder  Worthiness  Youthfulness  Zeal  Zest"
    } ,
  
    {
      "title"    : "Whole Team",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/WholeTeam",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "All the contributors to an XP project sit together, members of one team. This team must include a business representative  the Customer  who provides the requirements, sets the priorities, and steers the project. Its best if the Customer or one of her aides is a real end user who knows the domain and what is needed. The team will of course have programmers. The team may include testers, who help the Customer define the customer acceptance tests. Analysts may serve as helpers to the Customer, helping to define the requirements. There is commonly a coach, who helps the team keep on track, and facilitates the process. There may be a manager, providing resources, handling external communication, coordinating activities. None of these roles is necessarily the exclusive property of just one individual: Everyone on an XP team contributes in any way that they can. The best teams have no specialists, only general contributors with special skills.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Test Driven Development",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/TDD",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "Extreme Programming is obsessed with feedback, and in software development, good feedback requires good testing. Top XP teams practice test-driven development, working in very short cycles of adding a test, then making it work. Almost effortlessly, teams produce code with nearly 100 percent test coverage, which is a great step forward in most shops. (If your programmers are already doing even more sophisticated testing, more power to you. Keep it up, it can only help!)It isnt enough to write tests: you have to run them. Here, too, Extreme Programming is extreme. These programmer tests, or unit tests are all collected together, and every time any programmer releases any code to the repository (and pairs typically release twice a day or more), every single one of the programmer tests must run correctly. One hundred percent, all the time! This means that programmers get immediate feedback on how theyre doing. Additionally, these tests provide invaluable support as the software design is improved.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Sustainable Pace",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/SustainablePace",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "Extreme Programming teams are in it for the long term. They work hard, and at a pace that can be sustained indefinitely. This means that they work overtime when it is effective, and that they normally work in such a way as to maximize productivity week in and week out. Its pretty well understood these days that death march projects are neither productive nor produce quality software. XP teams are in it to win, not to die.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Small Releases",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/SmallReleases",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "XP teams practice small releases in two important ways:First, the team releases running, tested software, delivering business value chosen by the Customer, every iteration. The Customer can use this software for any purpose, whether evaluation or even release to end users (highly recommended). The most important aspect is that the software is visible, and given to the customer, at the end of every iteration. This keeps everything open and tangible.Second, XP teams release to their end users frequently as well. XP Web projects release as often as daily, in house projects monthly or more frequently. Even shrink-wrapped products are shipped as often as quarterly.It may seem impossible to create good versions this often, but XP teams all over are doing it all the time. See Continuous Integration for more on this, and note that these frequent releases are kept reliable by XPs obsession with testing, as described here in Customer Tests and Test-Driven Development.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Simple Design",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/SimpleDesign",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "XP teams build software to a simple but always adequate design. They start simple, and through programmer testing and design improvement, they keep it that way. An XP team keeps the design exactly suited for the current functionality of the system. There is no wasted motion, and the software is always ready for whats next.Design in XP is not a one-time thing, or an up-front thing, it is an all-the-time thing. There are design steps in release planning and iteration planning, plus teams engage in quick design sessions and design revisions through refactoring, through the course of the entire project. In an incremental, iterative process like Extreme Programming, good design is essential. Thats why there is so much focus on design throughout the course of the entire development.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Design Improvement (Refactoring)",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/Refactoring",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "Extreme Programming focuses on delivering business value in every iteration. To accomplish this over the course of the whole project, the software must be well-designed. The alternative would be to slow down and ultimately get stuck. So XP uses a process of continuous design improvement called Refactoring, from the title of Martin Fowlers book, Refactoring: Improving the Design of Existing Code.The refactoring process focuses on removal of duplication (a sure sign of poor design), and on increasing the cohesion of the code, while lowering the coupling. High cohesion and low coupling have been recognized as the hallmarks of well-designed code for at least thirty years. The result is that XP teams start with a good, simple design, and always have a good, simple design for the software. This lets them sustain their development speed, and in fact generally increase speed as the project goes forward.Refactoring is, of course, strongly supported by comprehensive testing to be sure that as the design evolves, nothing is broken. Thus the customer tests and programmer tests are a critical enabling factor. The XP practices support each other: they are stronger together than separately.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Practices of Extreme Programming",
      "category" : "Practice",
      "tags"     : "XP",
      "url"      : "/practice/PracticesOfXP",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "XPs philosophy on Practices is very non-prescriptive, and advises an explorative approach, based on the XP Principles and XP Values.Practices recommended by Kent BeckPractices as presented in eXtreme Programming Explained, 2nd Edition by Kent Beck, the second of the Three ExtremosPrimary Practices  Sit Together  Whole Team  Informative Workspace  Energized Work  Pair Programming  Stories (UserStories)  Weekly Cycle  Quarterly Cycle  Slack  Ten Minute Build  Continuous Integration  Test First Programming  Incremental DesignCorollary Practices  Real Customer Involvement  Incremental Deployment  Team Continuity  Shrinking Teams  Root Cause Analysis  Shared Code  Code And Tests  Single Code Base  Daily Deployment  Negotiated Scope Contract  Pay Per Use(Source: c2 wiki)Practices recommended by Ron JeffriesRon Jeffries is the third of the Three Extremos  Whole Team  Planning Game  Small Releases  Customer Tests  Simple Design  Pair Programming  Test-Driven Development  Design Improvement  Continuous Integration  Collective Code Ownership  Coding Standard  Metaphor  Sustainable PaceFor more information, review the XP archetype. "
    } ,
  
    {
      "title"    : "Planning Game",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/PlanningGame",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "XP planning addresses two key questions in software development: predicting what will be accomplished by the due date, and determining what to do next. The emphasis is on steering the project  which is quite straightforward  rather than on exact prediction of what will be needed and how long it will take  which is quite difficult. There are two key planning steps in XP, addressing these two questions:Release Planning is a practice where the Customer presents the desired features to the programmers, and the programmers estimate their difficulty. With the cost estimates in hand, and with knowledge of the importance of the features, the Customer lays out a plan for the project. Initial release plans are necessarily imprecise: neither the priorities nor the estimates are truly solid, and until the team begins to work, we wont know just how fast they will go. Even the first release plan is accurate enough for decision making, however, and XP teams revise the release plan regularly.Iteration Planning is the practice whereby the team is given direction every couple of weeks. XP teams build software in two-week iterations, delivering running useful software at the end of each iteration. During Iteration Planning, the Customer presents the features desired for the next two weeks. The programmers break them down into tasks, and estimate their cost (at a finer level of detail than in Release Planning). Based on the amount of work accomplished in the previous iteration, the team signs up for what will be undertaken in the current iteration.These planning steps are very simple, yet they provide very good information and excellent steering control in the hands of the Customer. Every couple of weeks, the amount of progress is entirely visible. There is no ninety percent done in XP: a feature story was completed, or it was not. This focus on visibility results in a nice little paradox: on the one hand, with so much visibility, the Customer is in a position to cancel the project if progress is not sufficient. On the other hand, progress is so visible, and the ability to decide what will be done next is so complete, that XP projects tend to deliver more of what is needed, with less pressure and stress.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Pair Programming",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/PairProgramming",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "All production software in XP is built by two programmers, sitting side by side, at the same machine. This practice ensures that all production code is reviewed by at least one other programmer, and results in better design, better testing, and better code.It may seem inefficient to have two programmers doing one programmers job, but the reverse is true. Research into pair programming shows that pairing produces better code in about the same time as programmers working singly. Thats right: two heads really are better than one!Some programmers object to pair programming without ever trying it. It does take some practice to do well, and you need to do it well for a few weeks to see the results. Ninety percent of programmers who learn pair programming prefer it, so we highly recommend it to all teams.Pairing, in addition to providing better code and tests, also serves to communicate knowledge throughout the team. As pairs switch, everyone gets the benefits of everyones specialized knowledge. Programmers learn, their skills improve, they become more valuable to the team and to the company. Pairing, even on its own outside of XP, is a big win for everyone.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Metaphor",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/Metaphor",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "Extreme Programming teams develop a common vision of how the program works, which we call the metaphor. At its best, the metaphor is a simple evocative description of how the program works, such as this program works like a hive of bees, going out for pollen and bringing it back to the hive as a description for an agent-based information retrieval system.Sometimes a sufficiently poetic metaphor does not arise. In any case, with or without vivid imagery, XP teams use a common system of names to be sure that everyone understands how the system works and where to look to find the functionality youre looking for, or to find the right place to put the functionality youre about to add.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Customer Tests",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/CustomerTests",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "As part of presenting each desired feature, the XP Customer defines one or more automated acceptance tests to show that the feature is working. The team builds these tests and uses them to prove to themselves, and to the customer, that the feature is implemented correctly. Automation is important because in the press of time, manual tests are skipped. Thats like turning off your lights when the night gets darkest.The best XP teams treat their customer tests the same way they do programmer tests: once the test runs, the team keeps it running correctly thereafter. This means that the system only improves, always notching forward, never backsliding.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Continuous Integration",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/ContinuousIntegration",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "Extreme Programming teams keep the system fully integrated at all times. We say that daily builds are for wimps: XP teams build multiple times per day. (One XP team of forty people builds at least eight or ten times per day!)The benefit of this practice can be seen by thinking back on projects you may have heard about (or even been a part of) where the build process was weekly or less frequently, and usually led to integration hell, where everything broke and no one knew why.Infrequent integration leads to serious problems on a software project. First of all, although integration is critical to shipping good working code, the team is not practiced at it, and often it is delegated to people who are not familiar with the whole system. Second, infrequently integrated code is often  I would say usually  buggy code. Problems creep in at integration time that are not detected by any of the testing that takes place on an unintegrated system. Third, weak integration process leads to long code freezes. Code freezes mean that you have long time periods when the programmers could be working on important shippable features, but that those features must be held back. This weakens your position in the market, or with your end users.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Collective Code Ownership",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/CollectiveCodeOwnership",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "On an Extreme Programming project, any pair of programmers can improve any code at any time. This means that all code gets the benefit of many peoples attention, which increases code quality and reduces defects. There is another important benefit as well: when code is owned by individuals, required features are often put in the wrong place, as one programmer discovers that he needs a feature somewhere in code that he does not own. The owner is too busy to do it, so the programmer puts the feature in his own code, where it does not belong. This leads to ugly, hard-to-maintain code, full of duplication and with low (bad) cohesion.Collective ownership could be a problem if people worked blindly on code they did not understand. XP avoids these problems through two key techniques: the programmer tests catch mistakes, and pair programming means that the best way to work on unfamiliar code is to pair with the expert. In addition to ensuring good modifications when needed, this practice spreads knowledge throughout the team.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Coding Standard",
      "category" : "Practice",
      "tags"     : "XP, Practice",
      "url"      : "/practice/CodingStandard",
      "date"     : "2015-11-22 00:00:00 +0200",
      "content"  : "XP teams follow a common coding standard, so that all the code in the system looks as if it was written by a single  very competent  individual. The specifics of the standard are not important: what is important is that all the code looks familiar, in support of collective ownership.For more information, review the XP archetype.(Source: Ron Jeffries)"
    } ,
  
    {
      "title"    : "Transparency",
      "category" : "Value",
      "tags"     : "SAFe, Value",
      "url"      : "/value/Transparency",
      "date"     : "2015-11-21 00:00:00 +0200",
      "content"  : "This is the third Value of SAFe.(More info here.)"
    } ,
  
    {
      "title"    : "Tools for Visualising Work In Progress",
      "category" : "Tool",
      "tags"     : "Tool",
      "url"      : "/tool/ToolsForVisualisingWorkInProgress",
      "date"     : "2015-11-21 00:00:00 +0200",
      "content"  : "  Physical Board  Digital Board  Team Cognitive Load Tracker"
    } ,
  
    {
      "title"    : "Program Execution",
      "category" : "Value",
      "tags"     : "SAFe, Value",
      "url"      : "/value/ProgramExecution",
      "date"     : "2015-11-21 00:00:00 +0200",
      "content"  : "This is the fourth Value of SAFe.(More info here.)"
    } ,
  
    {
      "title"    : "Next Retro Topics List",
      "category" : "Tool",
      "tags"     : "Tool",
      "url"      : "/tool/NextRetroTopicsList",
      "date"     : "2015-11-21 00:00:00 +0200",
      "content"  : "What is it?A visible list of all the things the team may want to dig deeper into during their next Retrospective.Why use it?If a challenge or opportunity is uncovered around how the team gets the work done, individuals may feel they want to dig deeper into understanding it during the next Retro. There is a risk that you could forget what it was, or not spend enough time deliberating on it, so making it visible in the team space is a useful way of making sure it doesnt slip through.When to use it?Any time a challenge or opportunity is uncovered and the team doesnt feel it is appropriate to address it right there and then.What could it look like?It could be an area or piece of paper on a teams board. Somewhere highly visible. AssumptionsThe team does not use this list as a way of avoiding difficult conversations that should be had sooner."
    } ,
  
    {
      "title"    : "Code Quality",
      "category" : "Value",
      "tags"     : "SAFe, Value",
      "url"      : "/value/CodeQuality",
      "date"     : "2015-11-21 00:00:00 +0200",
      "content"  : "This is the second Value of SAFe.(More info here.)"
    } ,
  
    {
      "title"    : "Alignment",
      "category" : "Value",
      "tags"     : "SAFe, Value",
      "url"      : "/value/Alignment",
      "date"     : "2015-11-21 00:00:00 +0200",
      "content"  : "This is the first Value of SAFe.(More info here.)"
    } ,
  
    {
      "title"    : "Values of Extreme Programming",
      "category" : "Value",
      "tags"     : "XP",
      "url"      : "/value/ValuesOfXP",
      "date"     : "2015-11-17 00:00:00 +0200",
      "content"  : "  Simplicity  Communication  Feedback  Respect  CourageFor more information, review the XP archetype."
    } ,
  
    {
      "title"    : "Values of Scrum",
      "category" : "Value",
      "tags"     : "Scrum",
      "url"      : "/value/ValuesOfScrum",
      "date"     : "2015-11-17 00:00:00 +0200",
      "content"  : "  Focus  Courage  Openness  Commitment  RespectFor more information, review the Scrum archetype."
    } ,
  
    {
      "title"    : "Values of SAFe",
      "category" : "Value",
      "tags"     : "SAFe",
      "url"      : "/value/ValuesOfSAFe",
      "date"     : "2015-11-17 00:00:00 +0200",
      "content"  : "  Alignment  Code Quality  Transparency  Program ExecutionFor more information, review the SAFe archetype."
    } ,
  
    {
      "title"    : "Tools for Retrospectives",
      "category" : "Tool",
      "tags"     : "Agile",
      "url"      : "/tool/ToolsForRetrospectives",
      "date"     : "2015-11-17 00:00:00 +0200",
      "content"  : "If you arent sure what a retrospective is, start here.  SMART Goals  Next Retro Topics list  Improv  PlansForRetrospectives.com  TastyCupcakes.org  RetrospectiveWiki.org"
    } ,
  
    {
      "title"    : "Principles of Extreme Programming",
      "category" : "Principle",
      "tags"     : "XP",
      "url"      : "/principle/PrinciplesOfXP",
      "date"     : "2015-11-17 00:00:00 +0200",
      "content"  : "Fundamental Principles  Rapid Feedback  Assume Simplicity  Incremental Change  Embracing Change  Quality WorkFurther Principles  Teach Learning  Small Initial Investment  Play to Win  Concrete Experiments  Open, honest Communication  Work with peoples instincts - not against them  Accepted Responsibility  Local Adaptation  Travel Light  Honest MeasurementFor more information, review the XP archetype.(Source: Martin Fowler)"
    } ,
  
    {
      "title"    : "Principles of SAFe",
      "category" : "Principle",
      "tags"     : "SAFe",
      "url"      : "/principle/PrinciplesOfSAFe",
      "date"     : "2015-11-17 00:00:00 +0200",
      "content"  : "  Take an Economic View  Apply Systems Thinking  Assume Variability; Preserve Options  Build Incrementally With Fast Integrated Learning Cycles  Base Milestones On Objective Evaluation Of Working Systems  Visualize and limit WIP, reduce batch sizes, and manage queue lengths   Apply cadence, synchronize with cross-domain planning  Unlock the intrinsic motivation of knowledge workers  Decentralize decision-makingFor more information, review the SAFe archetype."
    } ,
  
    {
      "title"    : "Principles of Flow",
      "category" : "Principle",
      "tags"     : "Flow",
      "url"      : "/principle/PrinciplesOfFlow",
      "date"     : "2015-11-17 00:00:00 +0200",
      "content"  : "The Lean Product Development book enumerates 175 principles in 8 categories: Economic, Queueing, Variability, Batch Size, WIP Constraint, Flow Control Fast Feedback and DecentralizationEconomic Principles  E1: The Principle of Quantified Overall Economics: Select actions based on quantified overall economic impact.  E2: The Principle of Interconnected Variables: We cant just change one thing.  E3: The Principle of Quantified Cost of Delay: If you only quantify one thing, quantify the cost of delay.  E4: The Principle of Economic Value-Added: The value added by an activity is the change in the economic value of the work product.  E5: The Inactivity Principle: Watch the work product, not the worker.  E6: The U-Curve Principle: Important trade-offs are likely to have U-curve optimizations.  E7: The Imperfection Principle: Even imperfect answers improve decision making  E8: The Principle of Small Decisions: Influence the many small decisions  E9: The Principle of Continuous Economic Tradeoffs: Economic choices must be made continuously.  E10: The First Perishability Principle: Many economic choices are more valuable when made quickly.  E11: The Subdivision Principle: Inside every bad choice lies a good choice.  E12: The Principle of Early Harvesting: Create systems to harvest the early cheap opportunities.  E13: The Principle of Decision Rules: Use decision rules to decentralize economic control.  E14: The First Market Principle: Ensure decision makers feel both cost and benefit.  E15: The Principle of Optimum Decision Timing: Every decision has its optimum economic timing.  E16: The Principle of Marginal Economics: Always compare marginal cost to marginal value.  E17: The Sunk Cost Principle: Do not consider money already spent.  E18: The Principle of Buying Information: The value of information is its expected economic value.  E19: The Insurance Principle: Dont pay more for  insurance than the expected loss.  E20: The Newsboy Principle: High probability of failure does not equal bad economics.  E21: The Show Me the Money Principle: To influence financial decisions, speak the language on money.Queueing Principles  Q1: The Principle of Invisible Inventory: Product development inventory is physically and financially invisible.  Q2: The Principle of Queueing Waste: Queues are the root cause of the majority of economic waste in product development.  Q3: The Principle of Queueing Capacity Utilization: Capacity utilization increases queues exponentially.  Q4: The Principle of High-Queue States: Most of the damage done by a queue is caused by high-queue states.  Q5: The Principle of Queueing Variability: Variability increases queues linearly.  Q6: The Principle of Variability Amplification: Operating at high levels of capacity utilization increases variability.  Q7: The Principle of Queueing Structure: Serve pooled demand with reliable high-capacity servers.  Q8: The Principle of Linked Queues: Adjacent queues see arrival or service time variability depending on loading.  Q9: The Principle of Queue Size Optimization: Optimum queue size is an economic tradeoff.  Q10: The Principle of Queueing Discipline: Queue cost is affected by the sequence in which we handle the jobs in the queue.  Q11: The Cumulative Flow Principle: Use CFDs to monitor queues.  Q12: Littles Formula: Wait time = Queue Size/Processing Rate.  Q13: The First Queue Size Control Principle:  Dont control capacity utilization, control queue size.  Q14: The Second Queue Size Control Principle: Dont control cycle time, control queue size.  Q15: The Diffusion Principle: Over time, queues will randomly spin seriously out of control and will remain in this state for long periods.  Q16: The Intervention Principle: We cannot rely on randomness to correct a random queue.Variability Principles  V1: The Principle of Beneficial Variability: Variability can create economic value.  V2: The Principle of Asymmetric Payoffs: Payoff asymmetries enable variability to create economic value.  V3: The Principle of Optimum Variability: Variability should neither be minimized nor maximized.  V4: The Principle of Optimum Failure Rate: Fifty percent failure rate is usually optimum for generating information.  V5: The Principle of Variability Pooling: Overall variation decreases when uncorrelated random tasks are combined.  V6: The Principle of Short-Term Forecasting: Forecasting becomes exponentially easier at short time-horizons.  V7: The Principle of Small Experiments: Many small experiments produce less variation than one big one.  V8: The Repetition Principle: Repetition reduces variation.  V9: The Reuse Principle: Reuse reduces variability.   V10: The Principle of Negative Covariance: We can reduce variance by applying a counterbalancing effect.   V11: The Buffer Principle:Buffers trade money for variability reduction.   V12: The Principle of Variability Consequence: Reducing consequences is usually the best way to reduce the cost of variability.   V13: The Non-linearity Principle: Operate in the linear range of system performance.   V14: The Principle of Variability Substitution: Substitute cheap variability for expensive variability.   V15: The Principle of Iteration Speed: It is usually better to improve iteration speed than defect rate.   V16: The Principle of Variability Displacement: Move variability to the process stage where its cost is lowest. Batch Size Principles  B1: Batch Size Queueing Principle: Reducing batch size reduces cycle time.   B2: The Batch Size Variability Principle: Reducing batch size reduces variability in flow.   B3: The Batch Size Feedback Principle: Reducing batch size accelerates feedback.   B4: The Batch Size Risk Principle: Reducing batch size reduces risk.   B5: The Batch Size Overhead Principle: Reducing batch size reduces overhead.   B6: The Batch Size Efficiency Principle: Large batches reduce efficiency. (  B7: The Psychology Principle of Batch Size: Large batches inherently lower motivation and urgency.   B8: The Batch Size Slippage Principle: Large batches cause exponential cost and schedule growth. (  B9: The Batch Size Death Spiral Principle: Large batches lead to even larger batches.   B10: The Least Common Denominator Principle of Batch Size: The entire batch is limited by its worst element.   B11: The Principle of Batch Size Economics: Economic batch size is a U-curve optimization.   B12: The Principle of Low Transaction Cost: Reducing transaction cost per batch lowers overall costs.   B13: The Principle of Batch Size Diseconomies: Batch size reduction saves much more than you think.   B14: The Batch Size Packing Principle: Small batches allow finer tuning of capacity utilization   B15: The Fluidity Principle: Loose coupling between product subsystems enables small batches.   B16: The Principle of Transport Batches: The most important batch is the transport batch.   B17: The Proximity Principle: Proximity enables small batch sizes.   B18: The Run Length Principle: Short run lengths reduce queues.   B19: The Infrastructure Principle: Good infrastructure enables small batches.   B20: The Principle of Batch Content: Sequence first that which adds value most cheaply.   B21: The Batch Size First Principle: Reduce batch size before you attack bottlenecks.   B22: The Principle of Dynamic Batch Size: Adjust batch size dynamically to respond to changing economics. WIP Constraint Principles  W1: The Principle of WIP Constraints: Constrain WIP to control cycle time and flow.   W2: The Principle of Rate Matching: WIP constraints force rate-matching.   W3: The Principle of Global Constraints: Use global WIP constraints for predictable and permanent bottlenecks.   W4: The Principle of Local Constraints: If possible, constrain local WIP pools.   W5: The Batch Size Decoupling Principle: Use WIP ranges to decouple the batch sizes of adjacent processes.   W6: The Principle of Demand Blocking: Block all demand when WIP reaches its upper limit.   W7: The Principle of WIP Purging: When WIP is high, purge low value projects.   W8: The Principle of Flexible Requirements: Control WIP by shedding requirements.   W9: The Principle of Resource Pulling: Quickly apply extra resources to an emerging queue.   W10: The Principle of Part-Time Resources: Use part-time resources for high variability tasks.   W11: The Big Gun Principle: Pull high-powered experts to emerging bottlenecks.   W12: The Principle of T-Shaped Resources: Develop people who are deep in one area and broad in many.   W13: The Principle of Skill Overlap: Cross train resources at adjacent processes.   W14: The Mix Change Principle: Use upstream mix changes to regulate queue size.   W15: The Aging Principle: Watch the outliers.   W16: The Escalation Principle: Create a preplanned escalation process for outliers.   W17: The Principle of Progressive Throttling: Increase throttling as you approach the queue limit.   W18: The Principle of Differential Service: Differentiate quality of service by workstream.   W19: The Principle of Adaptive WIP Constraints: Adjust WIP constraints as capacity changes.   W20: The Expansion Control Principle: Prevent uncontrolled expansion of work.   W21: The Principle of the Critical Queue: Constrain WIP in the secion of the system where the queue is most expensive.   W22: The Cumulative Reduction Principle: Small WIP reductions accumulate.   W23: The Principle of Visual WIP: Make WIP continuously visible. Flow Control Principles  F1: The Principle of Congestion Collapse: When loading becomes too high, we will see a sudden and catastrophic drop in output.   F2: The Peak Throughput Principle: Control occupancy to sustain high throughput in systems prone to congestion.   F3: The Principle of Visible Congestion: Use forecasts of expected flow time to make congestion visible.   F4: The Principle of Congestion Pricing: Use pricing to reduce demand during congested periods.   F5: The Principle of Periodic Resynchronization: Use a regular cadence to limit the accumulation of variance.   F6: The Cadence Capacity Margin Principle: Provide sufficient capacity margin to enable cadence.   F7: The Cadence Reliability Principle: Use cadence to make waiting times predictable.  F8: The Cadence Batch Size Enabling Principle: Use a regular cadence to enable small batch sizes.   F9: The Principle of Cadenced Meetings: Schedule frequent meetings using a predictable cadence. (  F10: The Synchronization Capacity Margin Principle: To enable synchronization, provide sufficient capacity margin.   F11: The Principle of Multiproject Synchronization: Exploit scale economies by synchronizing work from multiple projects.   F12: The Principle of Cross-Functional Synchronization: Use synchronized events to facilitate cross functional tradeoffs.   F13: The Synchronization Queueing Principle: To reduce queues, synchronize the batch size and timing of adjacent processes.   F14: The Harmonic Principle: Make nested cadences harmonic multiples.   F15: The SJF Scheduling Principle: When delay costs are homogeneous, do the shortest job first.   F16: The HDCF Scheduling Principle: When job durations are homogeneous, do the high cost-of-delay job first.   F17: The WSJF Scheduling Principle: When job durations and delay costs are not homogeneous, use WSJF.   F18: The Local Priority Principle: Priorities are inherently local.   F19: The Round-Robin Principle: When task duration is unknown, time-share capacity.   F20: The Preemption Principle: Only preempt when switching costs are low.   F21: The Principle of Work Matching: Use sequence to match jobs to appropriate resources.   F22: The Principle of Tailored Routing: Select and tailor the sequence of subprocesses to the task at hand.   F23: The Principle of Flexible Routing: Route work based on the current most economic route.   F24: The Principle of Alternate Routes: Develop and maintain alternate routes around points of congestion.   F25: The Principle of Flexible Resources: Use flexible resources to absorb variation.   F26: The Principle of Late Binding: The later we bind demand to resources, the smoother the flow.   F27: The Principle of Local Transparency: Make tasks and resources reciprocally visible at adjacent processes.   F28: The Principle of Preplanned Flexibility: For fast responses, preplan and invest in flexibility.   F29: The Principle of Resource Centralization: Correctly managed, centralized resources can reduce queues.   F30: The Principle of Flow Conditioning: Reduce variability before a bottleneck. Fast Feedback Principles  FF1: The Principle of Maximum Economic Influence: Focus control on project and process parameters with the highest economic influence.   FF2: The Principle of Efficient Control: Control parameters that are both influential and efficient.   FF3: The Principle of Leading Indicators: Select control variables that predict future system behavior.   FF4: The Principle of Balanced Set Points: Set tripwires at points of equal economic impact.   FF5: The Moving Target Principle: Know when to pursue a dynamic goal.   FF6: The Exploitation Principle: Exploit unplanned economic opportunities.  FF7: The Queue Reduction Principle of Feedback: Fast feedback enables smaller queues.   FF8: The Fast Learning Principle: Use fast feedback to make learning faster and more efficient.   FF9: The Principle of Useless Measurement: What gets measured may not get done.   FF10: The First Agility Principle: We dont need long planning horizons when we have a short turning radius.   FF11: The Batch Size Principle of Feedback: Small batches yield fast feedback.   FF12: The Signal to Noise Principle: To detect a smaller signal, reduce the noise.   FF13: The Decision Rule Principle: Control the economic logic behind the decision, not the entire decision.   FF14: The Locality Principal of Feedback: Whenever possible make feedback local.   FF15: The Relief Valve Principle: Have a clear, predetermined relief valve.   FF16: The Principle of Multiple Control Loops: Embed fast control loops inside slow loops.   FF17: The Principle of Controlled Excursions: Keep deviations within the control range.   FF18: The Feedforward Principle: Provide advance notice of heavy arrival rates to minimize queues.   FF19: The Principle of Colocation: Colocation improves almost all aspects of communications.   FF20: The Empowerment Principle of Feedback: Fast feedback gives a sense of control.   FF21: The Hurry-Up-and-Wait Principle: Large queues make it hard to create urgency.   FF22: The Amplification Principle: The human element tends to amplify large excursions.   FF23: The Principle of Overlapping Measurement: To align behaviors, reward people for the work of others.   FF24: The Attention Principle: Time counts more than money. Decentralization Principles  D1: The Second Perishability Principle: Decentralize control for problems and opportunities that age poorly.   D2: The Scale Principle: Centralize control for problems that are infrequent, large, or that have significant economies of scale.   D3: The Principle of Layered Control: Adapt the control approach to emerging information about the problem.   D4: The Opportunistic Principle: Adjust the plan for unplanned obstacles and opportunities.   D5: The Principle of Virtual Centralization: Be able to quickly reorganize decentralized resources to create centralized power.   D6: The Inefficiency Principle: The inefficiency of decentralization can cost less than the value of faster response time.   D7: The Principle of Alignment: There is more value created with overall alignment than local excellence.   D8: The Principle of Mission: Specify the end state, its purpose, and the minimal possible constraints.   D9: The Principle of Boundaries: Establish clear roles and boundaries.   D10: The Main Effort Principle: Designate a main effort and subordinate other activities.   D11: The Principle of Dynamic Alignment: The main effort may shift quickly when conditions change.   D12 The Second Agility Principle: Develop the ability to quickly shift focus.   D13: The Principle of Peer-Level Coordination: Tactical coordination should be local.   D14: The Principle of Flexible Plans: Use simple modular plans.   D15: The Principle of Tactical Reserves: Decentralize a portion of reserves.   D16: The Principle of Early Contact: Make early and meaningful contact with the problem.   D17: The Principle of Decentralized Information: For decentralized decisions, disseminate key information widely.   D18: The Frequency Response Principle: We cant respond faster than our frequency response.   D19: The Quality of Service Principle: When response time is important, measure response time.   D20: The Second Market Principle: Use internal and external markets to decentralize control.   D21: The Principle of Regenerative Initiative: Cultivating initiative enables us to use initiative.   D22: The Principle of Face-to-Face Communication: Exploit the speed and bandwidth of face-to-face communications.   D23: The Trust Principle: Trust is built through experience. (Source:)"
    } ,
  
    {
      "title"    : "Principles of Agile",
      "category" : "Principle",
      "tags"     : "Agile",
      "url"      : "/principle/PrinciplesOfAgile",
      "date"     : "2015-11-17 00:00:00 +0200",
      "content"  : "Primary PrinciplesWe are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:  Individuals and interactions over processes and tools  Working software over comprehensive documentation  Customer collaboration over contract negotiation  Responding to change over following a planThat is, while there is value in the items on the right, we value the items on the left more.Additional 12 Principles  Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.  Welcome changing requirements, even late in development. Agile processes harness change for the customers competitive advantage.  Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.  Business people and developers must work together daily throughout the project.  Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.  The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.  Working software is the primary measure of progress.  Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.  Continuous attention to technical excellence and good design enhances agility.  Simplicitythe art of maximizing the amount of work not doneis essential.  The best architectures, requirements, and designs emerge from self-organizing teams.  At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.For more information, review the Agile archetype.(Source: agilemanifesto.org)"
    } ,
  
    {
      "title"    : "Spine Model - A systemic approach to effective leadership",
      "category" : "News",
      "tags"     : "meta, news",
      "url"      : "/news/agile2015talk",
      "date"     : "2015-10-14 00:00:00 +0200",
      "content"  : "This page has moved."
    } ,
  
    {
      "title"    : "Responding to change over following a plan",
      "category" : "Principle",
      "tags"     : "Agile, Principle",
      "url"      : "/principle/RespondingToChangeOverFollowingAPlan",
      "date"     : "2015-07-19 00:00:00 +0200",
      "content"  : "This is the fourth Principle of the Agile Manifesto."
    } ,
  
    {
      "title"    : "Customer collaboration over contract negotiation",
      "category" : "Principle",
      "tags"     : "Agile, Principle",
      "url"      : "/principle/CustomerCollaborationOverContractNegotiation",
      "date"     : "2015-07-19 00:00:00 +0200",
      "content"  : "This is the thirs Principle of the Agile Manifesto."
    } ,
  
    {
      "title"    : "Working software over comprehensive documentation",
      "category" : "Principle",
      "tags"     : "Agile, Principle",
      "url"      : "/principle/WorkingSoftwareOverComprehensiveDocumentation",
      "date"     : "2015-07-18 00:00:00 +0200",
      "content"  : "This is the second Principle of the Agile Manifesto."
    } ,
  
    {
      "title"    : "Individuals and interactions over processes and tools",
      "category" : "Principle",
      "tags"     : "Agile, Principle",
      "url"      : "/principle/IndividualsAndInteractionsOverProcessesAndTools",
      "date"     : "2015-07-18 00:00:00 +0200",
      "content"  : "This is the first Principle of the Agile Manifesto."
    } ,
  
    {
      "title"    : "Agile Software Development, Manifesto for",
      "category" : "Archetype",
      "tags"     : "Agile, Archetype",
      "url"      : "/archetype/AgileManifesto",
      "date"     : "2015-07-18 00:00:00 +0200",
      "content"  : "OriginOn February 11-13, 2001, at The Lodge at Snowbird ski resort in the Wasatch mountains of Utah, seventeen people met to talk, ski, relax, and try to find common ground and of course, to eat. What emerged was the Agile Software Development Manifesto. Representatives from Extreme Programming, SCRUM, DSDM, Adaptive Software Development, Crystal, Feature-Driven Development, Pragmatic Programming, and others sympathetic to the need for an alternative to documentation driven, heavyweight software development processes convened.(Read the rest here: History: The Agile Manifesto)NeedsFrom Jim Highsmith, in History: The Agile ManifestoIn order to succeed in the new economy, to move aggressively into the era of e-business, e-commerce, and the web, companies have to rid themselves of their Dilbert manifestations of make-work and arcane policies. While the Manifesto provides some specific ideas, there is a deeper theme that drives many, but not all, to be sure, members of the alliance. At the close of the two-day meeting, Bob Martin joked that he was about to make a mushy statement. But while tinged with humor, few disagreed with Bobs [Robert Martins] sentiments that we all felt privileged to work with a group of people who held a set of compatible values, a set of values based on trust and respect for each other and promoting organizational models based on people, collaboration, and building the types of organizational communities in which we [the manifesto authors] would want to work. At the core, I [Jim Highsmith] believe Agile Methodologists are really about mushy stuff, about delivering good products to customers by operating in an environment that does more than talk about people as our most important asset but actually acts as if people were the most important, and lose the word asset. So in the final analysis, the meteoric rise of interest in and sometimes tremendous criticism of Agile Methodologies is about the mushy stuff of values and culture.The Agile movement is not anti-methodology, in fact, many of us want to restore credibility to the word methodology. We want to restore a balance. We embrace modeling, but not in order to file some diagram in a dusty corporate repository. We embrace documentation, but not hundreds of pages of never-maintained and rarely-used tomes. We plan, but recognize the limits of planning in a turbulent environment. Those who would brand proponents of XP or SCRUM or any of the other Agile Methodologies as hackers are ignorant of both the methodologies and the original definition of the term hacker.(Read the rest here: History: The Agile Manifesto)ValuesSystemic ValuesThe Manifesto for Agile Software Development does not explicitly state any Values (by the Spine Model definition). You can infer them though. For example the first Principle below could be interpreted as valuing People higher than Process, or perhaps Effectiveness higher than Efficiency. The second Principle could be abstracted to valuing Feedback higher than Compliance. Personal ValuesRobert Martin, from History: The Agile ManifestoWe all felt privileged to work with a group of people who held a set of compatible values, a set of values based on trust and respect for each other and promoting organizational models based on people, collaboration, and building the types of organizational communities in which we would want to work.PrinciplesPrimary PrinciplesWe are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:  Individuals and interactions over processes and tools  Working software over comprehensive documentation  Customer collaboration over contract negotiation  Responding to change over following a planThat is, while there is value in the items on the right, we value the items on the left more.Additional 12 Principles  Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.  Welcome changing requirements, even late in development. Agile processes harness change for the customers competitive advantage.  Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.  Business people and developers must work together daily throughout the project.  Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.  The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.  Working software is the primary measure of progress.  Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.  Continuous attention to technical excellence and good design enhances agility.  Simplicitythe art of maximizing the amount of work not doneis essential.  The best architectures, requirements, and designs emerge from self-organizing teams.  At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.(Source: agilemanifesto.org)PracticesThe manifesto does not prescribe or give opinions on any specific Practices.ToolsThe manifesto does not prescribe or give opinions on any specific Tools."
    } ,
  
    {
      "title"    : "Visualize and limit WIP, reduce batch sizes, and manage queue lengths",
      "category" : "Principle",
      "tags"     : "Flow, SAFe, Principle",
      "url"      : "/principle/VisualizeAndLimitWIPReduceBatchSizesAndManageQueueLengths",
      "date"     : "2015-06-09 00:00:00 +0200",
      "content"  : "This is the sixth Principle of SAFe.More info here."
    } ,
  
    {
      "title"    : "Unlock the intrinsic motivation of knowledge workers",
      "category" : "Principle",
      "tags"     : "SAFe, Principle",
      "url"      : "/principle/UnlockTheIntrinsicMotivationOfKnowledgeWorkers",
      "date"     : "2015-06-09 00:00:00 +0200",
      "content"  : "This is the eighth Principle of SAFe.More info here."
    } ,
  
    {
      "title"    : "Take an Economic View",
      "category" : "Principle",
      "tags"     : "Flow, SAFe, Principle",
      "url"      : "/principle/TakeAnEconomicView",
      "date"     : "2015-06-09 00:00:00 +0200",
      "content"  : "This is the first Principle of SAFe.More info here."
    } ,
  
    {
      "title"    : "Decentralize decision-making",
      "category" : "Principle",
      "tags"     : "Flow, SAFe, Principle",
      "url"      : "/principle/DecentralizeDecisionMaking",
      "date"     : "2015-06-09 00:00:00 +0200",
      "content"  : "This is the ninth Principle of SAFe.More info here."
    } ,
  
    {
      "title"    : "Build Incrementally With Fast Integrated Learning Cycles",
      "category" : "Principle",
      "tags"     : "SAFe, Principle",
      "url"      : "/principle/BuildIncrementallyWithFastIntegratedLearningCycles",
      "date"     : "2015-06-09 00:00:00 +0200",
      "content"  : "This is the fourth Principle of SAFe.More info here."
    } ,
  
    {
      "title"    : "Base Milestones On Objective Evaluation Of Working Systems",
      "category" : "Principle",
      "tags"     : "SAFe, Principle",
      "url"      : "/principle/BaseMilestonesOnObjectiveEvaluationOfWorkingSystems",
      "date"     : "2015-06-09 00:00:00 +0200",
      "content"  : "This is the fifth Principle of SAFe.More info here."
    } ,
  
    {
      "title"    : "Assume Variability; Preserve Options",
      "category" : "Principle",
      "tags"     : "Flow, SAFe, Principle",
      "url"      : "/principle/AssumeVariabilityPreserveOptions",
      "date"     : "2015-06-09 00:00:00 +0200",
      "content"  : "This is the third Principle of SAFe.More info here."
    } ,
  
    {
      "title"    : "Apply Systems Thinking",
      "category" : "Principle",
      "tags"     : "Flow, SAFe, Principle",
      "url"      : "/principle/ApplySystemsThinking",
      "date"     : "2015-06-09 00:00:00 +0200",
      "content"  : "This is the second Principle of SAFe.More info here."
    } ,
  
    {
      "title"    : "Apply cadence, synchronize with cross-domain planning",
      "category" : "Principle",
      "tags"     : "Flow, SAFe, Principle",
      "url"      : "/principle/ApplyCadenceSynchronizeWithCrossDomainPlanning",
      "date"     : "2015-06-09 00:00:00 +0200",
      "content"  : "This is the seventh Principle of SAFe.More info here."
    } ,
  
    {
      "title"    : "Can I contribute to Spine Wiki?",
      "category" : "FAQ",
      "tags"     : "FAQ",
      "url"      : "/faq/Contribute",
      "date"     : "2015-06-01 00:00:00 +0200",
      "content"  : "We welcome contributions to the Spine Wiki. Please take a look at the guidelines on how to contribute."
    } ,
  
    {
      "title"    : "Team Retrospective",
      "category" : "Practice",
      "tags"     : "Scrum, Practice",
      "url"      : "/practice/TeamRetrospective",
      "date"     : "2015-05-30 00:00:00 +0200",
      "content"  : "What is it?One of the most important practices for teams that are applying the Principle of Inspect and Adapt.Why use it?When to use it?What could it look like?AssumptionsSprint Retrospectives in SCRUMScrum prescribes the use of Retrospectives, and describes them in the official Scrum Guide as follows:The Sprint Retrospective is an opportunity for the Scrum Team to inspect itself and create a plan for improvements to be enacted during the next Sprint.The Sprint Retrospective occurs after the Sprint Review and prior to the next Sprint Planning. This is a three-hour time-boxed meeting for one-month Sprints. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches all to keep it within the time-box. The Scrum Master participates as a peer team member in the meeting from the accountability over the Scrum process.The purpose of the Sprint Retrospective is to:  Inspect how the last Sprint went with regards to people, relationships, process, and tools;  Identify and order the major items that went well and potential improvements; and,  Create a plan for implementing improvements to the way the Scrum Team does its work.The Scrum Master encourages the Scrum Team to improve, within the Scrum process framework, its development process and practices to make it more effective and enjoyable for the next Sprint. During each Sprint Retrospective, the Scrum Team plans ways to increase product quality by adapting the definition of Done as appropriate.By the end of the Sprint Retrospective, the Scrum Team should have identified improvements that it will implement in the next Sprint. Implementing these improvements in the next Sprint is the adaptation to the inspection of the Scrum Team itself. Although improvements may be implemented at any time, the Sprint Retrospective provides a formal opportunity to focus on inspection and adaptation.Source: The Official Scrum Guide"
    } ,
  
    {
      "title"    : "Team Cognitive Load Tracker",
      "category" : "Tool",
      "tags"     : "Tool",
      "url"      : "/tool/CognitiveLoadTracker",
      "date"     : "2015-05-30 00:00:00 +0200",
      "content"  : "What is it?A way of gathering data on what work is interrupting people on a team and consuming their time and attention.Why use it?Cognitive capacity is finite. If a team is experiencing many unscheduled interruptions then their ability to do their scheduled work will be restricted.When to use it?When the team feels that they are unable to focus on the work they have committed to because of many unpredictable and unsheduled interruptions.What could it look like?A physical board in the team area with named swim lanes for each individual on the team. Two columns, Interruption and Done to show what the person has been interrupted for and whether or not they have done it. Each team member keeps a pad of postits on their desk and writes one out and sticks it on the board as they get interrupted by unscheduled work. Weve found the board can get quite full in a two week period, so the little micro-postits work best to save space.After two weeks, probably in the teams Retrospective if they have one, the team then uses the items on the board to try and uncover root causes for interruptions, patterns or other insights. They then try and use this data to pick actions to address the situation.For example if many interruptions are for user support they might decide to build a particular feature to enable users to help themselves with a certain type of recurring issue. Or, they might decide to have a weekly support rotation where one team member absorbs all the interruptions and allows the rest of the team to focus.AssumptionsUse of this tool assumes that the team is attempting to manage their flow of work to be more effective and accurately forecast their capacity to complete work.You could of course apply the tool to yourself, to uncover your own interruptions."
    } ,
  
    {
      "title"    : "Human needs according to NVC",
      "category" : "Need",
      "tags"     : "NVC, Need",
      "url"      : "/need/NVCNeeds",
      "date"     : "2015-05-28 00:00:00 +0200",
      "content"  : "According to NVC, humans all have the following needsConnection  acceptance  affection  appreciation  belonging  cooperation  communication  closeness  community  companionship  compassion  consideration  consistency  empathy  inclusion  intimacy  love  mutuality  nurturing  respect/self-respect  safety  security  stability  support  to know and be known  to see and be seen  to understand and be understood  trust  warmthHonesty  authenticity  integrity  presencePlay  joy  humorPeace  beauty  communion  ease  equality  harmony  inspiration  orderPhysical Well-being  air  food  movement/exercise  rest/sleep  sexual expression  safety  shelter  touch  waterMeaning  awareness  celebration of life  challenge  clarity  competence  consciousness  contribution  creativity  discovery  efficacy  effectiveness  growth  hope  learning  mourning  participation  purpose  self-expression  stimulation  to matter  understandingAutonomy  choice  freedom  independence  space  spontaneity"
    } ,
  
    {
      "title"    : "Pull Work Through the System",
      "category" : "Principle",
      "tags"     : "Principle",
      "url"      : "/principle/PullWorkThroughTheSystem",
      "date"     : "2015-05-24 00:00:00 +0200",
      "content"  : "To Do"
    } ,
  
    {
      "title"    : "Heuristics",
      "category" : "Explanation",
      "tags"     : "Explanation",
      "url"      : "/explanation/Heuristics",
      "date"     : "2015-05-24 00:00:00 +0200",
      "content"  : "System boundaries can be put in place by providing heuristic rules to govern a particular principle.People tend to remember heuristic better when they come in threes. For example we often use these three for teams:  Increase feedback  Decrease batch size   Pull work through the systemThis does not tell teams what Practices to use, however they can be measured against whether or not they are applying the Principles in a desirable way.See the Path to Agile Mastery FAQ article for more some more in depth exploration of when heuristics are appropriate."
    } ,
  
    {
      "title"    : "Batch Size",
      "category" : "Principle",
      "tags"     : "Flow, Principle",
      "url"      : "/principle/BatchSize",
      "date"     : "2015-05-24 00:00:00 +0200",
      "content"  : "Optimum batch sizeTo DoWhat to learn next  coming soon  coming soon"
    } ,
  
    {
      "title"    : "Kanban",
      "category" : "Archetype",
      "tags"     : "Archetype",
      "url"      : "/archetype/Kanban",
      "date"     : "2015-05-23 00:00:00 +0200",
      "content"  : "To Do"
    } ,
  
    {
      "title"    : "Feature Driven Development (FDD)",
      "category" : "Archetype",
      "tags"     : "Archetype",
      "url"      : "/archetype/FDD",
      "date"     : "2015-05-23 00:00:00 +0200",
      "content"  : "To Do"
    } ,
  
    {
      "title"    : "Dynamic Systems Development Method (DSDM)",
      "category" : "Archetype",
      "tags"     : "Archetype",
      "url"      : "/archetype/DSDM",
      "date"     : "2015-05-23 00:00:00 +0200",
      "content"  : "To Do"
    } ,
  
    {
      "title"    : "Disciplined Agile Delivery (DAD)",
      "category" : "Archetype",
      "tags"     : "Archetype",
      "url"      : "/archetype/DAD",
      "date"     : "2015-05-23 00:00:00 +0200",
      "content"  : "NeedsThe Disciplined Agile Delivery (DAD) process decision framework  is a people-first, learning-oriented hybrid agile approach to IT solution delivery. It has a risk-value delivery lifecycle, is goal-driven, is enterprise aware, and is scalable.Source: The Official Introduction to DADTo Do"
    } ,
  
    {
      "title"    : "Crystal",
      "category" : "Archetype",
      "tags"     : "Archetype",
      "url"      : "/archetype/Crystal",
      "date"     : "2015-05-23 00:00:00 +0200",
      "content"  : "To Do"
    } ,
  
    {
      "title"    : "Core Working Hours",
      "category" : "Practice",
      "tags"     : "Practice",
      "url"      : "/practice/CoreWorkingHours",
      "date"     : "2015-05-23 00:00:00 +0200",
      "content"  : "Core working hours are the block of hours in which the members of the team agree to be working as a team every working day. It is useful to get upfront agreement on when these are to ensure that the team has productive working time together.What Core Working Hours means me (by Danie Roux)Core Working Hours used to mean something. I realise that this makesme sound like an extremely old man, but let me explain:During the core working hours, we were productive. We produced something of value to the team and company. Things that werent considered adding value were e-mails, meetings, taking calls and fielding interruptions.In order to ensure we were productive and adding value during core working hours, we closed our office doors, turned off our cell phones, unplugged the office phones and closed the instant messaging applications. Then we tackled the work in front of us with gusto.That is what we mean by Core Working Hours. The hours the team agree to be together, working."
    } ,
  
    {
      "title"    : "Openness",
      "category" : "Value",
      "tags"     : "Value",
      "url"      : "/value/Openness",
      "date"     : "2015-05-14 00:00:00 +0200",
      "content"  : "As defined in SCRUMAs we work together, we express how were doing, whats in our way, and our concerns so they can be addressed.(via scrumalliance.org)"
    } ,
  
    {
      "title"    : "Focus",
      "category" : "Value",
      "tags"     : "Value",
      "url"      : "/value/Focus",
      "date"     : "2015-05-14 00:00:00 +0200",
      "content"  : "As defined in SCRUMBecause we focus on only a few things at a time, we work well together and produce excellent work. We deliver valuable items sooner.(via scrumalliance.org)"
    } ,
  
    {
      "title"    : "Commitment",
      "category" : "Value",
      "tags"     : "Value",
      "url"      : "/value/Commitment",
      "date"     : "2015-05-14 00:00:00 +0200",
      "content"  : "As defined in SCRUMBecause we have great control over our own destiny, we are more committed to success.(via scrumalliance.org)"
    } ,
  
    {
      "title"    : "Simplicity",
      "category" : "Value",
      "tags"     : "Value",
      "url"      : "/value/Simplicity",
      "date"     : "2015-05-13 00:00:00 +0200",
      "content"  : "As defined in eXtreme Programming (XP)We will do what is needed and asked for, but no more. This will maximize the value created for the investment made to date. We will take small simple steps to our goal and mitigate failures as they happen. We will create something we are proud of and maintain it long term for reasonable costs. (via extremeprogramming.org/values)"
    } ,
  
    {
      "title"    : "Respect",
      "category" : "Value",
      "tags"     : "Value",
      "url"      : "/value/Respect",
      "date"     : "2015-05-13 00:00:00 +0200",
      "content"  : "As defined in eXtreme Programming (XP)Everyone gives and feels the respect they deserve as a valued team member. Everyone contributes value even if its simply enthusiasm. Developers respect the expertise of the customers and vice versa. Management respects our right to accept responsibility and receive authority over our own work.(via extremeprogramming.org)As defined in SCRUMAs we work together, sharing successes and failures, we come to respect each other and to help each other become worthy of respect.(via scrumalliance.org)"
    } ,
  
    {
      "title"    : "Feedback",
      "category" : "Value",
      "tags"     : "Value",
      "url"      : "/value/Feedback",
      "date"     : "2015-05-13 00:00:00 +0200",
      "content"  : "As defined in eXtreme Programming (XP)We will take every iteration commitment seriously by delivering working software. We demonstrate our software early and often then listen carefully and make any changes needed. We will talk about the project and adapt our process to it, not the other way around.(via extremeprogramming.org/values)"
    } ,
  
    {
      "title"    : "Courage",
      "category" : "Value",
      "tags"     : "Value",
      "url"      : "/value/Courage",
      "date"     : "2015-05-13 00:00:00 +0200",
      "content"  : "As defined in eXtreme Programming (XP)We will tell the truth about progress and estimates. We dont document excuses for failure because we plan to succeed. We dont fear anything because no one ever works alone. We will adapt to changes when ever they happen.(via extremeprogramming.org/values)As defined in SCRUMBecause we work as a team, we feel supported and have more resources at our disposal. This gives us the courage to undertake greater challenges.(via scrumalliance.org)"
    } ,
  
    {
      "title"    : "Capacity of a work system",
      "category" : "Principle",
      "tags"     : "Flow, Principle",
      "url"      : "/principle/CapacityOfAWorkSystem",
      "date"     : "2015-05-13 00:00:00 +0200",
      "content"  : "Counterintuitively, the way for more work to be completed in a work system is not for everyone to work harder. You first need to understand the capacity of the system to move the work from start to finishedWhat to learn next  coming soon  coming soonTo Do"
    } ,
  
    {
      "title"    : "Communication",
      "category" : "Value",
      "tags"     : "Value",
      "url"      : "/value/communication",
      "date"     : "2015-05-12 00:00:00 +0200",
      "content"  : "As defined in eXtreme Programming (XP)Everyone is part of the team and we communicate face to face daily. We will work together on everything from requirements to code. We will create the best solution to our problem that we can together.(via extremeprogramming.org/values)"
    } ,
  
    {
      "title"    : "Scrum Product Owner",
      "category" : "Practice",
      "tags"     : "Scrum, Practice",
      "url"      : "/practice/ScrumProductOwner",
      "date"     : "2015-05-12 00:00:00 +0200",
      "content"  : "The Product Owner is responsible for maximizing the value of the product and the work of the Development Team. How this is done may vary widely across organizations, SCRUM Teams, and individuals.The Product Owner is the sole person responsible for managing the Product Backlog. Product Backlog management includes:  Clearly expressing Product Backlog items;  Ordering the items in the Product Backlog to best achieve goals and missions;  Optimizing the value of the work the Development Team performs;  Ensuring that the Product Backlog is visible, transparent, and clear to all, and shows what the Scrum Team will work on next; and,  Ensuring the Development Team understands items in the Product Backlog to the level needed.The Product Owner may do the above work, or have the Development Team do it. However, the Product Owner remains accountable.The Product Owner is one person, not a committee. The Product Owner may represent the desires of a committee in the Product Backlog, but those wanting to change a Product Backlog items priority must address the Product Owner.For the Product Owner to succeed, the entire organization must respect his or her decisions. The Product Owners decisions are visible in the content and ordering of the Product Backlog. No one is allowed to tell the Development Team to work from a different set of requirements, and the Development Team isnt allowed to act on what anyone else says.Source: The Official Scrum Guide"
    } ,
  
    {
      "title"    : "Scrum Master",
      "category" : "Practice",
      "tags"     : "Scrum, Practice",
      "url"      : "/practice/ScrumMaster",
      "date"     : "2015-05-12 00:00:00 +0200",
      "content"  : "The Scrum Master is responsible for ensuring SCRUM is understood and enacted. Scrum Masters do this by ensuring that the Scrum Team adheres to Scrum theory, practices, and rules.The Scrum Master is a servant-leader for the Scrum Team. The Scrum Master helps those outside the Scrum Team understand which of their interactions with the Scrum Team are helpful and which arent. The Scrum Master helps everyone change these interactions to maximize the value created by the Scrum Team.Scrum Master Service to the Product OwnerThe Scrum Master serves the Product Owner in several ways, including:  Finding techniques for effective Product Backlog management;  Helping the Scrum Team understand the need for clear and concise Product Backlog items;  Understanding product planning in an empirical environment;  Ensuring the Product Owner knows how to arrange the Product Backlog to maximize value;  Understanding and practicing agility; and,  Facilitating Scrum events as requested or needed.Scrum Master Service to the Development TeamThe Scrum Master serves the Development Team in several ways, including:  Coaching the Development Team in self-organization and cross-functionality;  Helping the Development Team to create high-value products;  Removing impediments to the Development Teams progress;  Facilitating Scrum events as requested or needed; and,  Coaching the Development Team in organizational environments in which Scrum is not yet fully adopted and understood.Scrum Master Service to the OrganizationThe Scrum Master serves the organization in several ways, including:  Leading and coaching the organization in its Scrum adoption;  Planning Scrum implementations within the organization;  Helping employees and stakeholders understand and enact Scrum and empirical product development;  Causing change that increases the productivity of the Scrum Team; and,  Working with other Scrum Masters to increase the effectiveness of the application of Scrum in the organization.Source: The Official Scrum Guide"
    } ,
  
    {
      "title"    : "Resource vs Flow Optimisation",
      "category" : "Principle",
      "tags"     : "Flow, Principle",
      "url"      : "/principle/ResourceVsFlowOptimisation",
      "date"     : "2015-05-12 00:00:00 +0200",
      "content"  : "To Do"
    } 
  
  ,
  
   {
     
        "title"    : "Archetypes",
        "category" : "",
        "tags"     : "",
        "url"      : "/archetypes.html",
        "date"     : "",
        "content"  : "                                                      Agile Software Development, Manifesto for                                                          Crystal                                                          Disciplined Agile Delivery (DAD)                                                          Dynamic Systems Development Method (DSDM)                                                          Feature Driven Development (FDD)                                                          Kanban                                                          Large-Scale Scrum (LeSS)                                                          Scaled Agile Framework (SAFe)                                                          Scrum                                                          eXtreme Programming (XP)        To learn about the Archetypes aspect of the Spine Model, go to spinemodel.info/Archetypes"
     
   } ,
  
   {
     
        "title"    : "Atom Feed",
        "category" : "",
        "tags"     : "",
        "url"      : "/atom.xml",
        "date"     : "",
        "content"  : "  Spine Wiki   2017-04-23T09:56:25+02:00 http://spine.wiki    Kevin Trethewey, Danie Roux, Joanne Perold and Collaborators   spine@driven.email      How do I learn about the Spine Model?      2017-04-23T00:00:00+02:00   http://spine.wiki/faq/Learn   &amp;lt;p&amp;gt;This site is a wiki catalog for the Spine Model. The model itself is described at &amp;lt;a href=&amp;quot;http://spinemodel.info&amp;quot;&amp;gt;spinemodel.info&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      How to Contribution to spine.wiki      2017-04-23T00:00:00+02:00   http://spine.wiki/explanation/Contribution   &amp;lt;p&amp;gt;  First off, thanks for taking the time to contribute! Were really glad youre reading this, because we need volunteers to help the wiki come to fruition.   &amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;important-resources&amp;quot;&amp;gt;Important resources:&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;There is a SpineModel slack group (&amp;lt;a href=&amp;quot;https://spinemodel.slack.com/&amp;quot;&amp;gt;spinemodel.slack.com&amp;lt;/a&amp;gt;). &amp;lt;a href=&amp;quot;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#116;&amp;amp;#111;:&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#063;&amp;amp;#115;&amp;amp;#117;&amp;amp;#098;&amp;amp;#106;&amp;amp;#101;&amp;amp;#099;&amp;amp;#116;&amp;amp;#061;&amp;amp;#080;&amp;amp;#108;&amp;amp;#101;&amp;amp;#097;&amp;amp;#115;&amp;amp;#101;&amp;amp;#032;&amp;amp;#097;&amp;amp;#100;&amp;amp;#100;&amp;amp;#032;&amp;amp;#109;&amp;amp;#101;&amp;amp;#032;&amp;amp;#116;&amp;amp;#111;&amp;amp;#032;&amp;amp;#116;&amp;amp;#104;&amp;amp;#101;&amp;amp;#032;&amp;amp;#083;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#077;&amp;amp;#111;&amp;amp;#100;&amp;amp;#101;&amp;amp;#108;&amp;amp;#032;&amp;amp;#083;&amp;amp;#108;&amp;amp;#097;&amp;amp;#099;&amp;amp;#107;&amp;amp;#032;&amp;amp;#071;&amp;amp;#114;&amp;amp;#111;&amp;amp;#117;&amp;amp;#112;&amp;amp;#038;&amp;amp;#098;&amp;amp;#111;&amp;amp;#100;&amp;amp;#121;&amp;amp;#061;&amp;amp;#084;&amp;amp;#104;&amp;amp;#097;&amp;amp;#110;&amp;amp;#107;&amp;amp;#115;&amp;amp;#033;&amp;quot;&amp;gt;Send us an email to get invited&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;You can follow &amp;lt;a href=&amp;quot;http://www.twitter.com/spinemodel&amp;quot;&amp;gt;@spinemodel on twitter&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;If youre familiar with GitHub, &amp;lt;a href=&amp;quot;https://github.com/SpineWiki/spinewiki.github.io&amp;quot;&amp;gt;the repository for this site is here&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;If youd like to send us an email directly, use &amp;lt;a href=&amp;quot;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#116;&amp;amp;#111;:&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;quot;&amp;gt;&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;did-you-find-a-bugmistakebroken-link&amp;quot;&amp;gt;Did you find a bug/mistake/broken link?&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Please report it via &amp;lt;a href=&amp;quot;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#116;&amp;amp;#111;:&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;quot;&amp;gt;&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;do-you-intend-to-add-a-new-page-or-change-an-existing-one&amp;quot;&amp;gt;Do you intend to add a new page or change an existing one?&amp;lt;/h1&amp;gt;&amp;lt;h2 id=&amp;quot;easiest-way&amp;quot;&amp;gt;Easiest Way&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#116;&amp;amp;#111;:&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;quot;&amp;gt;Email your contribution to us&amp;lt;/a&amp;gt;. The preferred format is &amp;lt;a href=&amp;quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&amp;quot;&amp;gt;markdown&amp;lt;/a&amp;gt;, but any text format is accepted (Word, Pdf, even plain text in your email). Well credit you on the page(s) you contribute to.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;for-those-familiar-with-using-github-and-jekyll&amp;quot;&amp;gt;For those familiar with using GitHub and Jekyll&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Spine.wiki is a static &amp;lt;a href=&amp;quot;https://jekyllrb.com/&amp;quot;&amp;gt;jekyll&amp;lt;/a&amp;gt; site.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;You add new pages by creating a new markdown file in the _posts folder on the &amp;lt;em&amp;gt;develop&amp;lt;/em&amp;gt; branch (master branch contains the generated site, develop branch has the raw files). Starting from a copy of an existing file is easiest. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Fork the &amp;lt;a href=&amp;quot;https://github.com/SpineWiki/spinewiki.github.io&amp;quot;&amp;gt;spine.wiki repo from GitHub&amp;lt;/a&amp;gt; and send a pull request with your contribution. &amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;style-conventions&amp;quot;&amp;gt;Style Conventions&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Spine.wiki has been developed with the following values, keep them in mind when contributing:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;em&amp;gt;Precise&amp;lt;/em&amp;gt; - Short, concise descriptions of various parts of Spine Models.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;em&amp;gt;Simple&amp;lt;/em&amp;gt; - Avoid jargon where plain language will do. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;em&amp;gt;Shallow&amp;lt;/em&amp;gt; - Create a map, not an archive. Rather than duplicating content from other sources, add the relevant snippet and link to the source.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;welcome&amp;quot;&amp;gt;Welcome!&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Spine.wiki is a volunteer effort. We encourage you to pitch in and &amp;lt;a href=&amp;quot;https://spinemodel.slack.com/x-172600838673-172600869697/signup&amp;quot;&amp;gt;join the team&amp;lt;/a&amp;gt;!&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Thanks!   &amp;lt;/p&amp;gt;      eXtreme Programming (XP)      2017-04-22T00:00:00+02:00   http://spine.wiki/archetype/XP   &amp;lt;h1 id=&amp;quot;origin&amp;quot;&amp;gt;Origin&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;The term XP predates the term Agile by several years. XP stands for Extreme Programming, and is a suite of Practices, Principles, and Values invented by &amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/Kent_Beck&amp;quot;&amp;gt;Kent Beck&amp;lt;/a&amp;gt; in the late 90s.&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;learning-it&amp;quot;&amp;gt;Learning It&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Our recommended way of learning XP is through&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0321278658&amp;quot;&amp;gt;[Book] Extreme Programming Explained: Embrace Change, 2nd Edition&amp;lt;/a&amp;gt; - Kent Beck&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming/&amp;quot;&amp;gt;What is Extreme Programming?&amp;lt;/a&amp;gt; - Ron Jefferies&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/&amp;quot;&amp;gt;Extreme Programming:A gentle introduction&amp;lt;/a&amp;gt; - Don Wells&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;xp-spine&amp;quot;&amp;gt;XP Spine&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;From the perspective of prospective users of eXtreme Programming&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;need-where-might-it-be-used&amp;quot;&amp;gt;Need (Where might it be used?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Extreme Programming is a discipline of software development based on values of simplicity, communication, feedback, courage, and respect. It works by bringing the whole team together in the presence of simple practices, with enough feedback to enable the team to see where they are and to tune the practices to their unique situation.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming/&amp;quot;&amp;gt;Source: What is Extreme Programming?&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;values-what-does-it-optimise-for&amp;quot;&amp;gt;Values (What does it optimise for?)&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Simplicity&amp;quot;&amp;gt;Simplicity&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Communication&amp;quot;&amp;gt;Communication&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Feedback&amp;quot;&amp;gt;Feedback&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Respect&amp;quot;&amp;gt;Respect&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Courage&amp;quot;&amp;gt;Courage&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;principles-what-is-it-based-on&amp;quot;&amp;gt;Principles (What is it based on?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;See &amp;lt;a href=&amp;quot;/principle/PrinciplesOfXP&amp;quot;&amp;gt;XP Principles&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices-what-does-it-suggest-you-do&amp;quot;&amp;gt;Practices (What does it suggest you do?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;XPs philosophy on &amp;lt;a href=&amp;quot;/practices.html&amp;quot;&amp;gt;Practices&amp;lt;/a&amp;gt; is very non-prescriptive, and advises an explorative approach, based on its &amp;lt;a href=&amp;quot;/principle/PrinciplesOfXP&amp;quot;&amp;gt;Principles&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;/value/ValuesOfXP&amp;quot;&amp;gt;Values&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For a broad list see &amp;lt;a href=&amp;quot;/practice/PracticesOfXP&amp;quot;&amp;gt;XP Practices&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;tools-what-does-it-suggest-you-use&amp;quot;&amp;gt;Tools (What does it suggest you use?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;XP does not explicitly recommend any &amp;lt;a href=&amp;quot;/tools.html&amp;quot;&amp;gt;Tools&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      To Do      2017-04-22T00:00:00+02:00   http://spine.wiki/explanation/TODO   &amp;lt;p&amp;gt;Many of the pages and sections on this site have yet to be fleshed out. We felt that since the page structure of the site is as informative as the content, that it was valuable to publish incomplete pages.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;If you would like to contribute to any of the pages or add new ones please contact &amp;lt;a href=&amp;quot;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#116;&amp;amp;#111;:&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;quot;&amp;gt;Us&amp;lt;/a&amp;gt;, or use &amp;lt;a href=&amp;quot;https://github.com/SpineWiki/spinewiki.github.io&amp;quot;&amp;gt;GitHub&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Scrum      2017-04-22T00:00:00+02:00   http://spine.wiki/archetype/Scrum   &amp;lt;h1 id=&amp;quot;origin&amp;quot;&amp;gt;Origin&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Jeff Sutherland and Ken Schwaber conceived the Scrum process in the early 90s. They codified Scrum in 1995 in order to present it at the Oopsla conference in Austin, Texas (US) and published the paper SCRUM Software Development Process.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Ken and Jeff inherited the name Scrum from the 1986 groundbreaking paper The New New Product Development Game by Takeuchi and Nonaka, two acknowledged management thinkers. With the term Scrum Nonaka and Takeuchi referred to the game of rugby to stress the importance of teams and some analogies between a team sport like rugby and being successful in the game of new product development. The research described in their paper showed that outstanding performance in the development of new, complex products is achieved when teams, as small and self-organizing units of people, are fed with objectives, not with tasks. The best teams are those that are given direction within which they have room to devise their own tactics on how to best head towards their joint objective. Teams require autonomy to achieve excellence.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/history.html&amp;quot;&amp;gt;Source: The History of Scrum&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;learning-it&amp;quot;&amp;gt;Learning It&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Our recommended way of learning scrum is through&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://scrumprimer.org/&amp;quot;&amp;gt;Scrum Primer&amp;lt;/a&amp;gt; - Deemer, Benefield, Larman, Vodde&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/&amp;quot;&amp;gt;Scrum Guide&amp;lt;/a&amp;gt; - Sutherland, Schwaber&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;scrum-spine&amp;quot;&amp;gt;Scrum Spine&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;From the perspective of prospective users of Scrum&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;need-where-might-it-be-used&amp;quot;&amp;gt;Need (Where might it be used?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Scrum describes itself as:&amp;lt;/p&amp;gt;&amp;lt;blockquote&amp;gt;  &amp;lt;p&amp;gt;A framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value.&amp;lt;/p&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/docs/scrumguide/v1/scrum-guide-us.pdf&amp;quot;&amp;gt;Source: The Official Scrum Guide&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;values-what-does-it-optimise-for&amp;quot;&amp;gt;Values (What does it optimise for?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Though not in mentioned in the Official Scrum Guide, there are official sources that mention five values:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Focus&amp;quot;&amp;gt;Focus&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Courage&amp;quot;&amp;gt;Courage&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Openness&amp;quot;&amp;gt;Openness&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Commitment&amp;quot;&amp;gt;Commitment&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Respect&amp;quot;&amp;gt;Respect&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;principles-what-is-it-based-on&amp;quot;&amp;gt;Principles (What is it based on?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices-what-does-it-suggest-you-do&amp;quot;&amp;gt;Practices (What does it suggest you do?)&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Practice/ScrumMaster&amp;quot;&amp;gt;Scrum Master&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Practice/ScrumProductOwner&amp;quot;&amp;gt;Product Owner&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Practice/TeamRetrospective&amp;quot;&amp;gt;Sprint Retrospective&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;tools-what-does-it-suggest-you-use&amp;quot;&amp;gt;Tools (What does it suggest you use?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Scrum does not explicitly recommend any &amp;lt;a href=&amp;quot;/tools.html&amp;quot;&amp;gt;Tools&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Scaled Agile Framework (SAFe)      2017-04-22T00:00:00+02:00   http://spine.wiki/archetype/SAFe   &amp;lt;h2 id=&amp;quot;origin&amp;quot;&amp;gt;Origin&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Dean Leffingwell describes the origin of SAFe as follows&amp;lt;/p&amp;gt;&amp;lt;blockquote&amp;gt;  &amp;lt;p&amp;gt;Over the last few years, Ive worked extensively with a number of other professionals (including Drew Jemilo, Colin ONeill, Alex Yakyma, Mauricio Zamora) in the implementation of a number of large enterprise lean|agile transformations. This collaboration has resulted in many back and forth discussions around implementation of the Scaled Agile Framework. To date, this framework has been elaborated primarily in my books Agile Software Requirements, Scaling Software Agility, and blog).&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;Recently, we decided to formalize our collaboration with the intent of making the framework public-facing and more readily available to a larger audience, and we have also committed to developing certain extensions and enhancements to the framework that have presented themselves as the marketplace, agile enterprise maturity, and our thinking and experiences have evolved.&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;To that end, we will offer the Scaled Agile Framework (SAF) as a proven, publicly available, framework for applying Lean|Agile practices at enterprise scale, presented in a structured, interactive, web format.&amp;lt;/p&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scalingsoftwareagilityblog.com/introducing-the-scaled-agile-framework/&amp;quot;&amp;gt;Source: Dean Leffingwell, Introducing the Scaled Agile Framework&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;learning-it&amp;quot;&amp;gt;Learning It&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Our recommended way of learning about SAFe is through&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://www.scaledagile.com/reference-guide/&amp;quot;&amp;gt;SAFe Reference Guide&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;SAFe has extensive &amp;lt;a href=&amp;quot;http://www.scaledagile.com/which-course/&amp;quot;&amp;gt;training and certification schemes&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;safe-spine&amp;quot;&amp;gt;SAFe Spine&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;From the perspective of prospective users of SAFe&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;need-where-might-it-be-used&amp;quot;&amp;gt;Need (Where might it be used?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;values-what-does-it-optimise-for&amp;quot;&amp;gt;Values (What does it optimise for?)&amp;lt;/h2&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Alignment&amp;quot;&amp;gt;Alignment&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/CodeQuality&amp;quot;&amp;gt;Code Quality&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Transparency&amp;quot;&amp;gt;Transparency&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/ProgramExecution&amp;quot;&amp;gt;Program Execution&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;h2 id=&amp;quot;principles-what-is-it-based-on&amp;quot;&amp;gt;Principles (What is it based on?)&amp;lt;/h2&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/TakeAnEconomicView&amp;quot;&amp;gt;Take an Economic View&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/ApplySystemsThinking&amp;quot;&amp;gt;Apply Systems Thinking&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/AssumeVariabilityPreserveOptions&amp;quot;&amp;gt;Assume Variability; Preserve Options&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/BuildIncrementallyWithFastIntegratedLearningCycles&amp;quot;&amp;gt;Build Incrementally With Fast Integrated Learning Cycles&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/BaseMilestonesOnObjectiveEvaluationOfWorkingSystems&amp;quot;&amp;gt;Base Milestones On Objective Evaluation Of Working Systems&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/VisualizeAndLimitWIPReduceBatchSizesAndManageQueueLengths&amp;quot;&amp;gt;Visualize and limit WIP, reduce batch sizes, and manage queue lengths&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/ApplyCadenceSynchronizeWithCrossDomainPlanning&amp;quot;&amp;gt;Apply cadence, synchronize with cross-domain planning&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/UnlockTheIntrinsicMotivationOfKnowledgeWorkers&amp;quot;&amp;gt;Unlock the intrinsic motivation of knowledge workers&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/DecentralizeDecisionMaking&amp;quot;&amp;gt;Decentralize decision-making&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;h2 id=&amp;quot;practices-what-does-it-suggest-you-do&amp;quot;&amp;gt;Practices (What does it suggest you do?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;tools-what-does-it-suggest-you-use&amp;quot;&amp;gt;Tools (What does it suggest you use?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Principles of LeSS      2017-04-22T00:00:00+02:00   http://spine.wiki/principle/PrinciplesOfLeSS   &amp;lt;h1 id=&amp;quot;principles&amp;quot;&amp;gt;10 Principles&amp;lt;/h1&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/large_scale_scrum_is_scrum.html&amp;quot;&amp;gt;Large-Scale Scrum is Scrum&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/transparency.html&amp;quot;&amp;gt;Transparency&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/more-with-less.html&amp;quot;&amp;gt;More with LeSS&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/whole-product-focus.html&amp;quot;&amp;gt;Whole Product Focus&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/customer-centric.html&amp;quot;&amp;gt;Customer Centric&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/continuous-improvement-towards-perfection.html&amp;quot;&amp;gt;Continuous Improvement Towards Perfection&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/lean-thinking.html&amp;quot;&amp;gt;Lean Thinking&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/systems-thinking.html&amp;quot;&amp;gt;Systems Thinking&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/empirical-process-control.html&amp;quot;&amp;gt;Empirical Process Control&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/queueing_theory.html&amp;quot;&amp;gt;Queueing Theory&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;h1 id=&amp;quot;other-principles&amp;quot;&amp;gt;Other Principles&amp;lt;/h1&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://www.agilemanifesto.org/&amp;quot;&amp;gt;Agile Manifesto&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Avoiding False Dichotomies (explored in &amp;lt;a href=&amp;quot;http://www.amazon.com/Scaling-Lean-Agile-Development-Organizational/dp/0321480961&amp;quot;&amp;gt;Scaling Agile and Lean Development&amp;lt;/a&amp;gt;)&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Be Agile Rather than Do Agile (explored in &amp;lt;a href=&amp;quot;http://www.amazon.com/Scaling-Lean-Agile-Development-Organizational/dp/0321480961&amp;quot;&amp;gt;Scaling Agile and Lean Development&amp;lt;/a&amp;gt;)&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Total Quality Management/Control (an early and excellent book on this is &amp;lt;a href=&amp;quot;http://www.amazon.com/What-Total-Quality-Control-Japanese/dp/0139524339&amp;quot;&amp;gt;What is Total Quality Control: The Japanese Way&amp;lt;/a&amp;gt;)&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://deming.org/management-system/fourteenpoints&amp;quot;&amp;gt;Demings 14 points&amp;lt;/a&amp;gt; (from &amp;lt;a href=&amp;quot;http://www.amazon.com/Out-Crisis-W-Edwards-Deming/dp/0262541157&amp;quot;&amp;gt;Out of the Crisis&amp;lt;/a&amp;gt;)&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/LeSS/&amp;quot;&amp;gt;LeSS archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://less.works/less/principles/index.html&amp;quot;&amp;gt;Less.works&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Large-Scale Scrum (LeSS)      2017-04-22T00:00:00+02:00   http://spine.wiki/archetype/LeSS   &amp;lt;h1 id=&amp;quot;origin&amp;quot;&amp;gt;Origin&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;LeSS emerged from the work of &amp;lt;a href=&amp;quot;http://www.craiglarman.com&amp;quot;&amp;gt;Craig Larman&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;https://twitter.com/basvodde&amp;quot;&amp;gt;Bas Vodde&amp;lt;/a&amp;gt;:&amp;lt;/p&amp;gt;&amp;lt;blockquote&amp;gt;  &amp;lt;p&amp;gt;Since 2005, weve worked with clients to apply the LeSS (Large-Scale Scrum) framework for scaling Scrum, lean and agile development to big product groups. We share that experience and knowledge through LeSS so that you too can succeed when scaling.&amp;lt;/p&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/&amp;quot;&amp;gt;Source: LeSS.works&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;learning-it&amp;quot;&amp;gt;Learning It&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Our recommended way of learning about LeSS is through&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://www.amazon.com/Large-Scale-Scrum-More-Addison-Wesley-Signature/dp/0321985710&amp;quot;&amp;gt;[Book] Large-Scale Scrum: More with LeSS&amp;lt;/a&amp;gt; - Larman, Vodde&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works&amp;quot;&amp;gt;Less.works&amp;lt;/a&amp;gt; website&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;less-spine&amp;quot;&amp;gt;LeSS Spine&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;From the perspective of prospective users of Large-Scale Scrum&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;need-where-might-it-be-used&amp;quot;&amp;gt;Need (Where might it be used?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;LeSS is a set of rules combined with guides for applying &amp;lt;a href=&amp;quot;/archetype/Scrum/&amp;quot;&amp;gt;Scrum&amp;lt;/a&amp;gt; in a multi-team context. It is not a framework that applies Scrum at team level and then adds additional scaling processes, instead it is Scrum scaled on all the levels.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Rather than having Scrum as a building block for a scaled framework, LeSS looks at Scrum and for each element ask Why is it there? followed by If we have more than one team, how can we achieve the same purpose on a larger scale?&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/large_scale_scrum_is_scrum.html&amp;quot;&amp;gt;Source: Large-Scale Scrum is Scrum&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;values-what-does-it-optimise-for&amp;quot;&amp;gt;Values (What does it optimise for?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Since LeSS is Scrum scaled, it builds on the &amp;lt;a href=&amp;quot;/value/ValuesOfScrum/&amp;quot;&amp;gt;Scrum Values&amp;lt;/a&amp;gt;. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Other than that, the focus for LeSS was on keeping it simple, avoiding adding additional roles, artifacts of processes that should be empirically managed by the product group.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The other significant optimisation was for &amp;lt;em&amp;gt;scaling up&amp;lt;/em&amp;gt; instead of &amp;lt;em&amp;gt;tailoring down&amp;lt;/em&amp;gt;. Rather than defining a universal, overarching framework and then contextually tailoring it down, LeSS is kept to a minimum and the concept of Less Huge is introduced for very large product groups ( more than 8 teams).&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/framework/why-less.html&amp;quot;&amp;gt;Source: Why LeSS?&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;principles-what-is-it-based-on&amp;quot;&amp;gt;Principles (What is it based on?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;See &amp;lt;a href=&amp;quot;/principle/PrinciplesOfLeSS&amp;quot;&amp;gt;LeSS Principles&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices-what-does-it-suggest-you-do&amp;quot;&amp;gt;Practices (What does it suggest you do?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;tools-what-does-it-suggest-you-use&amp;quot;&amp;gt;Tools (What does it suggest you use?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;LeSS does not explicitly recommend any &amp;lt;a href=&amp;quot;/tools.html&amp;quot;&amp;gt;Tools&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Generic List of Values      2016-01-25T00:00:00+02:00   http://spine.wiki/value/GenericValues   &amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Abundance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Acceptance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Accessibility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Accomplishment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Accountability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Accuracy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Achievement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Acknowledgement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Activeness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Activism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Adaptability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Adoration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Adroitness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Advancement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Adventure&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Affection&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Affluence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Aggressiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Agility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Alertness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Altruism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Amazement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ambition&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Amusement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Anticipation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Appreciation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Approachability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Approval&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Art&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Articulacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Artistry&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Assertiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Assurance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Attainment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Attention&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Attentiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Attractiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Audacity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Availability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Awareness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Awe&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Balance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Beauty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Being present&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Belonging&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Benevolence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Bliss&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Boldness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Bravery&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Brilliance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Buoyancy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Calmness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Camaraderie&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Candor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Capability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Caring&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Caution&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Certainty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Challenge&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Change&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Charity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Charm&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Chastity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cheerfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Clarity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cleanliness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cleverness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Closeness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Comfort&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Commitment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Communication&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Community&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Compassion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Competence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Competition&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Completion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Composure&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Concentration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Conciseness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Confidence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Conformity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Congruency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Connection&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Consciousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Conservation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Consistency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Contentment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Continuity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Contribution&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Control&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Conviction&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Coolness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cooperation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cordiality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Correctness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Courage&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Courtesy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Craftiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Creativity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Credibility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cunning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Curiosity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Daring&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Decisiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Deference&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Delight&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Dependability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Depth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Desire&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Detail&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Determination&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Devotion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Devoutness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Dignity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Diligence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Direction&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Directness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Discipline&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Discovery&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Discretion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Diversity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Dominance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Dreaming&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Drive&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Duty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Eagerness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ease&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Economy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ecstasy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Education&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Effectiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Efficiency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Elation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Elegance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Empathy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Encouragement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Endurance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Energy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Enjoyment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Enlightenment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Entertainment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Enthusiasm&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Environment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Equanimity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ethics&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Excellence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Excitement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Exhilaration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Expediency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Experience&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Expertise&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Exploration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Expressiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Extravagance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Extroversion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Exuberance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fairness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Faith&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fame&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Family&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fascination&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fearlessness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ferocity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fidelity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fierceness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Firmness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fitness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Flexibility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Flow&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fluency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Focus&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fortitude&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Frankness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Freedom&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Friendliness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Friendship&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Frugality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fun&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Gallantry  Generosity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Gentility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Giving&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Grace&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Gratitude&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Gregariousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Growth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Guidance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Happiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Harmony&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Health&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Heart&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Helpfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Heroism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Holism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Honesty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Honor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Hopefulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Hospitality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Humanity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Humility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Humor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Hygiene&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Imagination&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Impact&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Impartiality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Independence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Individuality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Industry&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Influence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ingenuity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Inquisitiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Insightfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Inspiration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Integrity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intellect&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intelligence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intimacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intrepidness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intrigue&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Introspection&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Introversion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intuition&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intuitiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Inventiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Involvement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Joy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Judiciousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Justice&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Keenness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Kindness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Knowledge&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Laid back-ness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Leadership&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Learning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Legacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Liberation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Liberty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Lightness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Liveliness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Logic&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Longevity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Love&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Loyalty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Majesty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Manners&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Marriage&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Mastery&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Maturity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Meaning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Meekness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Mellowness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Mindfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Modesty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Motivation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Mystery&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Nature&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Neatness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Nerve&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Non-conformity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Obedience&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Open mindedness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Openness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Optimism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Order&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Organization&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Originality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Outdoors&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Outlandishness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Outrageousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Partnership&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Passion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Patience&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Patriotism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Peace&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Perceptiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Perkiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Perseverance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Persistence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Persuasiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Philanthropy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Piety&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Playfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pleasantness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pleasure&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Poise&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Polish&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Popularity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Power&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Practicality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pragmatism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Precision&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Preparedness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Presence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pride&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Privacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Professionalism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Prosperity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Prudence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Punctuality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Purity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Quiet&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Quirkiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Rationality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Realism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Reason&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Recognition&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Recreation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Refinement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Reflection&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Relaxation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Reliability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Relief&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Religiousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Reputation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Resilience&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Resolution&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Resoluteness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Resolve&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Resourcefulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Respect&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Responsibility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Restraint&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Reverence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Richness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Rigor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sacredness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sacrifice&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Satisfaction&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Security&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Self-control&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Self-growth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Selflessness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Self-reliance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Self-respect&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Self-sustainability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sensitivity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sensuality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Serenity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Service&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sexiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sexuality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sharing&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Shrewdness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Silence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Silliness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Simplicity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sincerity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Skillfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Solidarity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Solitude&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Solution-Focus&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sophistication&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Speed&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Spirituality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Spontaneity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Stability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Status&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Stealth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Stillness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Strategy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Strength&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Structure&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Success&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Support&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sympathy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Synergy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Teaching&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Teamwork&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Tenacity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Thankfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Thoroughness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Thoughtfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Thrift&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Tidiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Timeliness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Traditionalism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Tranquility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Transcendence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Trust&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Trustworthiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Truth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Understanding&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Uniqueness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Unity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Usefulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Utility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Valor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Variety&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Victory&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Vigor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Virtue&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Vision&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Vitality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Vivacity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Volunteerism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Warmth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Wealth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Wellness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Willfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Willingness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Wisdom&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Wit&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Wonder&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Worthiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Youthfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Zeal&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Zest&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;      Whole Team      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/WholeTeam   &amp;lt;p&amp;gt;All the contributors to an XP project sit together, members of one team. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;This team must include a business representative  the Customer  who provides the requirements, sets the priorities, and steers the project. Its best if the Customer or one of her aides is a real end user who knows the domain and what is needed. The team will of course have programmers. The team may include testers, who help the Customer define the customer acceptance tests. Analysts may serve as helpers to the Customer, helping to define the requirements. There is commonly a coach, who helps the team keep on track, and facilitates the process. There may be a manager, providing resources, handling external communication, coordinating activities. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;None of these roles is necessarily the exclusive property of just one individual: Everyone on an XP team contributes in any way that they can. The best teams have no specialists, only general contributors with special skills.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Test Driven Development      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/TDD   &amp;lt;p&amp;gt;Extreme Programming is obsessed with feedback, and in software development, good feedback requires good testing. Top XP teams practice test-driven development, working in very short cycles of adding a test, then making it work. Almost effortlessly, teams produce code with nearly 100 percent test coverage, which is a great step forward in most shops. (If your programmers are already doing even more sophisticated testing, more power to you. Keep it up, it can only help!)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;It isnt enough to write tests: you have to run them. Here, too, Extreme Programming is extreme. These programmer tests, or unit tests are all collected together, and every time any programmer releases any code to the repository (and pairs typically release twice a day or more), every single one of the programmer tests must run correctly. One hundred percent, all the time! This means that programmers get immediate feedback on how theyre doing. Additionally, these tests provide invaluable support as the software design is improved.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Sustainable Pace      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/SustainablePace   &amp;lt;p&amp;gt;Extreme Programming teams are in it for the long term. They work hard, and at a pace that can be sustained indefinitely. This means that they work overtime when it is effective, and that they normally work in such a way as to maximize productivity week in and week out. Its pretty well understood these days that death march projects are neither productive nor produce quality software. XP teams are in it to win, not to die.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Small Releases      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/SmallReleases   &amp;lt;p&amp;gt;XP teams practice small releases in two important ways:&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;First, the team releases running, tested software, delivering business value chosen by the Customer, every iteration. The Customer can use this software for any purpose, whether evaluation or even release to end users (highly recommended). The most important aspect is that the software is visible, and given to the customer, at the end of every iteration. This keeps everything open and tangible.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Second, XP teams release to their end users frequently as well. XP Web projects release as often as daily, in house projects monthly or more frequently. Even shrink-wrapped products are shipped as often as quarterly.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;It may seem impossible to create good versions this often, but XP teams all over are doing it all the time. See &amp;lt;a href=&amp;quot;/practice/ContinuousIntegration&amp;quot;&amp;gt;Continuous Integration&amp;lt;/a&amp;gt; for more on this, and note that these frequent releases are kept reliable by XPs obsession with testing, as described here in &amp;lt;a href=&amp;quot;/practice/CustomerTests&amp;quot;&amp;gt;Customer Tests&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;Test-Driven Development&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Simple Design      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/SimpleDesign   &amp;lt;p&amp;gt;XP teams build software to a simple but always adequate design. They start simple, and through &amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;programmer testing&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;/practice/Refactoring&amp;quot;&amp;gt;design improvement&amp;lt;/a&amp;gt;, they keep it that way. An XP team keeps the design exactly suited for the current functionality of the system. There is no wasted motion, and the software is always ready for whats next.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Design in XP is not a one-time thing, or an up-front thing, it is an all-the-time thing. There are design steps in release planning and iteration planning, plus teams engage in quick design sessions and design revisions through refactoring, through the course of the entire project. In an incremental, iterative process like Extreme Programming, good design is essential. Thats why there is so much focus on design throughout the course of the entire development.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Design Improvement (Refactoring)      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/Refactoring   &amp;lt;p&amp;gt;Extreme Programming focuses on delivering business value in every iteration. To accomplish this over the course of the whole project, the software must be well-designed. The alternative would be to slow down and ultimately get stuck. So XP uses a process of continuous design improvement called &amp;lt;em&amp;gt;Refactoring&amp;lt;/em&amp;gt;, from the title of Martin Fowlers book, &amp;lt;a href=&amp;quot;http://www.amazon.com/exec/obidos/ASIN/0201485672/armaties&amp;quot;&amp;gt;Refactoring: Improving the Design of Existing Code&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The refactoring process focuses on removal of duplication (a sure sign of poor design), and on increasing the cohesion of the code, while lowering the coupling. High cohesion and low coupling have been recognized as the hallmarks of well-designed code for at least thirty years. The result is that XP teams start with a good, simple design, and always have a good, simple design for the software. This lets them sustain their development speed, and in fact generally increase speed as the project goes forward.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Refactoring is, of course, strongly supported by comprehensive testing to be sure that as the design evolves, nothing is broken. Thus the &amp;lt;a href=&amp;quot;/practice/CustomerTests&amp;quot;&amp;gt;customer tests&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;programmer tests&amp;lt;/a&amp;gt; are a critical enabling factor. The XP practices support each other: they are stronger together than separately.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Practices of Extreme Programming      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/PracticesOfXP   &amp;lt;p&amp;gt;XPs philosophy on &amp;lt;a href=&amp;quot;/practices.html&amp;quot;&amp;gt;Practices&amp;lt;/a&amp;gt; is very non-prescriptive, and advises an explorative approach, based on the &amp;lt;a href=&amp;quot;/principle/PrinciplesOfXP&amp;quot;&amp;gt;XP Principles&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;/value/ValuesOfXP&amp;quot;&amp;gt;XP Values&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices-recommended-by-kent-beck&amp;quot;&amp;gt;Practices recommended by Kent Beck&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Practices as presented in eXtreme Programming Explained, 2nd Edition by &amp;lt;a href=&amp;quot;https://en.wikipedia.org/wiki/Kent_Beck&amp;quot;&amp;gt;Kent Beck&amp;lt;/a&amp;gt;, the second of the &amp;lt;a href=&amp;quot;http://c2.com/cgi/wiki?TheThreeExtremos&amp;quot;&amp;gt;Three Extremos&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h5 id=&amp;quot;primary-practices&amp;quot;&amp;gt;Primary Practices&amp;lt;/h5&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Sit Together&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/WholeTeam&amp;quot;&amp;gt;Whole Team&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Informative Workspace&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Energized Work&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pair Programming&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Stories (UserStories)&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Weekly Cycle&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Quarterly Cycle&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Slack&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ten Minute Build&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/ContinuousIntegration&amp;quot;&amp;gt;Continuous Integration&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;Test First Programming&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Incremental Design&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h5 id=&amp;quot;corollary-practices&amp;quot;&amp;gt;Corollary Practices&amp;lt;/h5&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Real Customer Involvement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Incremental Deployment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Team Continuity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Shrinking Teams&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Root Cause Analysis&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Shared Code&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Code And Tests&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Single Code Base&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Daily Deployment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Negotiated Scope Contract&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pay Per Use&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://c2.com/cgi/wiki?ExtremeProgrammingCorePractices&amp;quot;&amp;gt;c2 wiki&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices-recommended-by-ron-jeffries&amp;quot;&amp;gt;Practices recommended by Ron Jeffries&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://en.wikipedia.org/wiki/Ron_Jeffries&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt; is the third of the &amp;lt;a href=&amp;quot;http://c2.com/cgi/wiki?TheThreeExtremos&amp;quot;&amp;gt;Three Extremos&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/WholeTeam&amp;quot;&amp;gt;Whole Team&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/PlanningGame&amp;quot;&amp;gt;Planning Game&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/SmallReleases&amp;quot;&amp;gt;Small Releases&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/CustomerTests&amp;quot;&amp;gt;Customer Tests&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/SimpleDesign&amp;quot;&amp;gt;Simple Design&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/PairProgramming&amp;quot;&amp;gt;Pair Programming&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;Test-Driven Development&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/Refactoring&amp;quot;&amp;gt;Design Improvement&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/ContinuousIntegration&amp;quot;&amp;gt;Continuous Integration&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/CollectiveCodeOwnership&amp;quot;&amp;gt;Collective Code Ownership&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/CodingStandard&amp;quot;&amp;gt;Coding Standard&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/Metaphor&amp;quot;&amp;gt;Metaphor&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/SustainablePace&amp;quot;&amp;gt;Sustainable Pace&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/em&amp;gt; &amp;lt;/p&amp;gt;      Planning Game      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/PlanningGame   &amp;lt;p&amp;gt;XP planning addresses two key questions in software development: predicting what will be accomplished by the due date, and determining what to do next. The emphasis is on steering the project  which is quite straightforward  rather than on exact prediction of what will be needed and how long it will take  which is quite difficult. There are two key planning steps in XP, addressing these two questions:&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Release Planning&amp;lt;/em&amp;gt; is a practice where the Customer presents the desired features to the programmers, and the programmers estimate their difficulty. With the cost estimates in hand, and with knowledge of the importance of the features, the Customer lays out a plan for the project. Initial release plans are necessarily imprecise: neither the priorities nor the estimates are truly solid, and until the team begins to work, we wont know just how fast they will go. Even the first release plan is accurate enough for decision making, however, and XP teams revise the release plan regularly.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Iteration Planning&amp;lt;/em&amp;gt; is the practice whereby the team is given direction every couple of weeks. XP teams build software in two-week iterations, delivering running useful software at the end of each iteration. During Iteration Planning, the Customer presents the features desired for the next two weeks. The programmers break them down into tasks, and estimate their cost (at a finer level of detail than in Release Planning). Based on the amount of work accomplished in the previous iteration, the team signs up for what will be undertaken in the current iteration.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;These planning steps are very simple, yet they provide very good information and excellent steering control in the hands of the Customer. Every couple of weeks, the amount of progress is entirely visible. There is no ninety percent done in XP: a feature story was completed, or it was not. This focus on visibility results in a nice little paradox: on the one hand, with so much visibility, the Customer is in a position to cancel the project if progress is not sufficient. On the other hand, progress is so visible, and the ability to decide what will be done next is so complete, that XP projects tend to deliver more of what is needed, with less pressure and stress.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Pair Programming      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/PairProgramming   &amp;lt;p&amp;gt;All production software in XP is built by two programmers, sitting side by side, at the same machine. This practice ensures that all production code is reviewed by at least one other programmer, and results in better design, better testing, and better code.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;It may seem inefficient to have two programmers doing one programmers job, but the reverse is true. Research into pair programming shows that pairing produces better code in about the same time as programmers working singly. Thats right: two heads really are better than one!&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Some programmers object to pair programming without ever trying it. It does take some practice to do well, and you need to do it well for a few weeks to see the results. Ninety percent of programmers who learn pair programming prefer it, so we highly recommend it to all teams.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Pairing, in addition to providing better code and tests, also serves to communicate knowledge throughout the team. As pairs switch, everyone gets the benefits of everyones specialized knowledge. Programmers learn, their skills improve, they become more valuable to the team and to the company. Pairing, even on its own outside of XP, is a big win for everyone.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Metaphor      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/Metaphor   &amp;lt;p&amp;gt;Extreme Programming teams develop a common vision of how the program works, which we call the metaphor. At its best, the metaphor is a simple evocative description of how the program works, such as this program works like a hive of bees, going out for pollen and bringing it back to the hive as a description for an agent-based information retrieval system.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Sometimes a sufficiently poetic metaphor does not arise. In any case, with or without vivid imagery, XP teams use a common system of names to be sure that everyone understands how the system works and where to look to find the functionality youre looking for, or to find the right place to put the functionality youre about to add.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Customer Tests      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/CustomerTests   &amp;lt;p&amp;gt;As part of presenting each desired feature, the XP Customer defines one or more automated acceptance tests to show that the feature is working. The team builds these tests and uses them to prove to themselves, and to the customer, that the feature is implemented correctly. Automation is important because in the press of time, manual tests are skipped. Thats like turning off your lights when the night gets darkest.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The best XP teams treat their customer tests the same way they do &amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;programmer tests&amp;lt;/a&amp;gt;: once the test runs, the team keeps it running correctly thereafter. This means that the system only improves, always notching forward, never backsliding.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Continuous Integration      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/ContinuousIntegration   &amp;lt;p&amp;gt;Extreme Programming teams keep the system fully integrated at all times. We say that daily builds are for wimps: XP teams build multiple times per day. (One XP team of forty people builds at least eight or ten times per day!)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The benefit of this practice can be seen by thinking back on projects you may have heard about (or even been a part of) where the build process was weekly or less frequently, and usually led to integration hell, where everything broke and no one knew why.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Infrequent integration leads to serious problems on a software project. First of all, although integration is critical to shipping good working code, the team is not practiced at it, and often it is delegated to people who are not familiar with the whole system. Second, infrequently integrated code is often  I would say usually  buggy code. Problems creep in at integration time that are not detected by any of the testing that takes place on an unintegrated system. Third, weak integration process leads to long code freezes. Code freezes mean that you have long time periods when the programmers could be working on important shippable features, but that those features must be held back. This weakens your position in the market, or with your end users.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Collective Code Ownership      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/CollectiveCodeOwnership   &amp;lt;p&amp;gt;On an Extreme Programming project, any pair of programmers can improve any code at any time. This means that all code gets the benefit of many peoples attention, which increases code quality and reduces defects. There is another important benefit as well: when code is owned by individuals, required features are often put in the wrong place, as one programmer discovers that he needs a feature somewhere in code that he does not own. The owner is too busy to do it, so the programmer puts the feature in his own code, where it does not belong. This leads to ugly, hard-to-maintain code, full of duplication and with low (bad) cohesion.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Collective ownership could be a problem if people worked blindly on code they did not understand. XP avoids these problems through two key techniques: the &amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;programmer tests&amp;lt;/a&amp;gt; catch mistakes, and &amp;lt;a href=&amp;quot;/practice/PairProgramming&amp;quot;&amp;gt;pair programming&amp;lt;/a&amp;gt; means that the best way to work on unfamiliar code is to pair with the expert. In addition to ensuring good modifications when needed, this practice spreads knowledge throughout the team.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Coding Standard      2015-11-22T00:00:00+02:00   http://spine.wiki/practice/CodingStandard   &amp;lt;p&amp;gt;XP teams follow a common coding standard, so that all the code in the system looks as if it was written by a single  very competent  individual. The specifics of the standard are not important: what is important is that all the code looks familiar, in support of collective ownership.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Transparency      2015-11-21T00:00:00+02:00   http://spine.wiki/value/Transparency   &amp;lt;p&amp;gt;This is the third &amp;lt;a href=&amp;quot;/values.html&amp;quot;&amp;gt;Value&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://scaledagileframework.com/safe-core-values/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;      Tools for Visualising Work In Progress      2015-11-21T00:00:00+02:00   http://spine.wiki/tool/ToolsForVisualisingWorkInProgress   &amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Physical Board&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Digital Board&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Tool/CognitiveLoadTracker&amp;quot;&amp;gt;Team Cognitive Load Tracker&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;      Program Execution      2015-11-21T00:00:00+02:00   http://spine.wiki/value/ProgramExecution   &amp;lt;p&amp;gt;This is the fourth &amp;lt;a href=&amp;quot;/values.html&amp;quot;&amp;gt;Value&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://scaledagileframework.com/safe-core-values/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;      Next Retro Topics List      2015-11-21T00:00:00+02:00   http://spine.wiki/tool/NextRetroTopicsList   &amp;lt;h2 id=&amp;quot;what-is-it&amp;quot;&amp;gt;What is it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;A visible list of all the things the team may want to dig deeper into during their next &amp;lt;a href=&amp;quot;/practice/TeamRetrospective/&amp;quot;&amp;gt;Retrospective&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;why-use-it&amp;quot;&amp;gt;Why use it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;If a challenge or opportunity is uncovered around how the team gets the work done, individuals may feel they want to dig deeper into understanding it during the next Retro. There is a risk that you could forget what it was, or not spend enough time deliberating on it, so making it visible in the team space is a useful way of making sure it doesnt slip through.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;when-to-use-it&amp;quot;&amp;gt;When to use it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Any time a challenge or opportunity is uncovered and the team doesnt feel it is appropriate to address it right there and then.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;what-could-it-look-like&amp;quot;&amp;gt;What could it look like?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;It could be an area or piece of paper on a teams board. Somewhere highly visible. &amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;assumptions&amp;quot;&amp;gt;Assumptions&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The team does not use this list as a way of avoiding difficult conversations that should be had sooner.&amp;lt;/p&amp;gt;      Code Quality      2015-11-21T00:00:00+02:00   http://spine.wiki/value/CodeQuality   &amp;lt;p&amp;gt;This is the second &amp;lt;a href=&amp;quot;/values.html&amp;quot;&amp;gt;Value&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://scaledagileframework.com/safe-core-values/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;      Alignment      2015-11-21T00:00:00+02:00   http://spine.wiki/value/Alignment   &amp;lt;p&amp;gt;This is the first &amp;lt;a href=&amp;quot;/values.html&amp;quot;&amp;gt;Value&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://scaledagileframework.com/safe-core-values/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;      Values of Extreme Programming      2015-11-17T00:00:00+02:00   http://spine.wiki/value/ValuesOfXP   &amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Simplicity&amp;quot;&amp;gt;Simplicity&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Communication&amp;quot;&amp;gt;Communication&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Feedback&amp;quot;&amp;gt;Feedback&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Respect&amp;quot;&amp;gt;Respect&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Courage&amp;quot;&amp;gt;Courage&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Values of Scrum      2015-11-17T00:00:00+02:00   http://spine.wiki/value/ValuesOfScrum   &amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Focus&amp;quot;&amp;gt;Focus&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Courage&amp;quot;&amp;gt;Courage&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Openness&amp;quot;&amp;gt;Openness&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Commitment&amp;quot;&amp;gt;Commitment&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Respect&amp;quot;&amp;gt;Respect&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/Scrum/&amp;quot;&amp;gt;Scrum archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Values of SAFe      2015-11-17T00:00:00+02:00   http://spine.wiki/value/ValuesOfSAFe   &amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Alignment&amp;quot;&amp;gt;Alignment&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/CodeQuality&amp;quot;&amp;gt;Code Quality&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Transparency&amp;quot;&amp;gt;Transparency&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/ProgramExecution&amp;quot;&amp;gt;Program Execution&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Tools for Retrospectives      2015-11-17T00:00:00+02:00   http://spine.wiki/tool/ToolsForRetrospectives   &amp;lt;p&amp;gt;If you arent sure what a retrospective is, start &amp;lt;a href=&amp;quot;/practice/TeamRetrospective/&amp;quot;&amp;gt;here&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;www.hr.virginia.edu/uploads/documents/media/Writing_SMART_Goals.pdf&amp;quot;&amp;gt;SMART Goals&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;NextRetroTopicsList&amp;quot;&amp;gt;Next Retro Topics list&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://en.wikipedia.org/wiki/Improvisational_theatre&amp;quot;&amp;gt;Improv&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://plans-for-retrospectives.com/&amp;quot;&amp;gt;PlansForRetrospectives.com&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://TastyCupcakes.org&amp;quot;&amp;gt;TastyCupcakes.org&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://RetrospectiveWiki.org&amp;quot;&amp;gt;RetrospectiveWiki.org&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;      Principles of Extreme Programming      2015-11-17T00:00:00+02:00   http://spine.wiki/principle/PrinciplesOfXP   &amp;lt;h1 id=&amp;quot;fundamental-principles&amp;quot;&amp;gt;Fundamental Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Rapid Feedback&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Assume Simplicity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Incremental Change&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Embracing Change&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Quality Work&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;further-principles&amp;quot;&amp;gt;Further Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Teach Learning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Small Initial Investment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Play to Win&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Concrete Experiments&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Open, honest Communication&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Work with peoples instincts - not against them&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Accepted Responsibility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Local Adaptation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Travel Light&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Honest Measurement&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://martinfowler.com/bliki/PrinciplesOfXP.html&amp;quot;&amp;gt;Martin Fowler&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Principles of SAFe      2015-11-17T00:00:00+02:00   http://spine.wiki/principle/PrinciplesOfSAFe   &amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/TakeAnEconomicView&amp;quot;&amp;gt;Take an Economic View&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/ApplySystemsThinking&amp;quot;&amp;gt;Apply Systems Thinking&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/AssumeVariabilityPreserveOptions&amp;quot;&amp;gt;Assume Variability; Preserve Options&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/BuildIncrementallyWithFastIntegratedLearningCycles&amp;quot;&amp;gt;Build Incrementally With Fast Integrated Learning Cycles&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/BaseMilestonesOnObjectiveEvaluationOfWorkingSystems&amp;quot;&amp;gt;Base Milestones On Objective Evaluation Of Working Systems&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/VisualizeAndLimitWIPReduceBatchSizesAndManageQueueLengths&amp;quot;&amp;gt;Visualize and limit WIP, reduce batch sizes, and manage queue lengths&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/ApplyCadenceSynchronizeWithCrossDomainPlanning&amp;quot;&amp;gt;Apply cadence, synchronize with cross-domain planning&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/UnlockTheIntrinsicMotivationOfKnowledgeWorkers&amp;quot;&amp;gt;Unlock the intrinsic motivation of knowledge workers&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/DecentralizeDecisionMaking&amp;quot;&amp;gt;Decentralize decision-making&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Principles of Flow      2015-11-17T00:00:00+02:00   http://spine.wiki/principle/PrinciplesOfFlow   &amp;lt;p&amp;gt;The &amp;lt;a href=&amp;quot;http://lpd2.com/&amp;quot;&amp;gt;Lean Product Development&amp;lt;/a&amp;gt; book enumerates 175 principles in 8 categories: Economic, Queueing, Variability, Batch Size, WIP Constraint, Flow Control Fast Feedback and Decentralization&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;economic-principles&amp;quot;&amp;gt;Economic Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;E1: The Principle of Quantified Overall Economics: Select actions based on quantified overall economic impact.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E2: The Principle of Interconnected Variables: We cant just change one thing.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E3: The Principle of Quantified Cost of Delay: If you only quantify one thing, quantify the cost of delay.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E4: The Principle of Economic Value-Added: The value added by an activity is the change in the economic value of the work product.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E5: The Inactivity Principle: Watch the work product, not the worker.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E6: The U-Curve Principle: Important trade-offs are likely to have U-curve optimizations.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E7: The Imperfection Principle: Even imperfect answers improve decision making&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E8: The Principle of Small Decisions: Influence the many small decisions&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E9: The Principle of Continuous Economic Tradeoffs: Economic choices must be made continuously.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E10: The First Perishability Principle: Many economic choices are more valuable when made quickly.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E11: The Subdivision Principle: Inside every bad choice lies a good choice.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E12: The Principle of Early Harvesting: Create systems to harvest the early cheap opportunities.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E13: The Principle of Decision Rules: Use decision rules to decentralize economic control.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E14: The First Market Principle: Ensure decision makers feel both cost and benefit.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E15: The Principle of Optimum Decision Timing: Every decision has its optimum economic timing.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E16: The Principle of Marginal Economics: Always compare marginal cost to marginal value.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E17: The Sunk Cost Principle: Do not consider money already spent.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E18: The Principle of Buying Information: The value of information is its expected economic value.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E19: The Insurance Principle: Dont pay more for  insurance than the expected loss.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E20: The Newsboy Principle: High probability of failure does not equal bad economics.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E21: The Show Me the Money Principle: To influence financial decisions, speak the language on money.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;queueing-principles&amp;quot;&amp;gt;Queueing Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Q1: The Principle of Invisible Inventory: Product development inventory is physically and financially invisible.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q2: The Principle of Queueing Waste: Queues are the root cause of the majority of economic waste in product development.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q3: The Principle of Queueing Capacity Utilization: Capacity utilization increases queues exponentially.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q4: The Principle of High-Queue States: Most of the damage done by a queue is caused by high-queue states.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q5: The Principle of Queueing Variability: Variability increases queues linearly.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q6: The Principle of Variability Amplification: Operating at high levels of capacity utilization increases variability.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q7: The Principle of Queueing Structure: Serve pooled demand with reliable high-capacity servers.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q8: The Principle of Linked Queues: Adjacent queues see arrival or service time variability depending on loading.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q9: The Principle of Queue Size Optimization: Optimum queue size is an economic tradeoff.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q10: The Principle of Queueing Discipline: Queue cost is affected by the sequence in which we handle the jobs in the queue.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q11: The Cumulative Flow Principle: Use CFDs to monitor queues.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q12: Littles Formula: Wait time = Queue Size/Processing Rate.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q13: The First Queue Size Control Principle:  Dont control capacity utilization, control queue size.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q14: The Second Queue Size Control Principle: Dont control cycle time, control queue size.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q15: The Diffusion Principle: Over time, queues will randomly spin seriously out of control and will remain in this state for long periods.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q16: The Intervention Principle: We cannot rely on randomness to correct a random queue.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;variability-principles&amp;quot;&amp;gt;Variability Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;V1: The Principle of Beneficial Variability: Variability can create economic value.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V2: The Principle of Asymmetric Payoffs: Payoff asymmetries enable variability to create economic value.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V3: The Principle of Optimum Variability: Variability should neither be minimized nor maximized.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V4: The Principle of Optimum Failure Rate: Fifty percent failure rate is usually optimum for generating information.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V5: The Principle of Variability Pooling: Overall variation decreases when uncorrelated random tasks are combined.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V6: The Principle of Short-Term Forecasting: Forecasting becomes exponentially easier at short time-horizons.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V7: The Principle of Small Experiments: Many small experiments produce less variation than one big one.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V8: The Repetition Principle: Repetition reduces variation.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V9: The Reuse Principle: Reuse reduces variability. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V10: The Principle of Negative Covariance: We can reduce variance by applying a counterbalancing effect. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V11: The Buffer Principle:Buffers trade money for variability reduction. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V12: The Principle of Variability Consequence: Reducing consequences is usually the best way to reduce the cost of variability. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V13: The Non-linearity Principle: Operate in the linear range of system performance. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V14: The Principle of Variability Substitution: Substitute cheap variability for expensive variability. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V15: The Principle of Iteration Speed: It is usually better to improve iteration speed than defect rate. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V16: The Principle of Variability Displacement: Move variability to the process stage where its cost is lowest. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;batch-size-principles&amp;quot;&amp;gt;Batch Size Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;B1: Batch Size Queueing Principle: Reducing batch size reduces cycle time. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B2: The Batch Size Variability Principle: Reducing batch size reduces variability in flow. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B3: The Batch Size Feedback Principle: Reducing batch size accelerates feedback. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B4: The Batch Size Risk Principle: Reducing batch size reduces risk. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B5: The Batch Size Overhead Principle: Reducing batch size reduces overhead. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B6: The Batch Size Efficiency Principle: Large batches reduce efficiency. (&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B7: The Psychology Principle of Batch Size: Large batches inherently lower motivation and urgency. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B8: The Batch Size Slippage Principle: Large batches cause exponential cost and schedule growth. (&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B9: The Batch Size Death Spiral Principle: Large batches lead to even larger batches. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B10: The Least Common Denominator Principle of Batch Size: The entire batch is limited by its worst element. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B11: The Principle of Batch Size Economics: Economic batch size is a U-curve optimization. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B12: The Principle of Low Transaction Cost: Reducing transaction cost per batch lowers overall costs. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B13: The Principle of Batch Size Diseconomies: Batch size reduction saves much more than you think. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B14: The Batch Size Packing Principle: Small batches allow finer tuning of capacity utilization &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B15: The Fluidity Principle: Loose coupling between product subsystems enables small batches. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B16: The Principle of Transport Batches: The most important batch is the transport batch. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B17: The Proximity Principle: Proximity enables small batch sizes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B18: The Run Length Principle: Short run lengths reduce queues. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B19: The Infrastructure Principle: Good infrastructure enables small batches. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B20: The Principle of Batch Content: Sequence first that which adds value most cheaply. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B21: The Batch Size First Principle: Reduce batch size before you attack bottlenecks. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B22: The Principle of Dynamic Batch Size: Adjust batch size dynamically to respond to changing economics. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;wip-constraint-principles&amp;quot;&amp;gt;WIP Constraint Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;W1: The Principle of WIP Constraints: Constrain WIP to control cycle time and flow. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W2: The Principle of Rate Matching: WIP constraints force rate-matching. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W3: The Principle of Global Constraints: Use global WIP constraints for predictable and permanent bottlenecks. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W4: The Principle of Local Constraints: If possible, constrain local WIP pools. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W5: The Batch Size Decoupling Principle: Use WIP ranges to decouple the batch sizes of adjacent processes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W6: The Principle of Demand Blocking: Block all demand when WIP reaches its upper limit. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W7: The Principle of WIP Purging: When WIP is high, purge low value projects. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W8: The Principle of Flexible Requirements: Control WIP by shedding requirements. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W9: The Principle of Resource Pulling: Quickly apply extra resources to an emerging queue. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W10: The Principle of Part-Time Resources: Use part-time resources for high variability tasks. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W11: The Big Gun Principle: Pull high-powered experts to emerging bottlenecks. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W12: The Principle of T-Shaped Resources: Develop people who are deep in one area and broad in many. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W13: The Principle of Skill Overlap: Cross train resources at adjacent processes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W14: The Mix Change Principle: Use upstream mix changes to regulate queue size. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W15: The Aging Principle: Watch the outliers. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W16: The Escalation Principle: Create a preplanned escalation process for outliers. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W17: The Principle of Progressive Throttling: Increase throttling as you approach the queue limit. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W18: The Principle of Differential Service: Differentiate quality of service by workstream. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W19: The Principle of Adaptive WIP Constraints: Adjust WIP constraints as capacity changes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W20: The Expansion Control Principle: Prevent uncontrolled expansion of work. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W21: The Principle of the Critical Queue: Constrain WIP in the secion of the system where the queue is most expensive. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W22: The Cumulative Reduction Principle: Small WIP reductions accumulate. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W23: The Principle of Visual WIP: Make WIP continuously visible. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;flow-control-principles&amp;quot;&amp;gt;Flow Control Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;F1: The Principle of Congestion Collapse: When loading becomes too high, we will see a sudden and catastrophic drop in output. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F2: The Peak Throughput Principle: Control occupancy to sustain high throughput in systems prone to congestion. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F3: The Principle of Visible Congestion: Use forecasts of expected flow time to make congestion visible. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F4: The Principle of Congestion Pricing: Use pricing to reduce demand during congested periods. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F5: The Principle of Periodic Resynchronization: Use a regular cadence to limit the accumulation of variance. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F6: The Cadence Capacity Margin Principle: Provide sufficient capacity margin to enable cadence. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F7: The Cadence Reliability Principle: Use cadence to make waiting times predictable.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F8: The Cadence Batch Size Enabling Principle: Use a regular cadence to enable small batch sizes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F9: The Principle of Cadenced Meetings: Schedule frequent meetings using a predictable cadence. (&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F10: The Synchronization Capacity Margin Principle: To enable synchronization, provide sufficient capacity margin. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F11: The Principle of Multiproject Synchronization: Exploit scale economies by synchronizing work from multiple projects. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F12: The Principle of Cross-Functional Synchronization: Use synchronized events to facilitate cross functional tradeoffs. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F13: The Synchronization Queueing Principle: To reduce queues, synchronize the batch size and timing of adjacent processes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F14: The Harmonic Principle: Make nested cadences harmonic multiples. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F15: The SJF Scheduling Principle: When delay costs are homogeneous, do the shortest job first. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F16: The HDCF Scheduling Principle: When job durations are homogeneous, do the high cost-of-delay job first. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F17: The WSJF Scheduling Principle: When job durations and delay costs are not homogeneous, use WSJF. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F18: The Local Priority Principle: Priorities are inherently local. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F19: The Round-Robin Principle: When task duration is unknown, time-share capacity. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F20: The Preemption Principle: Only preempt when switching costs are low. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F21: The Principle of Work Matching: Use sequence to match jobs to appropriate resources. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F22: The Principle of Tailored Routing: Select and tailor the sequence of subprocesses to the task at hand. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F23: The Principle of Flexible Routing: Route work based on the current most economic route. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F24: The Principle of Alternate Routes: Develop and maintain alternate routes around points of congestion. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F25: The Principle of Flexible Resources: Use flexible resources to absorb variation. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F26: The Principle of Late Binding: The later we bind demand to resources, the smoother the flow. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F27: The Principle of Local Transparency: Make tasks and resources reciprocally visible at adjacent processes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F28: The Principle of Preplanned Flexibility: For fast responses, preplan and invest in flexibility. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F29: The Principle of Resource Centralization: Correctly managed, centralized resources can reduce queues. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F30: The Principle of Flow Conditioning: Reduce variability before a bottleneck. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;fast-feedback-principles&amp;quot;&amp;gt;Fast Feedback Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;FF1: The Principle of Maximum Economic Influence: Focus control on project and process parameters with the highest economic influence. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF2: The Principle of Efficient Control: Control parameters that are both influential and efficient. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF3: The Principle of Leading Indicators: Select control variables that predict future system behavior. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF4: The Principle of Balanced Set Points: Set tripwires at points of equal economic impact. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF5: The Moving Target Principle: Know when to pursue a dynamic goal. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF6: The Exploitation Principle: Exploit unplanned economic opportunities.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF7: The Queue Reduction Principle of Feedback: Fast feedback enables smaller queues. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF8: The Fast Learning Principle: Use fast feedback to make learning faster and more efficient. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF9: The Principle of Useless Measurement: What gets measured may not get done. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF10: The First Agility Principle: We dont need long planning horizons when we have a short turning radius. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF11: The Batch Size Principle of Feedback: Small batches yield fast feedback. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF12: The Signal to Noise Principle: To detect a smaller signal, reduce the noise. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF13: The Decision Rule Principle: Control the economic logic behind the decision, not the entire decision. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF14: The Locality Principal of Feedback: Whenever possible make feedback local. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF15: The Relief Valve Principle: Have a clear, predetermined relief valve. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF16: The Principle of Multiple Control Loops: Embed fast control loops inside slow loops. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF17: The Principle of Controlled Excursions: Keep deviations within the control range. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF18: The Feedforward Principle: Provide advance notice of heavy arrival rates to minimize queues. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF19: The Principle of Colocation: Colocation improves almost all aspects of communications. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF20: The Empowerment Principle of Feedback: Fast feedback gives a sense of control. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF21: The Hurry-Up-and-Wait Principle: Large queues make it hard to create urgency. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF22: The Amplification Principle: The human element tends to amplify large excursions. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF23: The Principle of Overlapping Measurement: To align behaviors, reward people for the work of others. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF24: The Attention Principle: Time counts more than money. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;decentralization-principles&amp;quot;&amp;gt;Decentralization Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;D1: The Second Perishability Principle: Decentralize control for problems and opportunities that age poorly. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D2: The Scale Principle: Centralize control for problems that are infrequent, large, or that have significant economies of scale. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D3: The Principle of Layered Control: Adapt the control approach to emerging information about the problem. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D4: The Opportunistic Principle: Adjust the plan for unplanned obstacles and opportunities. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D5: The Principle of Virtual Centralization: Be able to quickly reorganize decentralized resources to create centralized power. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D6: The Inefficiency Principle: The inefficiency of decentralization can cost less than the value of faster response time. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D7: The Principle of Alignment: There is more value created with overall alignment than local excellence. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D8: The Principle of Mission: Specify the end state, its purpose, and the minimal possible constraints. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D9: The Principle of Boundaries: Establish clear roles and boundaries. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D10: The Main Effort Principle: Designate a main effort and subordinate other activities. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D11: The Principle of Dynamic Alignment: The main effort may shift quickly when conditions change. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D12 The Second Agility Principle: Develop the ability to quickly shift focus. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D13: The Principle of Peer-Level Coordination: Tactical coordination should be local. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D14: The Principle of Flexible Plans: Use simple modular plans. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D15: The Principle of Tactical Reserves: Decentralize a portion of reserves. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D16: The Principle of Early Contact: Make early and meaningful contact with the problem. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D17: The Principle of Decentralized Information: For decentralized decisions, disseminate key information widely. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D18: The Frequency Response Principle: We cant respond faster than our frequency response. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D19: The Quality of Service Principle: When response time is important, measure response time. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D20: The Second Market Principle: Use internal and external markets to decentralize control. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D21: The Principle of Regenerative Initiative: Cultivating initiative enables us to use initiative. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D22: The Principle of Face-to-Face Communication: Exploit the speed and bandwidth of face-to-face communications. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D23: The Trust Principle: Trust is built through experience. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://lpd2.com/the-principles-of-flow/&amp;quot;&amp;gt;Source:&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;      Principles of Agile      2015-11-17T00:00:00+02:00   http://spine.wiki/principle/PrinciplesOfAgile   &amp;lt;h1 id=&amp;quot;primary-principles&amp;quot;&amp;gt;Primary Principles&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;We are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/IndividualsAndInteractionsOverProcessesAndTools&amp;quot;&amp;gt;Individuals and interactions over processes and tools&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/WorkingSoftwareOverComprehensiveDocumentation&amp;quot;&amp;gt;Working software over comprehensive documentation&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/CustomerCollaborationOverContractNegotiation&amp;quot;&amp;gt;Customer collaboration over contract negotiation&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/RespondingToChangeOverFollowingAPlan&amp;quot;&amp;gt;Responding to change over following a plan&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;That is, while there is value in the items on the right, we value the items on the left more.&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;additional-12-principles&amp;quot;&amp;gt;Additional 12 Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Welcome changing requirements, even late in development. Agile processes harness change for the customers competitive advantage.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Business people and developers must work together daily throughout the project.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Working software is the primary measure of progress.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Continuous attention to technical excellence and good design enhances agility.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Simplicitythe art of maximizing the amount of work not doneis essential.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;The best architectures, requirements, and designs emerge from self-organizing teams.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/AgileManifesto/&amp;quot;&amp;gt;Agile archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://agilemanifesto.org/&amp;quot;&amp;gt;agilemanifesto.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Spine Model - A systemic approach to effective leadership      2015-10-14T00:00:00+02:00   http://spine.wiki/news/agile2015talk   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://spinemodel.info/news/agile2015talk&amp;quot;&amp;gt;This page has moved.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Responding to change over following a plan      2015-07-19T00:00:00+02:00   http://spine.wiki/principle/RespondingToChangeOverFollowingAPlan   &amp;lt;p&amp;gt;This is the fourth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of the &amp;lt;a href=&amp;quot;/archetype/AgileManifesto/&amp;quot;&amp;gt;Agile Manifesto&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Customer collaboration over contract negotiation      2015-07-19T00:00:00+02:00   http://spine.wiki/principle/CustomerCollaborationOverContractNegotiation   &amp;lt;p&amp;gt;This is the thirs &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of the &amp;lt;a href=&amp;quot;/archetype/AgileManifesto/&amp;quot;&amp;gt;Agile Manifesto&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Working software over comprehensive documentation      2015-07-18T00:00:00+02:00   http://spine.wiki/principle/WorkingSoftwareOverComprehensiveDocumentation   &amp;lt;p&amp;gt;This is the second &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of the &amp;lt;a href=&amp;quot;/archetype/AgileManifesto/&amp;quot;&amp;gt;Agile Manifesto&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Individuals and interactions over processes and tools      2015-07-18T00:00:00+02:00   http://spine.wiki/principle/IndividualsAndInteractionsOverProcessesAndTools   &amp;lt;p&amp;gt;This is the first &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of the &amp;lt;a href=&amp;quot;/prototype/AgileManifesto/&amp;quot;&amp;gt;Agile Manifesto&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Agile Software Development, Manifesto for      2015-07-18T00:00:00+02:00   http://spine.wiki/archetype/AgileManifesto   &amp;lt;h2 id=&amp;quot;origin&amp;quot;&amp;gt;Origin&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;On February 11-13, 2001, at The Lodge at Snowbird ski resort in the Wasatch mountains of Utah, seventeen people met to talk, ski, relax, and try to find common ground and of course, to eat. What emerged was the Agile Software Development Manifesto. Representatives from &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;Extreme Programming&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;/archetype/DSDM/&amp;quot;&amp;gt;DSDM&amp;lt;/a&amp;gt;, Adaptive Software Development, &amp;lt;a href=&amp;quot;/archetype/Crystal/&amp;quot;&amp;gt;Crystal&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;/archetype/FDD/&amp;quot;&amp;gt;Feature-Driven Development&amp;lt;/a&amp;gt;, Pragmatic Programming, and others sympathetic to the need for an alternative to documentation driven, heavyweight software development processes convened.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://agilemanifesto.org/history.html&amp;quot;&amp;gt;Read the rest here: History: The Agile Manifesto&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;needs&amp;quot;&amp;gt;Needs&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://agilemanifesto.org/history.html&amp;quot;&amp;gt;From Jim Highsmith, in History: The Agile Manifesto&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;In order to succeed in the new economy, to move aggressively into the era of e-business, e-commerce, and the web, companies have to rid themselves of their Dilbert manifestations of make-work and arcane policies. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;While the Manifesto provides some specific ideas, there is a deeper theme that drives many, but not all, to be sure, members of the alliance. At the close of the two-day meeting, Bob Martin joked that he was about to make a mushy statement. But while tinged with humor, few disagreed with Bobs [Robert Martins] sentiments that we all felt privileged to work with a group of people who held a set of compatible values, a set of values based on trust and respect for each other and promoting organizational models based on people, collaboration, and building the types of organizational communities in which we [the manifesto authors] would want to work. At the core, I [Jim Highsmith] believe Agile Methodologists are really about mushy stuff, about delivering good products to customers by operating in an environment that does more than talk about people as our most important asset but actually acts as if people were the most important, and lose the word asset. So in the final analysis, the meteoric rise of interest in and sometimes tremendous criticism of Agile Methodologies is about the mushy stuff of values and culture.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Agile movement is not anti-methodology, in fact, many of us want to restore credibility to the word methodology. We want to restore a balance. We embrace modeling, but not in order to file some diagram in a dusty corporate repository. We embrace documentation, but not hundreds of pages of never-maintained and rarely-used tomes. We plan, but recognize the limits of planning in a turbulent environment. Those who would brand proponents of XP or &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt; or any of the other Agile Methodologies as hackers are ignorant of both the methodologies and the original definition of the term hacker.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://agilemanifesto.org/history.html&amp;quot;&amp;gt;Read the rest here: History: The Agile Manifesto&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;values&amp;quot;&amp;gt;Values&amp;lt;/h2&amp;gt;&amp;lt;h5 id=&amp;quot;systemic-values&amp;quot;&amp;gt;Systemic Values&amp;lt;/h5&amp;gt;&amp;lt;p&amp;gt;The Manifesto for Agile Software Development does not explicitly state any &amp;lt;a href=&amp;quot;/values.html&amp;quot;&amp;gt;Values&amp;lt;/a&amp;gt; (by the Spine Model definition). &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;You can infer them though. For example the first Principle below could be interpreted as valuing People higher than Process, or perhaps Effectiveness higher than Efficiency. The second Principle could be abstracted to valuing &amp;lt;a href=&amp;quot;/Value/Feedback/&amp;quot;&amp;gt;Feedback&amp;lt;/a&amp;gt; higher than Compliance. &amp;lt;/p&amp;gt;&amp;lt;h5 id=&amp;quot;personal-values&amp;quot;&amp;gt;Personal Values&amp;lt;/h5&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://agilemanifesto.org/history.html&amp;quot;&amp;gt;Robert Martin, from History: The Agile Manifesto&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;We all felt privileged to work with a group of people who held a set of compatible values, a set of values based on trust and respect for each other and promoting organizational models based on people, collaboration, and building the types of organizational communities in which we would want to work.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;principles&amp;quot;&amp;gt;Principles&amp;lt;/h2&amp;gt;&amp;lt;h5 id=&amp;quot;primary-principles&amp;quot;&amp;gt;Primary Principles&amp;lt;/h5&amp;gt;&amp;lt;p&amp;gt;We are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Principle/IndividualsAndInteractionsOverProcessesAndTools&amp;quot;&amp;gt;Individuals and interactions over processes and tools&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Principle/WorkingSoftwareOverComprehensiveDocumentation&amp;quot;&amp;gt;Working software over comprehensive documentation&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Principle/CustomerCollaborationOverContractNegotiation&amp;quot;&amp;gt;Customer collaboration over contract negotiation&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Principle/RespondingToChangeOverFollowingAPlan&amp;quot;&amp;gt;Responding to change over following a plan&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;That is, while there is value in the items on the right, we value the items on the left more.&amp;lt;/p&amp;gt;&amp;lt;h5 id=&amp;quot;additional-12-principles&amp;quot;&amp;gt;Additional 12 Principles&amp;lt;/h5&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Welcome changing requirements, even late in development. Agile processes harness change for the customers competitive advantage.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Business people and developers must work together daily throughout the project.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Working software is the primary measure of progress.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Continuous attention to technical excellence and good design enhances agility.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Simplicitythe art of maximizing the amount of work not doneis essential.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;The best architectures, requirements, and designs emerge from self-organizing teams.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://agilemanifesto.org/&amp;quot;&amp;gt;agilemanifesto.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices&amp;quot;&amp;gt;Practices&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The manifesto does not prescribe or give opinions on any specific &amp;lt;a href=&amp;quot;/practices.html&amp;quot;&amp;gt;Practices&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;tools&amp;quot;&amp;gt;Tools&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The manifesto does not prescribe or give opinions on any specific &amp;lt;a href=&amp;quot;/tools.html&amp;quot;&amp;gt;Tools&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Visualize and limit WIP, reduce batch sizes, and manage queue lengths      2015-06-09T00:00:00+02:00   http://spine.wiki/principle/VisualizeAndLimitWIPReduceBatchSizesAndManageQueueLengths   &amp;lt;p&amp;gt;This is the sixth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/visualize-and-limit-wip-reduce-batch-sizes-and-manage-queue-lengths/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Unlock the intrinsic motivation of knowledge workers      2015-06-09T00:00:00+02:00   http://spine.wiki/principle/UnlockTheIntrinsicMotivationOfKnowledgeWorkers   &amp;lt;p&amp;gt;This is the eighth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/unlock-the-intrinsic-motivation-of-knowledge-workers/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Take an Economic View      2015-06-09T00:00:00+02:00   http://spine.wiki/principle/TakeAnEconomicView   &amp;lt;p&amp;gt;This is the first &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/take-an-economic-view/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Decentralize decision-making      2015-06-09T00:00:00+02:00   http://spine.wiki/principle/DecentralizeDecisionMaking   &amp;lt;p&amp;gt;This is the ninth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/decentralize-decision-making/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Build Incrementally With Fast Integrated Learning Cycles      2015-06-09T00:00:00+02:00   http://spine.wiki/principle/BuildIncrementallyWithFastIntegratedLearningCycles   &amp;lt;p&amp;gt;This is the fourth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/build-incrementally-with-fast-integrated-learning-cycles/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Base Milestones On Objective Evaluation Of Working Systems      2015-06-09T00:00:00+02:00   http://spine.wiki/principle/BaseMilestonesOnObjectiveEvaluationOfWorkingSystems   &amp;lt;p&amp;gt;This is the fifth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/base-milestones-on-objective-evaluation-of-working-systems/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Assume Variability; Preserve Options      2015-06-09T00:00:00+02:00   http://spine.wiki/principle/AssumeVariabilityPreserveOptions   &amp;lt;p&amp;gt;This is the third &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/assume-variability-preserve-options/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Apply Systems Thinking      2015-06-09T00:00:00+02:00   http://spine.wiki/principle/ApplySystemsThinking   &amp;lt;p&amp;gt;This is the second &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/apply-systems-thinking/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Apply cadence, synchronize with cross-domain planning      2015-06-09T00:00:00+02:00   http://spine.wiki/principle/ApplyCadenceSynchronizeWithCrossDomainPlanning   &amp;lt;p&amp;gt;This is the seventh &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/apply-cadence-synchronize-with-cross-domain-planning/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Can I contribute to Spine Wiki?      2015-06-01T00:00:00+02:00   http://spine.wiki/faq/Contribute   &amp;lt;p&amp;gt;We welcome contributions to the Spine Wiki. Please take a look at &amp;lt;a href=&amp;quot;/explanation/Contribution&amp;quot;&amp;gt;the guidelines on how to contribute&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;      Team Retrospective      2015-05-30T00:00:00+02:00   http://spine.wiki/practice/TeamRetrospective   &amp;lt;h2 id=&amp;quot;what-is-it&amp;quot;&amp;gt;What is it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;One of the most important practices for teams that are applying the Principle of Inspect and Adapt.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;why-use-it&amp;quot;&amp;gt;Why use it?&amp;lt;/h2&amp;gt;&amp;lt;h2 id=&amp;quot;when-to-use-it&amp;quot;&amp;gt;When to use it?&amp;lt;/h2&amp;gt;&amp;lt;h2 id=&amp;quot;what-could-it-look-like&amp;quot;&amp;gt;What could it look like?&amp;lt;/h2&amp;gt;&amp;lt;h2 id=&amp;quot;assumptions&amp;quot;&amp;gt;Assumptions&amp;lt;/h2&amp;gt;&amp;lt;h2 id=&amp;quot;sprint-retrospectives-in-scrumarchetypescrum&amp;quot;&amp;gt;Sprint Retrospectives in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Scrum prescribes the use of Retrospectives, and describes them in the official Scrum Guide as follows:&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Sprint Retrospective is an opportunity for the Scrum Team to inspect itself and create a plan for improvements to be enacted during the next Sprint.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Sprint Retrospective occurs after the Sprint Review and prior to the next Sprint Planning. This is a three-hour time-boxed meeting for one-month Sprints. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches all to keep it within the time-box. The Scrum Master participates as a peer team member in the meeting from the accountability over the Scrum process.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The purpose of the Sprint Retrospective is to:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Inspect how the last Sprint went with regards to people, relationships, process, and tools;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Identify and order the major items that went well and potential improvements; and,&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Create a plan for implementing improvements to the way the Scrum Team does its work.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;The Scrum Master encourages the Scrum Team to improve, within the Scrum process framework, its development process and practices to make it more effective and enjoyable for the next Sprint. During each Sprint Retrospective, the Scrum Team plans ways to increase product quality by adapting the definition of Done as appropriate.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;By the end of the Sprint Retrospective, the Scrum Team should have identified improvements that it will implement in the next Sprint. Implementing these improvements in the next Sprint is the adaptation to the inspection of the Scrum Team itself. Although improvements may be implemented at any time, the Sprint Retrospective provides a formal opportunity to focus on inspection and adaptation.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/docs/scrumguide/v1/scrum-guide-us.pdf&amp;quot;&amp;gt;Source: The Official Scrum Guide&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Team Cognitive Load Tracker      2015-05-30T00:00:00+02:00   http://spine.wiki/tool/CognitiveLoadTracker   &amp;lt;h2 id=&amp;quot;what-is-it&amp;quot;&amp;gt;What is it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;A way of gathering data on what work is interrupting people on a team and consuming their time and attention.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;why-use-it&amp;quot;&amp;gt;Why use it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Cognitive capacity is finite. If a team is experiencing many unscheduled interruptions then their ability to do their scheduled work will be restricted.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;when-to-use-it&amp;quot;&amp;gt;When to use it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;When the team feels that they are unable to focus on the work they have committed to because of many unpredictable and unsheduled interruptions.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;what-could-it-look-like&amp;quot;&amp;gt;What could it look like?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;A physical board in the team area with named swim lanes for each individual on the team. Two columns, Interruption and Done to show what the person has been interrupted for and whether or not they have done it. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Each team member keeps a pad of postits on their desk and writes one out and sticks it on the board as they get interrupted by unscheduled work. Weve found the board can get quite full in a two week period, so the little micro-postits work best to save space.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;After two weeks, probably in the teams Retrospective if they have one, the team then uses the items on the board to try and uncover root causes for interruptions, patterns or other insights. They then try and use this data to pick actions to address the situation.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For example if many interruptions are for user support they might decide to build a particular feature to enable users to help themselves with a certain type of recurring issue. Or, they might decide to have a weekly support rotation where one team member absorbs all the interruptions and allows the rest of the team to focus.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;assumptions&amp;quot;&amp;gt;Assumptions&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Use of this tool assumes that the team is attempting to manage their flow of work to be more effective and accurately forecast their capacity to complete work.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;You could of course apply the tool to yourself, to uncover your own interruptions.&amp;lt;/p&amp;gt;      Human needs according to NVC      2015-05-28T00:00:00+02:00   http://spine.wiki/need/NVCNeeds   &amp;lt;p&amp;gt;According to NVC, humans all have the following needs&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;connection&amp;quot;&amp;gt;Connection&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;acceptance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;affection&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;appreciation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;belonging&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;cooperation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;communication&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;closeness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;community&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;companionship&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;compassion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;consideration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;consistency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;empathy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;inclusion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;intimacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;love&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;mutuality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;nurturing&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;respect/self-respect&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;safety&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;security&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;stability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;support&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;to know and be known&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;to see and be seen&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;to understand and be understood&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;trust&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;warmth&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;honesty&amp;quot;&amp;gt;Honesty&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;authenticity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;integrity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;presence&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;play&amp;quot;&amp;gt;Play&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;joy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;humor&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;peace&amp;quot;&amp;gt;Peace&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;beauty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;communion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;ease&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;equality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;harmony&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;inspiration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;order&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;physical-well-being&amp;quot;&amp;gt;Physical Well-being&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;air&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;food&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;movement/exercise&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;rest/sleep&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;sexual expression&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;safety&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;shelter&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;touch&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;water&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;meaning&amp;quot;&amp;gt;Meaning&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;awareness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;celebration of life&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;challenge&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;clarity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;competence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;consciousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;contribution&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;creativity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;discovery&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;efficacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;effectiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;growth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;hope&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;learning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;mourning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;participation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;purpose&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;self-expression&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;stimulation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;to matter&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;understanding&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;autonomy&amp;quot;&amp;gt;Autonomy&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;choice&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;freedom&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;independence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;space&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;spontaneity&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;      Pull Work Through the System      2015-05-24T00:00:00+02:00   http://spine.wiki/principle/PullWorkThroughTheSystem   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Heuristics      2015-05-24T00:00:00+02:00   http://spine.wiki/explanation/Heuristics   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/faq/WhatIsASystem&amp;quot;&amp;gt;System&amp;lt;/a&amp;gt; boundaries can be put in place by providing heuristic rules to govern a particular principle.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;People tend to remember heuristic better when they come in threes. For example we often use these three for teams:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;Increase&amp;lt;/strong&amp;gt; &amp;lt;a href=&amp;quot;/value/feedback&amp;quot;&amp;gt;feedback&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;Decrease&amp;lt;/strong&amp;gt; &amp;lt;a href=&amp;quot;/principle/batchsize&amp;quot;&amp;gt;batch size&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;Pull&amp;lt;/strong&amp;gt; &amp;lt;a href=&amp;quot;/principle/pullworkthroughthesystem&amp;quot;&amp;gt;work through the system&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;This does not tell teams what &amp;lt;a href=&amp;quot;/practices.html&amp;quot;&amp;gt;Practices&amp;lt;/a&amp;gt; to use, however they can be measured against whether or not they are applying the &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principles&amp;lt;/a&amp;gt; in a desirable way.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;See the &amp;lt;a href=&amp;quot;/faq/PathToAgileMastery&amp;quot;&amp;gt;Path to Agile Mastery&amp;lt;/a&amp;gt; FAQ article for more some more in depth exploration of when heuristics are appropriate.&amp;lt;/p&amp;gt;      Batch Size      2015-05-24T00:00:00+02:00   http://spine.wiki/principle/BatchSize   &amp;lt;h2 id=&amp;quot;optimum-batch-size&amp;quot;&amp;gt;Optimum batch size&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;img src=&amp;quot;/assets/images/optimum_batch_size.png&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;What to learn next&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;coming soon&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;coming soon&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;      Kanban      2015-05-23T00:00:00+02:00   http://spine.wiki/archetype/Kanban   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Feature Driven Development (FDD)      2015-05-23T00:00:00+02:00   http://spine.wiki/archetype/FDD   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Dynamic Systems Development Method (DSDM)      2015-05-23T00:00:00+02:00   http://spine.wiki/archetype/DSDM   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Disciplined Agile Delivery (DAD)      2015-05-23T00:00:00+02:00   http://spine.wiki/archetype/DAD   &amp;lt;h2 id=&amp;quot;needs&amp;quot;&amp;gt;Needs&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The Disciplined Agile Delivery (DAD) process decision framework  is a people-first, learning-oriented hybrid agile approach to IT solution delivery. It has a risk-value delivery lifecycle, is goal-driven, is enterprise aware, and is scalable.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.disciplinedagiledelivery.com/introduction-to-dad/&amp;quot;&amp;gt;Source: The Official Introduction to DAD&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Crystal      2015-05-23T00:00:00+02:00   http://spine.wiki/archetype/Crystal   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Core Working Hours      2015-05-23T00:00:00+02:00   http://spine.wiki/practice/CoreWorkingHours   &amp;lt;p&amp;gt;Core working hours are the block of hours in which the members of the team agree to be working as a team every working day. It is useful to get upfront agreement on when these are to ensure that the team has productive working time together.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;what-core-working-hours-means-me-by-danie-roux&amp;quot;&amp;gt;What Core Working Hours means me (by Danie Roux)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Core Working Hours used to &amp;lt;em&amp;gt;mean&amp;lt;/em&amp;gt; something. I realise that this makesme sound like an extremely old man, but let me explain:&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;During the core working hours, we were productive. We produced something of value to the team and company. Things that werent considered adding value were e-mails, meetings, taking calls and fielding interruptions.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;In order to ensure we were productive and adding value during core working hours, we closed our office doors, turned off our cell phones, unplugged the office phones and closed the instant messaging applications. Then we tackled the work in front of us with gusto.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;That is what we mean by Core &amp;lt;em&amp;gt;Working&amp;lt;/em&amp;gt; Hours. The hours the team agree to be together, working.&amp;lt;/p&amp;gt;      Openness      2015-05-14T00:00:00+02:00   http://spine.wiki/value/Openness   &amp;lt;h2 id=&amp;quot;as-defined-in-scrumarchetypescrum&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;As we work together, we express how were doing, whats in our way, and our concerns so they can be addressed.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;https://www.scrumalliance.org/why-scrum/core-scrum-values-roles&amp;quot;&amp;gt;scrumalliance.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Focus      2015-05-14T00:00:00+02:00   http://spine.wiki/value/Focus   &amp;lt;h2 id=&amp;quot;as-defined-in-scrumarchetypescrum&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Because we focus on only a few things at a time, we work well together and produce excellent work. We deliver valuable items sooner.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;https://www.scrumalliance.org/why-scrum/core-scrum-values-roles&amp;quot;&amp;gt;scrumalliance.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Commitment      2015-05-14T00:00:00+02:00   http://spine.wiki/value/Commitment   &amp;lt;h2 id=&amp;quot;as-defined-in-scrumarchetypescrum&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Because we have great control over our own destiny, we are more committed to success.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;https://www.scrumalliance.org/why-scrum/core-scrum-values-roles&amp;quot;&amp;gt;scrumalliance.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Simplicity      2015-05-13T00:00:00+02:00   http://spine.wiki/value/Simplicity   &amp;lt;h2 id=&amp;quot;as-defined-in-extreme-programming-xparchetypexp&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;eXtreme Programming (XP)&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;We will do what is needed and asked for, but no more. This will maximize the value created for the investment made to date. We will take small simple steps to our goal and mitigate failures as they happen. We will create something we are proud of and maintain it long term for reasonable costs. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/values.html&amp;quot;&amp;gt;extremeprogramming.org/values&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Respect      2015-05-13T00:00:00+02:00   http://spine.wiki/value/Respect   &amp;lt;h2 id=&amp;quot;as-defined-in-extreme-programming-xparchetypexp&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;eXtreme Programming (XP)&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Everyone gives and feels the respect they deserve as a valued team member. Everyone contributes value even if its simply enthusiasm. Developers respect the expertise of the customers and vice versa. Management respects our right to accept responsibility and receive authority over our own work.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/values.html&amp;quot;&amp;gt;extremeprogramming.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;as-defined-in-scrumarchetypescrum&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;As we work together, sharing successes and failures, we come to respect each other and to help each other become worthy of respect.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;https://www.scrumalliance.org/why-scrum/core-scrum-values-roles&amp;quot;&amp;gt;scrumalliance.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Feedback      2015-05-13T00:00:00+02:00   http://spine.wiki/value/Feedback   &amp;lt;h2 id=&amp;quot;as-defined-in-extreme-programming-xparchetypexp&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;eXtreme Programming (XP)&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;We will take every iteration commitment seriously by delivering working software. We demonstrate our software early and often then listen carefully and make any changes needed. We will talk about the project and adapt our process to it, not the other way around.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/values.html&amp;quot;&amp;gt;extremeprogramming.org/values&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Courage      2015-05-13T00:00:00+02:00   http://spine.wiki/value/Courage   &amp;lt;h2 id=&amp;quot;as-defined-in-extreme-programming-xparchetypexp&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;eXtreme Programming (XP)&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;We will tell the truth about progress and estimates. We dont document excuses for failure because we plan to succeed. We dont fear anything because no one ever works alone. We will adapt to changes when ever they happen.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/values.html&amp;quot;&amp;gt;extremeprogramming.org/values&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;as-defined-in-scrumarchetypescrum&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Because we work as a team, we feel supported and have more resources at our disposal. This gives us the courage to undertake greater challenges.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;https://www.scrumalliance.org/why-scrum/core-scrum-values-roles&amp;quot;&amp;gt;scrumalliance.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Capacity of a work system      2015-05-13T00:00:00+02:00   http://spine.wiki/principle/CapacityOfAWorkSystem   &amp;lt;p&amp;gt;Counterintuitively, the way for more work to be completed in a &amp;lt;a href=&amp;quot;/faq/WhatIsASystem&amp;quot;&amp;gt;work system&amp;lt;/a&amp;gt; is not for everyone to work harder. You first need to understand the capacity of the system to move the work from start to finished&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;iframe width=&amp;quot;560&amp;quot; height=&amp;quot;315&amp;quot; src=&amp;quot;https://www.youtube.com/embed/zEzKsEzuZYM&amp;quot; frameborder=&amp;quot;0&amp;quot; allowfullscreen=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;p&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;What to learn next&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;coming soon&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;coming soon&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Communication      2015-05-12T00:00:00+02:00   http://spine.wiki/value/communication   &amp;lt;h2 id=&amp;quot;as-defined-in-extreme-programming-xparchetypexp&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;eXtreme Programming (XP)&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Everyone is part of the team and we communicate face to face daily. We will work together on everything from requirements to code. We will create the best solution to our problem that we can together.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/values.html&amp;quot;&amp;gt;extremeprogramming.org/values&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;      Scrum Product Owner      2015-05-12T00:00:00+02:00   http://spine.wiki/practice/ScrumProductOwner   &amp;lt;p&amp;gt;The Product Owner is responsible for maximizing the value of the product and the work of the Development Team. How this is done may vary widely across organizations, &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt; Teams, and individuals.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Product Owner is the sole person responsible for managing the Product Backlog. Product Backlog management includes:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Clearly expressing Product Backlog items;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ordering the items in the Product Backlog to best achieve goals and missions;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Optimizing the value of the work the Development Team performs;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ensuring that the Product Backlog is visible, transparent, and clear to all, and shows what the Scrum Team will work on next; and,&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ensuring the Development Team understands items in the Product Backlog to the level needed.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;The Product Owner may do the above work, or have the Development Team do it. However, the Product Owner remains accountable.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Product Owner is one person, not a committee. The Product Owner may represent the desires of a committee in the Product Backlog, but those wanting to change a Product Backlog items priority must address the Product Owner.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For the Product Owner to succeed, the entire organization must respect his or her decisions. The Product Owners decisions are visible in the content and ordering of the Product Backlog. No one is allowed to tell the Development Team to work from a different set of requirements, and the Development Team isnt allowed to act on what anyone else says.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/docs/scrumguide/v1/scrum-guide-us.pdf&amp;quot;&amp;gt;Source: The Official Scrum Guide&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Scrum Master      2015-05-12T00:00:00+02:00   http://spine.wiki/practice/ScrumMaster   &amp;lt;p&amp;gt;The Scrum Master is responsible for ensuring &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt; is understood and enacted. Scrum Masters do this by ensuring that the Scrum Team adheres to Scrum theory, practices, and rules.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Scrum Master is a servant-leader for the Scrum Team. The Scrum Master helps those outside the Scrum Team understand which of their interactions with the Scrum Team are helpful and which arent. The Scrum Master helps everyone change these interactions to maximize the value created by the Scrum Team.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;scrum-master-service-to-the-product-owner&amp;quot;&amp;gt;Scrum Master Service to the Product Owner&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The Scrum Master serves the Product Owner in several ways, including:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Finding techniques for effective Product Backlog management;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Helping the Scrum Team understand the need for clear and concise Product Backlog items;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Understanding product planning in an empirical environment;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ensuring the Product Owner knows how to arrange the Product Backlog to maximize value;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Understanding and practicing agility; and,&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Facilitating Scrum events as requested or needed.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;scrum-master-service-to-the-development-team&amp;quot;&amp;gt;Scrum Master Service to the Development Team&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The Scrum Master serves the Development Team in several ways, including:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Coaching the Development Team in self-organization and cross-functionality;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Helping the Development Team to create high-value products;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Removing impediments to the Development Teams progress;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Facilitating Scrum events as requested or needed; and,&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Coaching the Development Team in organizational environments in which Scrum is not yet fully adopted and understood.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;scrum-master-service-to-the-organization&amp;quot;&amp;gt;Scrum Master Service to the Organization&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The Scrum Master serves the organization in several ways, including:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Leading and coaching the organization in its Scrum adoption;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Planning Scrum implementations within the organization;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Helping employees and stakeholders understand and enact Scrum and empirical product development;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Causing change that increases the productivity of the Scrum Team; and,&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Working with other Scrum Masters to increase the effectiveness of the application of Scrum in the organization.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/docs/scrumguide/v1/scrum-guide-us.pdf&amp;quot;&amp;gt;Source: The Official Scrum Guide&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;      Resource vs Flow Optimisation      2015-05-12T00:00:00+02:00   http://spine.wiki/principle/ResourceVsFlowOptimisation   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;   "
     
   } ,
  
   {
     
        "title"    : "Categories",
        "category" : "",
        "tags"     : "",
        "url"      : "/categories.html",
        "date"     : "",
        "content"  : "                               principle 22                                 practice 18                                 value 16                                 archetype 10                                 explanation 3                                 need 1                                 tool 4                                 faq 2                                 news 1                 principle                                              Principles of LeSS                                                    Principles of Extreme Programming                                                    Principles of SAFe                                                    Principles of Flow                                                    Principles of Agile                                                    Responding to change over following a plan                                                    Customer collaboration over contract negotiation                                                    Working software over comprehensive documentation                                                    Individuals and interactions over processes and tools                                                    Visualize and limit WIP, reduce batch sizes, and manage queue lengths                                                    Unlock the intrinsic motivation of knowledge workers                                                    Take an Economic View                                                    Decentralize decision-making                                                    Build Incrementally With Fast Integrated Learning Cycles                                                    Base Milestones On Objective Evaluation Of Working Systems                                                    Assume Variability; Preserve Options                                                    Apply Systems Thinking                                                    Apply cadence, synchronize with cross-domain planning                                                    Pull Work Through the System                                                    Batch Size                                                    Capacity of a work system                                                    Resource vs Flow Optimisation                           practice                                              Whole Team                                                    Test Driven Development                                                    Sustainable Pace                                                    Small Releases                                                    Simple Design                                                    Design Improvement (Refactoring)                                                    Practices of Extreme Programming                                                    Planning Game                                                    Pair Programming                                                    Metaphor                                                    Customer Tests                                                    Continuous Integration                                                    Collective Code Ownership                                                    Coding Standard                                                    Team Retrospective                                                    Core Working Hours                                                    Scrum Product Owner                                                    Scrum Master                           value                                              Generic List of Values                                                    Transparency                                                    Program Execution                                                    Code Quality                                                    Alignment                                                    Values of Extreme Programming                                                    Values of Scrum                                                    Values of SAFe                                                    Openness                                                    Focus                                                    Commitment                                                    Simplicity                                                    Respect                                                    Feedback                                                    Courage                                                    Communication                           archetype                                              eXtreme Programming (XP)                                                    Scrum                                                    Scaled Agile Framework (SAFe)                                                    Large-Scale Scrum (LeSS)                                                    Agile Software Development, Manifesto for                                                    Kanban                                                    Feature Driven Development (FDD)                                                    Dynamic Systems Development Method (DSDM)                                                    Disciplined Agile Delivery (DAD)                                                    Crystal                           explanation                                              How to Contribution to spine.wiki                                                    To Do                                                    Heuristics                           need                                              Human needs according to NVC                           tool                                              Tools for Visualising Work In Progress                                                    Next Retro Topics List                                                    Tools for Retrospectives                                                    Team Cognitive Load Tracker                           faq                                              How do I learn about the Spine Model?                                                    Can I contribute to Spine Wiki?                           news                                              Spine Model - A systemic approach to effective leadership                        "
     
   } ,
  
   {
     
        "title"    : "FAQ",
        "category" : "",
        "tags"     : "",
        "url"      : "/faq.html",
        "date"     : "",
        "content"  : "                                                      Can I contribute to Spine Wiki?                                                          How do I learn about the Spine Model?        "
     
   } ,
  
   {
     
        "title"    : "Welcome to Spine Wiki",
        "category" : "",
        "tags"     : "",
        "url"      : "/index.html",
        "date"     : "",
        "content"  : "New to the Spine Model?The Spine Model can be applied to any human system and the individuals in it. If youre not familiar with the it, we recommend you learn the basic ideas behind the model first.What is the purpose of this wiki?When you create a Spine, instead of describing each item in detail you can just link to the relevant spine.wiki page.This wiki catalogs each level of the model and its various implementations in a way that creates an encyclopaedia that anyone can draw from and contribute to.How to contributeWe welcome any contributions. See the guidelines on how to contribute.Most recent contributions                                      23 Apr 2017 &amp;raquo; How do I learn about the Spine Model? (FAQ by Kevin Trethewey)                                        23 Apr 2017 &amp;raquo; How to Contribution to spine.wiki (Explanation by Kevin Trethewey)                                        22 Apr 2017 &amp;raquo; eXtreme Programming (XP) (Archetype by Kevin Trethewey)                                        22 Apr 2017 &amp;raquo; To Do (Explanation by Kevin Trethewey)                                        22 Apr 2017 &amp;raquo; Scrum (Archetype by Kevin Trethewey)                                        22 Apr 2017 &amp;raquo; Scaled Agile Framework (SAFe) (Archetype by Kevin Trethewey)                                        22 Apr 2017 &amp;raquo; Principles of LeSS (Principle by Kevin Trethewey)                                        22 Apr 2017 &amp;raquo; Large-Scale Scrum (LeSS) (Archetype by Kevin Trethewey)                                        25 Jan 2016 &amp;raquo; Generic List of Values (Value by Kevin Trethewey)                                        22 Nov 2015 &amp;raquo; Whole Team (Practice by Kevin Trethewey)    "
     
   } ,
  
   {
     
        "title"    : "Needs",
        "category" : "",
        "tags"     : "",
        "url"      : "/needs.html",
        "date"     : "",
        "content"  : "                                      Human needs according to NVC - non-violent communication      To learn about the Needs level of the Spine Model, go to spinemodel.info/Needs"
     
   } ,
  
   {
     
        "title"    : "All Pages",
        "category" : "",
        "tags"     : "",
        "url"      : "/pages.html",
        "date"     : "",
        "content"  : "All Pages                                  RSS Feed                                                    Atom Feed                                                    Categories                                                    Sitemap                                                    Welcome to Spine Wiki                                                          All Pages                                                    Needs                                                    Values                                                    Principles                                                    Practices                                                    Tools                                                    Archetypes                                                    FAQ                                                    Tags                      "
     
   } ,
  
   {
     
        "title"    : "Practices",
        "category" : "",
        "tags"     : "",
        "url"      : "/practices.html",
        "date"     : "",
        "content"  : "                                                                                          Core Working Hours                                                                                                                      Practices of Extreme Programming                                                          Scrum Master                                                          Scrum Product Owner                                                                                              Team Retrospective                                To learn about the Practices level of the Spine Model, go to spinemodel.info/Practices"
     
   } ,
  
   {
     
        "title"    : "Principles",
        "category" : "",
        "tags"     : "",
        "url"      : "/principles.html",
        "date"     : "",
        "content"  : "                                                                                                      Batch Size                                                                      Capacity of a work system                                                                                              Principles of Agile                                                          Principles of Extreme Programming                                                          Principles of Flow                                                          Principles of LeSS                                                          Principles of SAFe                                                          Pull Work Through the System                                                          Resource vs Flow Optimisation                                                                    To learn about the Principles level of the Spine Model, go to spinemodel.info/Principles"
     
   } ,
  
   {
     
        "title"    : "RSS Feed",
        "category" : "",
        "tags"     : "",
        "url"      : "/rss.xml",
        "date"     : "",
        "content"  : "        Spine Wiki        Spine Wiki - Kevin Trethewey, Danie Roux, Joanne Perold and Collaborators        http://spine.wiki        http://spine.wiki        2017-04-23T09:56:25+02:00        2017-04-23T09:56:25+02:00        1800                        How do I learn about the Spine Model?                &amp;lt;p&amp;gt;This site is a wiki catalog for the Spine Model. The model itself is described at &amp;lt;a href=&amp;quot;http://spinemodel.info&amp;quot;&amp;gt;spinemodel.info&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/faq/Learn                http://spine.wiki/faq/Learn                2017-04-23T00:00:00+02:00                                How to Contribution to spine.wiki                &amp;lt;p&amp;gt;  First off, thanks for taking the time to contribute! Were really glad youre reading this, because we need volunteers to help the wiki come to fruition.   &amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;important-resources&amp;quot;&amp;gt;Important resources:&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;There is a SpineModel slack group (&amp;lt;a href=&amp;quot;https://spinemodel.slack.com/&amp;quot;&amp;gt;spinemodel.slack.com&amp;lt;/a&amp;gt;). &amp;lt;a href=&amp;quot;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#116;&amp;amp;#111;:&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#063;&amp;amp;#115;&amp;amp;#117;&amp;amp;#098;&amp;amp;#106;&amp;amp;#101;&amp;amp;#099;&amp;amp;#116;&amp;amp;#061;&amp;amp;#080;&amp;amp;#108;&amp;amp;#101;&amp;amp;#097;&amp;amp;#115;&amp;amp;#101;&amp;amp;#032;&amp;amp;#097;&amp;amp;#100;&amp;amp;#100;&amp;amp;#032;&amp;amp;#109;&amp;amp;#101;&amp;amp;#032;&amp;amp;#116;&amp;amp;#111;&amp;amp;#032;&amp;amp;#116;&amp;amp;#104;&amp;amp;#101;&amp;amp;#032;&amp;amp;#083;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#077;&amp;amp;#111;&amp;amp;#100;&amp;amp;#101;&amp;amp;#108;&amp;amp;#032;&amp;amp;#083;&amp;amp;#108;&amp;amp;#097;&amp;amp;#099;&amp;amp;#107;&amp;amp;#032;&amp;amp;#071;&amp;amp;#114;&amp;amp;#111;&amp;amp;#117;&amp;amp;#112;&amp;amp;#038;&amp;amp;#098;&amp;amp;#111;&amp;amp;#100;&amp;amp;#121;&amp;amp;#061;&amp;amp;#084;&amp;amp;#104;&amp;amp;#097;&amp;amp;#110;&amp;amp;#107;&amp;amp;#115;&amp;amp;#033;&amp;quot;&amp;gt;Send us an email to get invited&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;You can follow &amp;lt;a href=&amp;quot;http://www.twitter.com/spinemodel&amp;quot;&amp;gt;@spinemodel on twitter&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;If youre familiar with GitHub, &amp;lt;a href=&amp;quot;https://github.com/SpineWiki/spinewiki.github.io&amp;quot;&amp;gt;the repository for this site is here&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;If youd like to send us an email directly, use &amp;lt;a href=&amp;quot;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#116;&amp;amp;#111;:&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;quot;&amp;gt;&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;did-you-find-a-bugmistakebroken-link&amp;quot;&amp;gt;Did you find a bug/mistake/broken link?&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Please report it via &amp;lt;a href=&amp;quot;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#116;&amp;amp;#111;:&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;quot;&amp;gt;&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;do-you-intend-to-add-a-new-page-or-change-an-existing-one&amp;quot;&amp;gt;Do you intend to add a new page or change an existing one?&amp;lt;/h1&amp;gt;&amp;lt;h2 id=&amp;quot;easiest-way&amp;quot;&amp;gt;Easiest Way&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#116;&amp;amp;#111;:&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;quot;&amp;gt;Email your contribution to us&amp;lt;/a&amp;gt;. The preferred format is &amp;lt;a href=&amp;quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&amp;quot;&amp;gt;markdown&amp;lt;/a&amp;gt;, but any text format is accepted (Word, Pdf, even plain text in your email). Well credit you on the page(s) you contribute to.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;for-those-familiar-with-using-github-and-jekyll&amp;quot;&amp;gt;For those familiar with using GitHub and Jekyll&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Spine.wiki is a static &amp;lt;a href=&amp;quot;https://jekyllrb.com/&amp;quot;&amp;gt;jekyll&amp;lt;/a&amp;gt; site.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;You add new pages by creating a new markdown file in the _posts folder on the &amp;lt;em&amp;gt;develop&amp;lt;/em&amp;gt; branch (master branch contains the generated site, develop branch has the raw files). Starting from a copy of an existing file is easiest. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Fork the &amp;lt;a href=&amp;quot;https://github.com/SpineWiki/spinewiki.github.io&amp;quot;&amp;gt;spine.wiki repo from GitHub&amp;lt;/a&amp;gt; and send a pull request with your contribution. &amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;style-conventions&amp;quot;&amp;gt;Style Conventions&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Spine.wiki has been developed with the following values, keep them in mind when contributing:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;em&amp;gt;Precise&amp;lt;/em&amp;gt; - Short, concise descriptions of various parts of Spine Models.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;em&amp;gt;Simple&amp;lt;/em&amp;gt; - Avoid jargon where plain language will do. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;em&amp;gt;Shallow&amp;lt;/em&amp;gt; - Create a map, not an archive. Rather than duplicating content from other sources, add the relevant snippet and link to the source.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;welcome&amp;quot;&amp;gt;Welcome!&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Spine.wiki is a volunteer effort. We encourage you to pitch in and &amp;lt;a href=&amp;quot;https://spinemodel.slack.com/x-172600838673-172600869697/signup&amp;quot;&amp;gt;join the team&amp;lt;/a&amp;gt;!&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Thanks!   &amp;lt;/p&amp;gt;                http://spine.wiki/explanation/Contribution                http://spine.wiki/explanation/Contribution                2017-04-23T00:00:00+02:00                                eXtreme Programming (XP)                &amp;lt;h1 id=&amp;quot;origin&amp;quot;&amp;gt;Origin&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;The term XP predates the term Agile by several years. XP stands for Extreme Programming, and is a suite of Practices, Principles, and Values invented by &amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/Kent_Beck&amp;quot;&amp;gt;Kent Beck&amp;lt;/a&amp;gt; in the late 90s.&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;learning-it&amp;quot;&amp;gt;Learning It&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Our recommended way of learning XP is through&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0321278658&amp;quot;&amp;gt;[Book] Extreme Programming Explained: Embrace Change, 2nd Edition&amp;lt;/a&amp;gt; - Kent Beck&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming/&amp;quot;&amp;gt;What is Extreme Programming?&amp;lt;/a&amp;gt; - Ron Jefferies&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/&amp;quot;&amp;gt;Extreme Programming:A gentle introduction&amp;lt;/a&amp;gt; - Don Wells&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;xp-spine&amp;quot;&amp;gt;XP Spine&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;From the perspective of prospective users of eXtreme Programming&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;need-where-might-it-be-used&amp;quot;&amp;gt;Need (Where might it be used?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Extreme Programming is a discipline of software development based on values of simplicity, communication, feedback, courage, and respect. It works by bringing the whole team together in the presence of simple practices, with enough feedback to enable the team to see where they are and to tune the practices to their unique situation.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming/&amp;quot;&amp;gt;Source: What is Extreme Programming?&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;values-what-does-it-optimise-for&amp;quot;&amp;gt;Values (What does it optimise for?)&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Simplicity&amp;quot;&amp;gt;Simplicity&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Communication&amp;quot;&amp;gt;Communication&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Feedback&amp;quot;&amp;gt;Feedback&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Respect&amp;quot;&amp;gt;Respect&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Courage&amp;quot;&amp;gt;Courage&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;principles-what-is-it-based-on&amp;quot;&amp;gt;Principles (What is it based on?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;See &amp;lt;a href=&amp;quot;/principle/PrinciplesOfXP&amp;quot;&amp;gt;XP Principles&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices-what-does-it-suggest-you-do&amp;quot;&amp;gt;Practices (What does it suggest you do?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;XPs philosophy on &amp;lt;a href=&amp;quot;/practices.html&amp;quot;&amp;gt;Practices&amp;lt;/a&amp;gt; is very non-prescriptive, and advises an explorative approach, based on its &amp;lt;a href=&amp;quot;/principle/PrinciplesOfXP&amp;quot;&amp;gt;Principles&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;/value/ValuesOfXP&amp;quot;&amp;gt;Values&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For a broad list see &amp;lt;a href=&amp;quot;/practice/PracticesOfXP&amp;quot;&amp;gt;XP Practices&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;tools-what-does-it-suggest-you-use&amp;quot;&amp;gt;Tools (What does it suggest you use?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;XP does not explicitly recommend any &amp;lt;a href=&amp;quot;/tools.html&amp;quot;&amp;gt;Tools&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/archetype/XP                http://spine.wiki/archetype/XP                2017-04-22T00:00:00+02:00                                To Do                &amp;lt;p&amp;gt;Many of the pages and sections on this site have yet to be fleshed out. We felt that since the page structure of the site is as informative as the content, that it was valuable to publish incomplete pages.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;If you would like to contribute to any of the pages or add new ones please contact &amp;lt;a href=&amp;quot;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;amp;#116;&amp;amp;#111;:&amp;amp;#115;&amp;amp;#112;&amp;amp;#105;&amp;amp;#110;&amp;amp;#101;&amp;amp;#064;&amp;amp;#100;&amp;amp;#114;&amp;amp;#105;&amp;amp;#118;&amp;amp;#101;&amp;amp;#110;&amp;amp;#046;&amp;amp;#101;&amp;amp;#109;&amp;amp;#097;&amp;amp;#105;&amp;amp;#108;&amp;quot;&amp;gt;Us&amp;lt;/a&amp;gt;, or use &amp;lt;a href=&amp;quot;https://github.com/SpineWiki/spinewiki.github.io&amp;quot;&amp;gt;GitHub&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/explanation/TODO                http://spine.wiki/explanation/TODO                2017-04-22T00:00:00+02:00                                Scrum                &amp;lt;h1 id=&amp;quot;origin&amp;quot;&amp;gt;Origin&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Jeff Sutherland and Ken Schwaber conceived the Scrum process in the early 90s. They codified Scrum in 1995 in order to present it at the Oopsla conference in Austin, Texas (US) and published the paper SCRUM Software Development Process.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Ken and Jeff inherited the name Scrum from the 1986 groundbreaking paper The New New Product Development Game by Takeuchi and Nonaka, two acknowledged management thinkers. With the term Scrum Nonaka and Takeuchi referred to the game of rugby to stress the importance of teams and some analogies between a team sport like rugby and being successful in the game of new product development. The research described in their paper showed that outstanding performance in the development of new, complex products is achieved when teams, as small and self-organizing units of people, are fed with objectives, not with tasks. The best teams are those that are given direction within which they have room to devise their own tactics on how to best head towards their joint objective. Teams require autonomy to achieve excellence.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/history.html&amp;quot;&amp;gt;Source: The History of Scrum&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;learning-it&amp;quot;&amp;gt;Learning It&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Our recommended way of learning scrum is through&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://scrumprimer.org/&amp;quot;&amp;gt;Scrum Primer&amp;lt;/a&amp;gt; - Deemer, Benefield, Larman, Vodde&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/&amp;quot;&amp;gt;Scrum Guide&amp;lt;/a&amp;gt; - Sutherland, Schwaber&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;scrum-spine&amp;quot;&amp;gt;Scrum Spine&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;From the perspective of prospective users of Scrum&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;need-where-might-it-be-used&amp;quot;&amp;gt;Need (Where might it be used?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Scrum describes itself as:&amp;lt;/p&amp;gt;&amp;lt;blockquote&amp;gt;  &amp;lt;p&amp;gt;A framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value.&amp;lt;/p&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/docs/scrumguide/v1/scrum-guide-us.pdf&amp;quot;&amp;gt;Source: The Official Scrum Guide&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;values-what-does-it-optimise-for&amp;quot;&amp;gt;Values (What does it optimise for?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Though not in mentioned in the Official Scrum Guide, there are official sources that mention five values:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Focus&amp;quot;&amp;gt;Focus&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Courage&amp;quot;&amp;gt;Courage&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Openness&amp;quot;&amp;gt;Openness&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Commitment&amp;quot;&amp;gt;Commitment&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Value/Respect&amp;quot;&amp;gt;Respect&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;principles-what-is-it-based-on&amp;quot;&amp;gt;Principles (What is it based on?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices-what-does-it-suggest-you-do&amp;quot;&amp;gt;Practices (What does it suggest you do?)&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Practice/ScrumMaster&amp;quot;&amp;gt;Scrum Master&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Practice/ScrumProductOwner&amp;quot;&amp;gt;Product Owner&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Practice/TeamRetrospective&amp;quot;&amp;gt;Sprint Retrospective&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;tools-what-does-it-suggest-you-use&amp;quot;&amp;gt;Tools (What does it suggest you use?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Scrum does not explicitly recommend any &amp;lt;a href=&amp;quot;/tools.html&amp;quot;&amp;gt;Tools&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/archetype/Scrum                http://spine.wiki/archetype/Scrum                2017-04-22T00:00:00+02:00                                Scaled Agile Framework (SAFe)                &amp;lt;h2 id=&amp;quot;origin&amp;quot;&amp;gt;Origin&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Dean Leffingwell describes the origin of SAFe as follows&amp;lt;/p&amp;gt;&amp;lt;blockquote&amp;gt;  &amp;lt;p&amp;gt;Over the last few years, Ive worked extensively with a number of other professionals (including Drew Jemilo, Colin ONeill, Alex Yakyma, Mauricio Zamora) in the implementation of a number of large enterprise lean|agile transformations. This collaboration has resulted in many back and forth discussions around implementation of the Scaled Agile Framework. To date, this framework has been elaborated primarily in my books Agile Software Requirements, Scaling Software Agility, and blog).&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;Recently, we decided to formalize our collaboration with the intent of making the framework public-facing and more readily available to a larger audience, and we have also committed to developing certain extensions and enhancements to the framework that have presented themselves as the marketplace, agile enterprise maturity, and our thinking and experiences have evolved.&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;To that end, we will offer the Scaled Agile Framework (SAF) as a proven, publicly available, framework for applying Lean|Agile practices at enterprise scale, presented in a structured, interactive, web format.&amp;lt;/p&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scalingsoftwareagilityblog.com/introducing-the-scaled-agile-framework/&amp;quot;&amp;gt;Source: Dean Leffingwell, Introducing the Scaled Agile Framework&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;learning-it&amp;quot;&amp;gt;Learning It&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Our recommended way of learning about SAFe is through&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://www.scaledagile.com/reference-guide/&amp;quot;&amp;gt;SAFe Reference Guide&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;SAFe has extensive &amp;lt;a href=&amp;quot;http://www.scaledagile.com/which-course/&amp;quot;&amp;gt;training and certification schemes&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;safe-spine&amp;quot;&amp;gt;SAFe Spine&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;From the perspective of prospective users of SAFe&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;need-where-might-it-be-used&amp;quot;&amp;gt;Need (Where might it be used?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;values-what-does-it-optimise-for&amp;quot;&amp;gt;Values (What does it optimise for?)&amp;lt;/h2&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Alignment&amp;quot;&amp;gt;Alignment&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/CodeQuality&amp;quot;&amp;gt;Code Quality&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Transparency&amp;quot;&amp;gt;Transparency&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/ProgramExecution&amp;quot;&amp;gt;Program Execution&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;h2 id=&amp;quot;principles-what-is-it-based-on&amp;quot;&amp;gt;Principles (What is it based on?)&amp;lt;/h2&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/TakeAnEconomicView&amp;quot;&amp;gt;Take an Economic View&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/ApplySystemsThinking&amp;quot;&amp;gt;Apply Systems Thinking&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/AssumeVariabilityPreserveOptions&amp;quot;&amp;gt;Assume Variability; Preserve Options&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/BuildIncrementallyWithFastIntegratedLearningCycles&amp;quot;&amp;gt;Build Incrementally With Fast Integrated Learning Cycles&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/BaseMilestonesOnObjectiveEvaluationOfWorkingSystems&amp;quot;&amp;gt;Base Milestones On Objective Evaluation Of Working Systems&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/VisualizeAndLimitWIPReduceBatchSizesAndManageQueueLengths&amp;quot;&amp;gt;Visualize and limit WIP, reduce batch sizes, and manage queue lengths&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/ApplyCadenceSynchronizeWithCrossDomainPlanning&amp;quot;&amp;gt;Apply cadence, synchronize with cross-domain planning&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/UnlockTheIntrinsicMotivationOfKnowledgeWorkers&amp;quot;&amp;gt;Unlock the intrinsic motivation of knowledge workers&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/DecentralizeDecisionMaking&amp;quot;&amp;gt;Decentralize decision-making&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;h2 id=&amp;quot;practices-what-does-it-suggest-you-do&amp;quot;&amp;gt;Practices (What does it suggest you do?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;tools-what-does-it-suggest-you-use&amp;quot;&amp;gt;Tools (What does it suggest you use?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/archetype/SAFe                http://spine.wiki/archetype/SAFe                2017-04-22T00:00:00+02:00                                Principles of LeSS                &amp;lt;h1 id=&amp;quot;principles&amp;quot;&amp;gt;10 Principles&amp;lt;/h1&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/large_scale_scrum_is_scrum.html&amp;quot;&amp;gt;Large-Scale Scrum is Scrum&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/transparency.html&amp;quot;&amp;gt;Transparency&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/more-with-less.html&amp;quot;&amp;gt;More with LeSS&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/whole-product-focus.html&amp;quot;&amp;gt;Whole Product Focus&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/customer-centric.html&amp;quot;&amp;gt;Customer Centric&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/continuous-improvement-towards-perfection.html&amp;quot;&amp;gt;Continuous Improvement Towards Perfection&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/lean-thinking.html&amp;quot;&amp;gt;Lean Thinking&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/systems-thinking.html&amp;quot;&amp;gt;Systems Thinking&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/empirical-process-control.html&amp;quot;&amp;gt;Empirical Process Control&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/queueing_theory.html&amp;quot;&amp;gt;Queueing Theory&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;h1 id=&amp;quot;other-principles&amp;quot;&amp;gt;Other Principles&amp;lt;/h1&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://www.agilemanifesto.org/&amp;quot;&amp;gt;Agile Manifesto&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Avoiding False Dichotomies (explored in &amp;lt;a href=&amp;quot;http://www.amazon.com/Scaling-Lean-Agile-Development-Organizational/dp/0321480961&amp;quot;&amp;gt;Scaling Agile and Lean Development&amp;lt;/a&amp;gt;)&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Be Agile Rather than Do Agile (explored in &amp;lt;a href=&amp;quot;http://www.amazon.com/Scaling-Lean-Agile-Development-Organizational/dp/0321480961&amp;quot;&amp;gt;Scaling Agile and Lean Development&amp;lt;/a&amp;gt;)&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Total Quality Management/Control (an early and excellent book on this is &amp;lt;a href=&amp;quot;http://www.amazon.com/What-Total-Quality-Control-Japanese/dp/0139524339&amp;quot;&amp;gt;What is Total Quality Control: The Japanese Way&amp;lt;/a&amp;gt;)&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://deming.org/management-system/fourteenpoints&amp;quot;&amp;gt;Demings 14 points&amp;lt;/a&amp;gt; (from &amp;lt;a href=&amp;quot;http://www.amazon.com/Out-Crisis-W-Edwards-Deming/dp/0262541157&amp;quot;&amp;gt;Out of the Crisis&amp;lt;/a&amp;gt;)&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/LeSS/&amp;quot;&amp;gt;LeSS archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://less.works/less/principles/index.html&amp;quot;&amp;gt;Less.works&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/PrinciplesOfLeSS                http://spine.wiki/principle/PrinciplesOfLeSS                2017-04-22T00:00:00+02:00                                Large-Scale Scrum (LeSS)                &amp;lt;h1 id=&amp;quot;origin&amp;quot;&amp;gt;Origin&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;LeSS emerged from the work of &amp;lt;a href=&amp;quot;http://www.craiglarman.com&amp;quot;&amp;gt;Craig Larman&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;https://twitter.com/basvodde&amp;quot;&amp;gt;Bas Vodde&amp;lt;/a&amp;gt;:&amp;lt;/p&amp;gt;&amp;lt;blockquote&amp;gt;  &amp;lt;p&amp;gt;Since 2005, weve worked with clients to apply the LeSS (Large-Scale Scrum) framework for scaling Scrum, lean and agile development to big product groups. We share that experience and knowledge through LeSS so that you too can succeed when scaling.&amp;lt;/p&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/&amp;quot;&amp;gt;Source: LeSS.works&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;learning-it&amp;quot;&amp;gt;Learning It&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Our recommended way of learning about LeSS is through&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://www.amazon.com/Large-Scale-Scrum-More-Addison-Wesley-Signature/dp/0321985710&amp;quot;&amp;gt;[Book] Large-Scale Scrum: More with LeSS&amp;lt;/a&amp;gt; - Larman, Vodde&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://less.works&amp;quot;&amp;gt;Less.works&amp;lt;/a&amp;gt; website&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;* the best way to get properly informed about any Archetype is to find people who are actively using it and to ask them about their experiences.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;less-spine&amp;quot;&amp;gt;LeSS Spine&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;From the perspective of prospective users of Large-Scale Scrum&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;need-where-might-it-be-used&amp;quot;&amp;gt;Need (Where might it be used?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;LeSS is a set of rules combined with guides for applying &amp;lt;a href=&amp;quot;/archetype/Scrum/&amp;quot;&amp;gt;Scrum&amp;lt;/a&amp;gt; in a multi-team context. It is not a framework that applies Scrum at team level and then adds additional scaling processes, instead it is Scrum scaled on all the levels.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Rather than having Scrum as a building block for a scaled framework, LeSS looks at Scrum and for each element ask Why is it there? followed by If we have more than one team, how can we achieve the same purpose on a larger scale?&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/principles/large_scale_scrum_is_scrum.html&amp;quot;&amp;gt;Source: Large-Scale Scrum is Scrum&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;values-what-does-it-optimise-for&amp;quot;&amp;gt;Values (What does it optimise for?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Since LeSS is Scrum scaled, it builds on the &amp;lt;a href=&amp;quot;/value/ValuesOfScrum/&amp;quot;&amp;gt;Scrum Values&amp;lt;/a&amp;gt;. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Other than that, the focus for LeSS was on keeping it simple, avoiding adding additional roles, artifacts of processes that should be empirically managed by the product group.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The other significant optimisation was for &amp;lt;em&amp;gt;scaling up&amp;lt;/em&amp;gt; instead of &amp;lt;em&amp;gt;tailoring down&amp;lt;/em&amp;gt;. Rather than defining a universal, overarching framework and then contextually tailoring it down, LeSS is kept to a minimum and the concept of Less Huge is introduced for very large product groups ( more than 8 teams).&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://less.works/less/framework/why-less.html&amp;quot;&amp;gt;Source: Why LeSS?&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;principles-what-is-it-based-on&amp;quot;&amp;gt;Principles (What is it based on?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;See &amp;lt;a href=&amp;quot;/principle/PrinciplesOfLeSS&amp;quot;&amp;gt;LeSS Principles&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices-what-does-it-suggest-you-do&amp;quot;&amp;gt;Practices (What does it suggest you do?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;tools-what-does-it-suggest-you-use&amp;quot;&amp;gt;Tools (What does it suggest you use?)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;LeSS does not explicitly recommend any &amp;lt;a href=&amp;quot;/tools.html&amp;quot;&amp;gt;Tools&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/archetype/LeSS                http://spine.wiki/archetype/LeSS                2017-04-22T00:00:00+02:00                                Generic List of Values                &amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Abundance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Acceptance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Accessibility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Accomplishment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Accountability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Accuracy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Achievement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Acknowledgement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Activeness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Activism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Adaptability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Adoration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Adroitness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Advancement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Adventure&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Affection&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Affluence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Aggressiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Agility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Alertness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Altruism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Amazement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ambition&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Amusement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Anticipation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Appreciation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Approachability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Approval&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Art&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Articulacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Artistry&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Assertiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Assurance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Attainment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Attention&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Attentiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Attractiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Audacity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Availability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Awareness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Awe&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Balance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Beauty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Being present&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Belonging&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Benevolence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Bliss&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Boldness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Bravery&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Brilliance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Buoyancy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Calmness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Camaraderie&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Candor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Capability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Caring&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Caution&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Certainty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Challenge&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Change&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Charity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Charm&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Chastity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cheerfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Clarity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cleanliness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cleverness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Closeness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Comfort&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Commitment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Communication&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Community&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Compassion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Competence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Competition&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Completion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Composure&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Concentration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Conciseness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Confidence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Conformity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Congruency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Connection&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Consciousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Conservation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Consistency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Contentment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Continuity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Contribution&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Control&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Conviction&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Coolness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cooperation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cordiality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Correctness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Courage&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Courtesy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Craftiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Creativity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Credibility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Cunning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Curiosity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Daring&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Decisiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Deference&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Delight&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Dependability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Depth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Desire&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Detail&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Determination&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Devotion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Devoutness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Dignity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Diligence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Direction&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Directness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Discipline&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Discovery&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Discretion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Diversity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Dominance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Dreaming&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Drive&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Duty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Eagerness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ease&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Economy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ecstasy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Education&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Effectiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Efficiency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Elation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Elegance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Empathy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Encouragement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Endurance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Energy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Enjoyment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Enlightenment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Entertainment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Enthusiasm&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Environment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Equanimity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ethics&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Excellence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Excitement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Exhilaration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Expediency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Experience&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Expertise&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Exploration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Expressiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Extravagance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Extroversion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Exuberance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fairness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Faith&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fame&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Family&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fascination&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fearlessness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ferocity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fidelity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fierceness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Firmness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fitness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Flexibility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Flow&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fluency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Focus&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fortitude&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Frankness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Freedom&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Friendliness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Friendship&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Frugality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Fun&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Gallantry  Generosity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Gentility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Giving&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Grace&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Gratitude&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Gregariousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Growth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Guidance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Happiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Harmony&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Health&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Heart&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Helpfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Heroism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Holism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Honesty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Honor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Hopefulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Hospitality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Humanity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Humility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Humor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Hygiene&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Imagination&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Impact&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Impartiality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Independence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Individuality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Industry&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Influence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ingenuity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Inquisitiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Insightfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Inspiration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Integrity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intellect&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intelligence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intimacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intrepidness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intrigue&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Introspection&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Introversion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intuition&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Intuitiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Inventiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Involvement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Joy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Judiciousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Justice&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Keenness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Kindness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Knowledge&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Laid back-ness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Leadership&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Learning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Legacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Liberation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Liberty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Lightness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Liveliness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Logic&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Longevity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Love&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Loyalty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Majesty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Manners&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Marriage&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Mastery&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Maturity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Meaning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Meekness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Mellowness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Mindfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Modesty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Motivation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Mystery&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Nature&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Neatness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Nerve&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Non-conformity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Obedience&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Open mindedness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Openness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Optimism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Order&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Organization&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Originality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Outdoors&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Outlandishness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Outrageousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Partnership&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Passion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Patience&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Patriotism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Peace&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Perceptiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Perkiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Perseverance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Persistence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Persuasiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Philanthropy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Piety&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Playfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pleasantness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pleasure&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Poise&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Polish&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Popularity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Power&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Practicality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pragmatism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Precision&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Preparedness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Presence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pride&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Privacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Professionalism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Prosperity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Prudence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Punctuality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Purity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Quiet&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Quirkiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Rationality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Realism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Reason&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Recognition&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Recreation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Refinement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Reflection&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Relaxation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Reliability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Relief&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Religiousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Reputation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Resilience&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Resolution&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Resoluteness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Resolve&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Resourcefulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Respect&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Responsibility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Restraint&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Reverence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Richness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Rigor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sacredness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sacrifice&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Satisfaction&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Security&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Self-control&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Self-growth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Selflessness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Self-reliance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Self-respect&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Self-sustainability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sensitivity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sensuality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Serenity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Service&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sexiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sexuality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sharing&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Shrewdness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Silence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Silliness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Simplicity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sincerity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Skillfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Solidarity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Solitude&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Solution-Focus&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sophistication&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Speed&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Spirituality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Spontaneity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Stability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Status&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Stealth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Stillness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Strategy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Strength&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Structure&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Success&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Support&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Sympathy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Synergy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Teaching&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Teamwork&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Tenacity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Thankfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Thoroughness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Thoughtfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Thrift&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Tidiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Timeliness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Traditionalism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Tranquility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Transcendence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Trust&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Trustworthiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Truth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Understanding&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Uniqueness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Unity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Usefulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Utility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Valor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Variety&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Victory&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Vigor&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Virtue&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Vision&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Vitality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Vivacity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Volunteerism&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Warmth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Wealth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Wellness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Willfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Willingness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Wisdom&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Wit&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Wonder&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Worthiness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Youthfulness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Zeal&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Zest&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;                http://spine.wiki/value/GenericValues                http://spine.wiki/value/GenericValues                2016-01-25T00:00:00+02:00                                Whole Team                &amp;lt;p&amp;gt;All the contributors to an XP project sit together, members of one team. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;This team must include a business representative  the Customer  who provides the requirements, sets the priorities, and steers the project. Its best if the Customer or one of her aides is a real end user who knows the domain and what is needed. The team will of course have programmers. The team may include testers, who help the Customer define the customer acceptance tests. Analysts may serve as helpers to the Customer, helping to define the requirements. There is commonly a coach, who helps the team keep on track, and facilitates the process. There may be a manager, providing resources, handling external communication, coordinating activities. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;None of these roles is necessarily the exclusive property of just one individual: Everyone on an XP team contributes in any way that they can. The best teams have no specialists, only general contributors with special skills.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/WholeTeam                http://spine.wiki/practice/WholeTeam                2015-11-22T00:00:00+02:00                                Test Driven Development                &amp;lt;p&amp;gt;Extreme Programming is obsessed with feedback, and in software development, good feedback requires good testing. Top XP teams practice test-driven development, working in very short cycles of adding a test, then making it work. Almost effortlessly, teams produce code with nearly 100 percent test coverage, which is a great step forward in most shops. (If your programmers are already doing even more sophisticated testing, more power to you. Keep it up, it can only help!)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;It isnt enough to write tests: you have to run them. Here, too, Extreme Programming is extreme. These programmer tests, or unit tests are all collected together, and every time any programmer releases any code to the repository (and pairs typically release twice a day or more), every single one of the programmer tests must run correctly. One hundred percent, all the time! This means that programmers get immediate feedback on how theyre doing. Additionally, these tests provide invaluable support as the software design is improved.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/TDD                http://spine.wiki/practice/TDD                2015-11-22T00:00:00+02:00                                Sustainable Pace                &amp;lt;p&amp;gt;Extreme Programming teams are in it for the long term. They work hard, and at a pace that can be sustained indefinitely. This means that they work overtime when it is effective, and that they normally work in such a way as to maximize productivity week in and week out. Its pretty well understood these days that death march projects are neither productive nor produce quality software. XP teams are in it to win, not to die.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/SustainablePace                http://spine.wiki/practice/SustainablePace                2015-11-22T00:00:00+02:00                                Small Releases                &amp;lt;p&amp;gt;XP teams practice small releases in two important ways:&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;First, the team releases running, tested software, delivering business value chosen by the Customer, every iteration. The Customer can use this software for any purpose, whether evaluation or even release to end users (highly recommended). The most important aspect is that the software is visible, and given to the customer, at the end of every iteration. This keeps everything open and tangible.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Second, XP teams release to their end users frequently as well. XP Web projects release as often as daily, in house projects monthly or more frequently. Even shrink-wrapped products are shipped as often as quarterly.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;It may seem impossible to create good versions this often, but XP teams all over are doing it all the time. See &amp;lt;a href=&amp;quot;/practice/ContinuousIntegration&amp;quot;&amp;gt;Continuous Integration&amp;lt;/a&amp;gt; for more on this, and note that these frequent releases are kept reliable by XPs obsession with testing, as described here in &amp;lt;a href=&amp;quot;/practice/CustomerTests&amp;quot;&amp;gt;Customer Tests&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;Test-Driven Development&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/SmallReleases                http://spine.wiki/practice/SmallReleases                2015-11-22T00:00:00+02:00                                Simple Design                &amp;lt;p&amp;gt;XP teams build software to a simple but always adequate design. They start simple, and through &amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;programmer testing&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;/practice/Refactoring&amp;quot;&amp;gt;design improvement&amp;lt;/a&amp;gt;, they keep it that way. An XP team keeps the design exactly suited for the current functionality of the system. There is no wasted motion, and the software is always ready for whats next.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Design in XP is not a one-time thing, or an up-front thing, it is an all-the-time thing. There are design steps in release planning and iteration planning, plus teams engage in quick design sessions and design revisions through refactoring, through the course of the entire project. In an incremental, iterative process like Extreme Programming, good design is essential. Thats why there is so much focus on design throughout the course of the entire development.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/SimpleDesign                http://spine.wiki/practice/SimpleDesign                2015-11-22T00:00:00+02:00                                Design Improvement (Refactoring)                &amp;lt;p&amp;gt;Extreme Programming focuses on delivering business value in every iteration. To accomplish this over the course of the whole project, the software must be well-designed. The alternative would be to slow down and ultimately get stuck. So XP uses a process of continuous design improvement called &amp;lt;em&amp;gt;Refactoring&amp;lt;/em&amp;gt;, from the title of Martin Fowlers book, &amp;lt;a href=&amp;quot;http://www.amazon.com/exec/obidos/ASIN/0201485672/armaties&amp;quot;&amp;gt;Refactoring: Improving the Design of Existing Code&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The refactoring process focuses on removal of duplication (a sure sign of poor design), and on increasing the cohesion of the code, while lowering the coupling. High cohesion and low coupling have been recognized as the hallmarks of well-designed code for at least thirty years. The result is that XP teams start with a good, simple design, and always have a good, simple design for the software. This lets them sustain their development speed, and in fact generally increase speed as the project goes forward.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Refactoring is, of course, strongly supported by comprehensive testing to be sure that as the design evolves, nothing is broken. Thus the &amp;lt;a href=&amp;quot;/practice/CustomerTests&amp;quot;&amp;gt;customer tests&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;programmer tests&amp;lt;/a&amp;gt; are a critical enabling factor. The XP practices support each other: they are stronger together than separately.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/Refactoring                http://spine.wiki/practice/Refactoring                2015-11-22T00:00:00+02:00                                Practices of Extreme Programming                &amp;lt;p&amp;gt;XPs philosophy on &amp;lt;a href=&amp;quot;/practices.html&amp;quot;&amp;gt;Practices&amp;lt;/a&amp;gt; is very non-prescriptive, and advises an explorative approach, based on the &amp;lt;a href=&amp;quot;/principle/PrinciplesOfXP&amp;quot;&amp;gt;XP Principles&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;/value/ValuesOfXP&amp;quot;&amp;gt;XP Values&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices-recommended-by-kent-beck&amp;quot;&amp;gt;Practices recommended by Kent Beck&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Practices as presented in eXtreme Programming Explained, 2nd Edition by &amp;lt;a href=&amp;quot;https://en.wikipedia.org/wiki/Kent_Beck&amp;quot;&amp;gt;Kent Beck&amp;lt;/a&amp;gt;, the second of the &amp;lt;a href=&amp;quot;http://c2.com/cgi/wiki?TheThreeExtremos&amp;quot;&amp;gt;Three Extremos&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h5 id=&amp;quot;primary-practices&amp;quot;&amp;gt;Primary Practices&amp;lt;/h5&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Sit Together&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/WholeTeam&amp;quot;&amp;gt;Whole Team&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Informative Workspace&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Energized Work&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pair Programming&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Stories (UserStories)&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Weekly Cycle&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Quarterly Cycle&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Slack&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ten Minute Build&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/ContinuousIntegration&amp;quot;&amp;gt;Continuous Integration&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;Test First Programming&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Incremental Design&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h5 id=&amp;quot;corollary-practices&amp;quot;&amp;gt;Corollary Practices&amp;lt;/h5&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Real Customer Involvement&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Incremental Deployment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Team Continuity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Shrinking Teams&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Root Cause Analysis&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Shared Code&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Code And Tests&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Single Code Base&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Daily Deployment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Negotiated Scope Contract&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Pay Per Use&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://c2.com/cgi/wiki?ExtremeProgrammingCorePractices&amp;quot;&amp;gt;c2 wiki&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices-recommended-by-ron-jeffries&amp;quot;&amp;gt;Practices recommended by Ron Jeffries&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://en.wikipedia.org/wiki/Ron_Jeffries&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt; is the third of the &amp;lt;a href=&amp;quot;http://c2.com/cgi/wiki?TheThreeExtremos&amp;quot;&amp;gt;Three Extremos&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/WholeTeam&amp;quot;&amp;gt;Whole Team&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/PlanningGame&amp;quot;&amp;gt;Planning Game&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/SmallReleases&amp;quot;&amp;gt;Small Releases&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/CustomerTests&amp;quot;&amp;gt;Customer Tests&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/SimpleDesign&amp;quot;&amp;gt;Simple Design&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/PairProgramming&amp;quot;&amp;gt;Pair Programming&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;Test-Driven Development&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/Refactoring&amp;quot;&amp;gt;Design Improvement&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/ContinuousIntegration&amp;quot;&amp;gt;Continuous Integration&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/CollectiveCodeOwnership&amp;quot;&amp;gt;Collective Code Ownership&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/CodingStandard&amp;quot;&amp;gt;Coding Standard&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/Metaphor&amp;quot;&amp;gt;Metaphor&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/practice/SustainablePace&amp;quot;&amp;gt;Sustainable Pace&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/em&amp;gt; &amp;lt;/p&amp;gt;                http://spine.wiki/practice/PracticesOfXP                http://spine.wiki/practice/PracticesOfXP                2015-11-22T00:00:00+02:00                                Planning Game                &amp;lt;p&amp;gt;XP planning addresses two key questions in software development: predicting what will be accomplished by the due date, and determining what to do next. The emphasis is on steering the project  which is quite straightforward  rather than on exact prediction of what will be needed and how long it will take  which is quite difficult. There are two key planning steps in XP, addressing these two questions:&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Release Planning&amp;lt;/em&amp;gt; is a practice where the Customer presents the desired features to the programmers, and the programmers estimate their difficulty. With the cost estimates in hand, and with knowledge of the importance of the features, the Customer lays out a plan for the project. Initial release plans are necessarily imprecise: neither the priorities nor the estimates are truly solid, and until the team begins to work, we wont know just how fast they will go. Even the first release plan is accurate enough for decision making, however, and XP teams revise the release plan regularly.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Iteration Planning&amp;lt;/em&amp;gt; is the practice whereby the team is given direction every couple of weeks. XP teams build software in two-week iterations, delivering running useful software at the end of each iteration. During Iteration Planning, the Customer presents the features desired for the next two weeks. The programmers break them down into tasks, and estimate their cost (at a finer level of detail than in Release Planning). Based on the amount of work accomplished in the previous iteration, the team signs up for what will be undertaken in the current iteration.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;These planning steps are very simple, yet they provide very good information and excellent steering control in the hands of the Customer. Every couple of weeks, the amount of progress is entirely visible. There is no ninety percent done in XP: a feature story was completed, or it was not. This focus on visibility results in a nice little paradox: on the one hand, with so much visibility, the Customer is in a position to cancel the project if progress is not sufficient. On the other hand, progress is so visible, and the ability to decide what will be done next is so complete, that XP projects tend to deliver more of what is needed, with less pressure and stress.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/PlanningGame                http://spine.wiki/practice/PlanningGame                2015-11-22T00:00:00+02:00                                Pair Programming                &amp;lt;p&amp;gt;All production software in XP is built by two programmers, sitting side by side, at the same machine. This practice ensures that all production code is reviewed by at least one other programmer, and results in better design, better testing, and better code.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;It may seem inefficient to have two programmers doing one programmers job, but the reverse is true. Research into pair programming shows that pairing produces better code in about the same time as programmers working singly. Thats right: two heads really are better than one!&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Some programmers object to pair programming without ever trying it. It does take some practice to do well, and you need to do it well for a few weeks to see the results. Ninety percent of programmers who learn pair programming prefer it, so we highly recommend it to all teams.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Pairing, in addition to providing better code and tests, also serves to communicate knowledge throughout the team. As pairs switch, everyone gets the benefits of everyones specialized knowledge. Programmers learn, their skills improve, they become more valuable to the team and to the company. Pairing, even on its own outside of XP, is a big win for everyone.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/PairProgramming                http://spine.wiki/practice/PairProgramming                2015-11-22T00:00:00+02:00                                Metaphor                &amp;lt;p&amp;gt;Extreme Programming teams develop a common vision of how the program works, which we call the metaphor. At its best, the metaphor is a simple evocative description of how the program works, such as this program works like a hive of bees, going out for pollen and bringing it back to the hive as a description for an agent-based information retrieval system.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Sometimes a sufficiently poetic metaphor does not arise. In any case, with or without vivid imagery, XP teams use a common system of names to be sure that everyone understands how the system works and where to look to find the functionality youre looking for, or to find the right place to put the functionality youre about to add.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/Metaphor                http://spine.wiki/practice/Metaphor                2015-11-22T00:00:00+02:00                                Customer Tests                &amp;lt;p&amp;gt;As part of presenting each desired feature, the XP Customer defines one or more automated acceptance tests to show that the feature is working. The team builds these tests and uses them to prove to themselves, and to the customer, that the feature is implemented correctly. Automation is important because in the press of time, manual tests are skipped. Thats like turning off your lights when the night gets darkest.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The best XP teams treat their customer tests the same way they do &amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;programmer tests&amp;lt;/a&amp;gt;: once the test runs, the team keeps it running correctly thereafter. This means that the system only improves, always notching forward, never backsliding.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/CustomerTests                http://spine.wiki/practice/CustomerTests                2015-11-22T00:00:00+02:00                                Continuous Integration                &amp;lt;p&amp;gt;Extreme Programming teams keep the system fully integrated at all times. We say that daily builds are for wimps: XP teams build multiple times per day. (One XP team of forty people builds at least eight or ten times per day!)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The benefit of this practice can be seen by thinking back on projects you may have heard about (or even been a part of) where the build process was weekly or less frequently, and usually led to integration hell, where everything broke and no one knew why.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Infrequent integration leads to serious problems on a software project. First of all, although integration is critical to shipping good working code, the team is not practiced at it, and often it is delegated to people who are not familiar with the whole system. Second, infrequently integrated code is often  I would say usually  buggy code. Problems creep in at integration time that are not detected by any of the testing that takes place on an unintegrated system. Third, weak integration process leads to long code freezes. Code freezes mean that you have long time periods when the programmers could be working on important shippable features, but that those features must be held back. This weakens your position in the market, or with your end users.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/ContinuousIntegration                http://spine.wiki/practice/ContinuousIntegration                2015-11-22T00:00:00+02:00                                Collective Code Ownership                &amp;lt;p&amp;gt;On an Extreme Programming project, any pair of programmers can improve any code at any time. This means that all code gets the benefit of many peoples attention, which increases code quality and reduces defects. There is another important benefit as well: when code is owned by individuals, required features are often put in the wrong place, as one programmer discovers that he needs a feature somewhere in code that he does not own. The owner is too busy to do it, so the programmer puts the feature in his own code, where it does not belong. This leads to ugly, hard-to-maintain code, full of duplication and with low (bad) cohesion.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Collective ownership could be a problem if people worked blindly on code they did not understand. XP avoids these problems through two key techniques: the &amp;lt;a href=&amp;quot;/practice/TDD&amp;quot;&amp;gt;programmer tests&amp;lt;/a&amp;gt; catch mistakes, and &amp;lt;a href=&amp;quot;/practice/PairProgramming&amp;quot;&amp;gt;pair programming&amp;lt;/a&amp;gt; means that the best way to work on unfamiliar code is to pair with the expert. In addition to ensuring good modifications when needed, this practice spreads knowledge throughout the team.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/CollectiveCodeOwnership                http://spine.wiki/practice/CollectiveCodeOwnership                2015-11-22T00:00:00+02:00                                Coding Standard                &amp;lt;p&amp;gt;XP teams follow a common coding standard, so that all the code in the system looks as if it was written by a single  very competent  individual. The specifics of the standard are not important: what is important is that all the code looks familiar, in support of collective ownership.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://ronjeffries.com/xprog/what-is-extreme-programming&amp;quot;&amp;gt;Ron Jeffries&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/CodingStandard                http://spine.wiki/practice/CodingStandard                2015-11-22T00:00:00+02:00                                Transparency                &amp;lt;p&amp;gt;This is the third &amp;lt;a href=&amp;quot;/values.html&amp;quot;&amp;gt;Value&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://scaledagileframework.com/safe-core-values/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;                http://spine.wiki/value/Transparency                http://spine.wiki/value/Transparency                2015-11-21T00:00:00+02:00                                Tools for Visualising Work In Progress                &amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Physical Board&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Digital Board&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Tool/CognitiveLoadTracker&amp;quot;&amp;gt;Team Cognitive Load Tracker&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;                http://spine.wiki/tool/ToolsForVisualisingWorkInProgress                http://spine.wiki/tool/ToolsForVisualisingWorkInProgress                2015-11-21T00:00:00+02:00                                Program Execution                &amp;lt;p&amp;gt;This is the fourth &amp;lt;a href=&amp;quot;/values.html&amp;quot;&amp;gt;Value&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://scaledagileframework.com/safe-core-values/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;                http://spine.wiki/value/ProgramExecution                http://spine.wiki/value/ProgramExecution                2015-11-21T00:00:00+02:00                                Next Retro Topics List                &amp;lt;h2 id=&amp;quot;what-is-it&amp;quot;&amp;gt;What is it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;A visible list of all the things the team may want to dig deeper into during their next &amp;lt;a href=&amp;quot;/practice/TeamRetrospective/&amp;quot;&amp;gt;Retrospective&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;why-use-it&amp;quot;&amp;gt;Why use it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;If a challenge or opportunity is uncovered around how the team gets the work done, individuals may feel they want to dig deeper into understanding it during the next Retro. There is a risk that you could forget what it was, or not spend enough time deliberating on it, so making it visible in the team space is a useful way of making sure it doesnt slip through.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;when-to-use-it&amp;quot;&amp;gt;When to use it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Any time a challenge or opportunity is uncovered and the team doesnt feel it is appropriate to address it right there and then.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;what-could-it-look-like&amp;quot;&amp;gt;What could it look like?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;It could be an area or piece of paper on a teams board. Somewhere highly visible. &amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;assumptions&amp;quot;&amp;gt;Assumptions&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The team does not use this list as a way of avoiding difficult conversations that should be had sooner.&amp;lt;/p&amp;gt;                http://spine.wiki/tool/NextRetroTopicsList                http://spine.wiki/tool/NextRetroTopicsList                2015-11-21T00:00:00+02:00                                Code Quality                &amp;lt;p&amp;gt;This is the second &amp;lt;a href=&amp;quot;/values.html&amp;quot;&amp;gt;Value&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://scaledagileframework.com/safe-core-values/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;                http://spine.wiki/value/CodeQuality                http://spine.wiki/value/CodeQuality                2015-11-21T00:00:00+02:00                                Alignment                &amp;lt;p&amp;gt;This is the first &amp;lt;a href=&amp;quot;/values.html&amp;quot;&amp;gt;Value&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://scaledagileframework.com/safe-core-values/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;                http://spine.wiki/value/Alignment                http://spine.wiki/value/Alignment                2015-11-21T00:00:00+02:00                                Values of Extreme Programming                &amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Simplicity&amp;quot;&amp;gt;Simplicity&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Communication&amp;quot;&amp;gt;Communication&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Feedback&amp;quot;&amp;gt;Feedback&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Respect&amp;quot;&amp;gt;Respect&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Courage&amp;quot;&amp;gt;Courage&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/value/ValuesOfXP                http://spine.wiki/value/ValuesOfXP                2015-11-17T00:00:00+02:00                                Values of Scrum                &amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Focus&amp;quot;&amp;gt;Focus&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Courage&amp;quot;&amp;gt;Courage&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Openness&amp;quot;&amp;gt;Openness&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Commitment&amp;quot;&amp;gt;Commitment&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Respect&amp;quot;&amp;gt;Respect&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/Scrum/&amp;quot;&amp;gt;Scrum archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/value/ValuesOfScrum                http://spine.wiki/value/ValuesOfScrum                2015-11-17T00:00:00+02:00                                Values of SAFe                &amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Alignment&amp;quot;&amp;gt;Alignment&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/CodeQuality&amp;quot;&amp;gt;Code Quality&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/Transparency&amp;quot;&amp;gt;Transparency&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/value/ProgramExecution&amp;quot;&amp;gt;Program Execution&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/value/ValuesOfSAFe                http://spine.wiki/value/ValuesOfSAFe                2015-11-17T00:00:00+02:00                                Tools for Retrospectives                &amp;lt;p&amp;gt;If you arent sure what a retrospective is, start &amp;lt;a href=&amp;quot;/practice/TeamRetrospective/&amp;quot;&amp;gt;here&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;www.hr.virginia.edu/uploads/documents/media/Writing_SMART_Goals.pdf&amp;quot;&amp;gt;SMART Goals&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;NextRetroTopicsList&amp;quot;&amp;gt;Next Retro Topics list&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://en.wikipedia.org/wiki/Improvisational_theatre&amp;quot;&amp;gt;Improv&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://plans-for-retrospectives.com/&amp;quot;&amp;gt;PlansForRetrospectives.com&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://TastyCupcakes.org&amp;quot;&amp;gt;TastyCupcakes.org&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://RetrospectiveWiki.org&amp;quot;&amp;gt;RetrospectiveWiki.org&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;                http://spine.wiki/tool/ToolsForRetrospectives                http://spine.wiki/tool/ToolsForRetrospectives                2015-11-17T00:00:00+02:00                                Principles of Extreme Programming                &amp;lt;h1 id=&amp;quot;fundamental-principles&amp;quot;&amp;gt;Fundamental Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Rapid Feedback&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Assume Simplicity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Incremental Change&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Embracing Change&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Quality Work&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;further-principles&amp;quot;&amp;gt;Further Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Teach Learning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Small Initial Investment&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Play to Win&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Concrete Experiments&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Open, honest Communication&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Work with peoples instincts - not against them&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Accepted Responsibility&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Local Adaptation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Travel Light&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Honest Measurement&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;XP archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://martinfowler.com/bliki/PrinciplesOfXP.html&amp;quot;&amp;gt;Martin Fowler&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/PrinciplesOfXP                http://spine.wiki/principle/PrinciplesOfXP                2015-11-17T00:00:00+02:00                                Principles of SAFe                &amp;lt;ol&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/TakeAnEconomicView&amp;quot;&amp;gt;Take an Economic View&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/ApplySystemsThinking&amp;quot;&amp;gt;Apply Systems Thinking&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/AssumeVariabilityPreserveOptions&amp;quot;&amp;gt;Assume Variability; Preserve Options&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/BuildIncrementallyWithFastIntegratedLearningCycles&amp;quot;&amp;gt;Build Incrementally With Fast Integrated Learning Cycles&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/BaseMilestonesOnObjectiveEvaluationOfWorkingSystems&amp;quot;&amp;gt;Base Milestones On Objective Evaluation Of Working Systems&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/VisualizeAndLimitWIPReduceBatchSizesAndManageQueueLengths&amp;quot;&amp;gt;Visualize and limit WIP, reduce batch sizes, and manage queue lengths&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/ApplyCadenceSynchronizeWithCrossDomainPlanning&amp;quot;&amp;gt;Apply cadence, synchronize with cross-domain planning&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/UnlockTheIntrinsicMotivationOfKnowledgeWorkers&amp;quot;&amp;gt;Unlock the intrinsic motivation of knowledge workers&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/DecentralizeDecisionMaking&amp;quot;&amp;gt;Decentralize decision-making&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/principle/PrinciplesOfSAFe                http://spine.wiki/principle/PrinciplesOfSAFe                2015-11-17T00:00:00+02:00                                Principles of Flow                &amp;lt;p&amp;gt;The &amp;lt;a href=&amp;quot;http://lpd2.com/&amp;quot;&amp;gt;Lean Product Development&amp;lt;/a&amp;gt; book enumerates 175 principles in 8 categories: Economic, Queueing, Variability, Batch Size, WIP Constraint, Flow Control Fast Feedback and Decentralization&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;economic-principles&amp;quot;&amp;gt;Economic Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;E1: The Principle of Quantified Overall Economics: Select actions based on quantified overall economic impact.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E2: The Principle of Interconnected Variables: We cant just change one thing.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E3: The Principle of Quantified Cost of Delay: If you only quantify one thing, quantify the cost of delay.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E4: The Principle of Economic Value-Added: The value added by an activity is the change in the economic value of the work product.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E5: The Inactivity Principle: Watch the work product, not the worker.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E6: The U-Curve Principle: Important trade-offs are likely to have U-curve optimizations.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E7: The Imperfection Principle: Even imperfect answers improve decision making&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E8: The Principle of Small Decisions: Influence the many small decisions&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E9: The Principle of Continuous Economic Tradeoffs: Economic choices must be made continuously.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E10: The First Perishability Principle: Many economic choices are more valuable when made quickly.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E11: The Subdivision Principle: Inside every bad choice lies a good choice.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E12: The Principle of Early Harvesting: Create systems to harvest the early cheap opportunities.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E13: The Principle of Decision Rules: Use decision rules to decentralize economic control.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E14: The First Market Principle: Ensure decision makers feel both cost and benefit.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E15: The Principle of Optimum Decision Timing: Every decision has its optimum economic timing.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E16: The Principle of Marginal Economics: Always compare marginal cost to marginal value.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E17: The Sunk Cost Principle: Do not consider money already spent.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E18: The Principle of Buying Information: The value of information is its expected economic value.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E19: The Insurance Principle: Dont pay more for  insurance than the expected loss.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E20: The Newsboy Principle: High probability of failure does not equal bad economics.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;E21: The Show Me the Money Principle: To influence financial decisions, speak the language on money.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;queueing-principles&amp;quot;&amp;gt;Queueing Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Q1: The Principle of Invisible Inventory: Product development inventory is physically and financially invisible.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q2: The Principle of Queueing Waste: Queues are the root cause of the majority of economic waste in product development.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q3: The Principle of Queueing Capacity Utilization: Capacity utilization increases queues exponentially.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q4: The Principle of High-Queue States: Most of the damage done by a queue is caused by high-queue states.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q5: The Principle of Queueing Variability: Variability increases queues linearly.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q6: The Principle of Variability Amplification: Operating at high levels of capacity utilization increases variability.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q7: The Principle of Queueing Structure: Serve pooled demand with reliable high-capacity servers.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q8: The Principle of Linked Queues: Adjacent queues see arrival or service time variability depending on loading.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q9: The Principle of Queue Size Optimization: Optimum queue size is an economic tradeoff.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q10: The Principle of Queueing Discipline: Queue cost is affected by the sequence in which we handle the jobs in the queue.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q11: The Cumulative Flow Principle: Use CFDs to monitor queues.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q12: Littles Formula: Wait time = Queue Size/Processing Rate.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q13: The First Queue Size Control Principle:  Dont control capacity utilization, control queue size.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q14: The Second Queue Size Control Principle: Dont control cycle time, control queue size.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q15: The Diffusion Principle: Over time, queues will randomly spin seriously out of control and will remain in this state for long periods.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Q16: The Intervention Principle: We cannot rely on randomness to correct a random queue.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;variability-principles&amp;quot;&amp;gt;Variability Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;V1: The Principle of Beneficial Variability: Variability can create economic value.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V2: The Principle of Asymmetric Payoffs: Payoff asymmetries enable variability to create economic value.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V3: The Principle of Optimum Variability: Variability should neither be minimized nor maximized.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V4: The Principle of Optimum Failure Rate: Fifty percent failure rate is usually optimum for generating information.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V5: The Principle of Variability Pooling: Overall variation decreases when uncorrelated random tasks are combined.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V6: The Principle of Short-Term Forecasting: Forecasting becomes exponentially easier at short time-horizons.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V7: The Principle of Small Experiments: Many small experiments produce less variation than one big one.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V8: The Repetition Principle: Repetition reduces variation.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V9: The Reuse Principle: Reuse reduces variability. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V10: The Principle of Negative Covariance: We can reduce variance by applying a counterbalancing effect. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V11: The Buffer Principle:Buffers trade money for variability reduction. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V12: The Principle of Variability Consequence: Reducing consequences is usually the best way to reduce the cost of variability. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V13: The Non-linearity Principle: Operate in the linear range of system performance. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V14: The Principle of Variability Substitution: Substitute cheap variability for expensive variability. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V15: The Principle of Iteration Speed: It is usually better to improve iteration speed than defect rate. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;V16: The Principle of Variability Displacement: Move variability to the process stage where its cost is lowest. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;batch-size-principles&amp;quot;&amp;gt;Batch Size Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;B1: Batch Size Queueing Principle: Reducing batch size reduces cycle time. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B2: The Batch Size Variability Principle: Reducing batch size reduces variability in flow. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B3: The Batch Size Feedback Principle: Reducing batch size accelerates feedback. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B4: The Batch Size Risk Principle: Reducing batch size reduces risk. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B5: The Batch Size Overhead Principle: Reducing batch size reduces overhead. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B6: The Batch Size Efficiency Principle: Large batches reduce efficiency. (&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B7: The Psychology Principle of Batch Size: Large batches inherently lower motivation and urgency. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B8: The Batch Size Slippage Principle: Large batches cause exponential cost and schedule growth. (&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B9: The Batch Size Death Spiral Principle: Large batches lead to even larger batches. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B10: The Least Common Denominator Principle of Batch Size: The entire batch is limited by its worst element. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B11: The Principle of Batch Size Economics: Economic batch size is a U-curve optimization. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B12: The Principle of Low Transaction Cost: Reducing transaction cost per batch lowers overall costs. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B13: The Principle of Batch Size Diseconomies: Batch size reduction saves much more than you think. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B14: The Batch Size Packing Principle: Small batches allow finer tuning of capacity utilization &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B15: The Fluidity Principle: Loose coupling between product subsystems enables small batches. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B16: The Principle of Transport Batches: The most important batch is the transport batch. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B17: The Proximity Principle: Proximity enables small batch sizes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B18: The Run Length Principle: Short run lengths reduce queues. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B19: The Infrastructure Principle: Good infrastructure enables small batches. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B20: The Principle of Batch Content: Sequence first that which adds value most cheaply. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B21: The Batch Size First Principle: Reduce batch size before you attack bottlenecks. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;B22: The Principle of Dynamic Batch Size: Adjust batch size dynamically to respond to changing economics. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;wip-constraint-principles&amp;quot;&amp;gt;WIP Constraint Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;W1: The Principle of WIP Constraints: Constrain WIP to control cycle time and flow. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W2: The Principle of Rate Matching: WIP constraints force rate-matching. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W3: The Principle of Global Constraints: Use global WIP constraints for predictable and permanent bottlenecks. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W4: The Principle of Local Constraints: If possible, constrain local WIP pools. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W5: The Batch Size Decoupling Principle: Use WIP ranges to decouple the batch sizes of adjacent processes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W6: The Principle of Demand Blocking: Block all demand when WIP reaches its upper limit. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W7: The Principle of WIP Purging: When WIP is high, purge low value projects. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W8: The Principle of Flexible Requirements: Control WIP by shedding requirements. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W9: The Principle of Resource Pulling: Quickly apply extra resources to an emerging queue. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W10: The Principle of Part-Time Resources: Use part-time resources for high variability tasks. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W11: The Big Gun Principle: Pull high-powered experts to emerging bottlenecks. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W12: The Principle of T-Shaped Resources: Develop people who are deep in one area and broad in many. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W13: The Principle of Skill Overlap: Cross train resources at adjacent processes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W14: The Mix Change Principle: Use upstream mix changes to regulate queue size. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W15: The Aging Principle: Watch the outliers. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W16: The Escalation Principle: Create a preplanned escalation process for outliers. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W17: The Principle of Progressive Throttling: Increase throttling as you approach the queue limit. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W18: The Principle of Differential Service: Differentiate quality of service by workstream. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W19: The Principle of Adaptive WIP Constraints: Adjust WIP constraints as capacity changes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W20: The Expansion Control Principle: Prevent uncontrolled expansion of work. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W21: The Principle of the Critical Queue: Constrain WIP in the secion of the system where the queue is most expensive. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W22: The Cumulative Reduction Principle: Small WIP reductions accumulate. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;W23: The Principle of Visual WIP: Make WIP continuously visible. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;flow-control-principles&amp;quot;&amp;gt;Flow Control Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;F1: The Principle of Congestion Collapse: When loading becomes too high, we will see a sudden and catastrophic drop in output. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F2: The Peak Throughput Principle: Control occupancy to sustain high throughput in systems prone to congestion. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F3: The Principle of Visible Congestion: Use forecasts of expected flow time to make congestion visible. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F4: The Principle of Congestion Pricing: Use pricing to reduce demand during congested periods. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F5: The Principle of Periodic Resynchronization: Use a regular cadence to limit the accumulation of variance. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F6: The Cadence Capacity Margin Principle: Provide sufficient capacity margin to enable cadence. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F7: The Cadence Reliability Principle: Use cadence to make waiting times predictable.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F8: The Cadence Batch Size Enabling Principle: Use a regular cadence to enable small batch sizes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F9: The Principle of Cadenced Meetings: Schedule frequent meetings using a predictable cadence. (&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F10: The Synchronization Capacity Margin Principle: To enable synchronization, provide sufficient capacity margin. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F11: The Principle of Multiproject Synchronization: Exploit scale economies by synchronizing work from multiple projects. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F12: The Principle of Cross-Functional Synchronization: Use synchronized events to facilitate cross functional tradeoffs. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F13: The Synchronization Queueing Principle: To reduce queues, synchronize the batch size and timing of adjacent processes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F14: The Harmonic Principle: Make nested cadences harmonic multiples. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F15: The SJF Scheduling Principle: When delay costs are homogeneous, do the shortest job first. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F16: The HDCF Scheduling Principle: When job durations are homogeneous, do the high cost-of-delay job first. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F17: The WSJF Scheduling Principle: When job durations and delay costs are not homogeneous, use WSJF. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F18: The Local Priority Principle: Priorities are inherently local. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F19: The Round-Robin Principle: When task duration is unknown, time-share capacity. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F20: The Preemption Principle: Only preempt when switching costs are low. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F21: The Principle of Work Matching: Use sequence to match jobs to appropriate resources. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F22: The Principle of Tailored Routing: Select and tailor the sequence of subprocesses to the task at hand. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F23: The Principle of Flexible Routing: Route work based on the current most economic route. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F24: The Principle of Alternate Routes: Develop and maintain alternate routes around points of congestion. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F25: The Principle of Flexible Resources: Use flexible resources to absorb variation. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F26: The Principle of Late Binding: The later we bind demand to resources, the smoother the flow. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F27: The Principle of Local Transparency: Make tasks and resources reciprocally visible at adjacent processes. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F28: The Principle of Preplanned Flexibility: For fast responses, preplan and invest in flexibility. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F29: The Principle of Resource Centralization: Correctly managed, centralized resources can reduce queues. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;F30: The Principle of Flow Conditioning: Reduce variability before a bottleneck. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;fast-feedback-principles&amp;quot;&amp;gt;Fast Feedback Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;FF1: The Principle of Maximum Economic Influence: Focus control on project and process parameters with the highest economic influence. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF2: The Principle of Efficient Control: Control parameters that are both influential and efficient. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF3: The Principle of Leading Indicators: Select control variables that predict future system behavior. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF4: The Principle of Balanced Set Points: Set tripwires at points of equal economic impact. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF5: The Moving Target Principle: Know when to pursue a dynamic goal. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF6: The Exploitation Principle: Exploit unplanned economic opportunities.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF7: The Queue Reduction Principle of Feedback: Fast feedback enables smaller queues. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF8: The Fast Learning Principle: Use fast feedback to make learning faster and more efficient. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF9: The Principle of Useless Measurement: What gets measured may not get done. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF10: The First Agility Principle: We dont need long planning horizons when we have a short turning radius. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF11: The Batch Size Principle of Feedback: Small batches yield fast feedback. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF12: The Signal to Noise Principle: To detect a smaller signal, reduce the noise. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF13: The Decision Rule Principle: Control the economic logic behind the decision, not the entire decision. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF14: The Locality Principal of Feedback: Whenever possible make feedback local. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF15: The Relief Valve Principle: Have a clear, predetermined relief valve. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF16: The Principle of Multiple Control Loops: Embed fast control loops inside slow loops. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF17: The Principle of Controlled Excursions: Keep deviations within the control range. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF18: The Feedforward Principle: Provide advance notice of heavy arrival rates to minimize queues. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF19: The Principle of Colocation: Colocation improves almost all aspects of communications. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF20: The Empowerment Principle of Feedback: Fast feedback gives a sense of control. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF21: The Hurry-Up-and-Wait Principle: Large queues make it hard to create urgency. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF22: The Amplification Principle: The human element tends to amplify large excursions. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF23: The Principle of Overlapping Measurement: To align behaviors, reward people for the work of others. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;FF24: The Attention Principle: Time counts more than money. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h1 id=&amp;quot;decentralization-principles&amp;quot;&amp;gt;Decentralization Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;D1: The Second Perishability Principle: Decentralize control for problems and opportunities that age poorly. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D2: The Scale Principle: Centralize control for problems that are infrequent, large, or that have significant economies of scale. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D3: The Principle of Layered Control: Adapt the control approach to emerging information about the problem. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D4: The Opportunistic Principle: Adjust the plan for unplanned obstacles and opportunities. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D5: The Principle of Virtual Centralization: Be able to quickly reorganize decentralized resources to create centralized power. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D6: The Inefficiency Principle: The inefficiency of decentralization can cost less than the value of faster response time. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D7: The Principle of Alignment: There is more value created with overall alignment than local excellence. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D8: The Principle of Mission: Specify the end state, its purpose, and the minimal possible constraints. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D9: The Principle of Boundaries: Establish clear roles and boundaries. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D10: The Main Effort Principle: Designate a main effort and subordinate other activities. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D11: The Principle of Dynamic Alignment: The main effort may shift quickly when conditions change. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D12 The Second Agility Principle: Develop the ability to quickly shift focus. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D13: The Principle of Peer-Level Coordination: Tactical coordination should be local. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D14: The Principle of Flexible Plans: Use simple modular plans. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D15: The Principle of Tactical Reserves: Decentralize a portion of reserves. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D16: The Principle of Early Contact: Make early and meaningful contact with the problem. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D17: The Principle of Decentralized Information: For decentralized decisions, disseminate key information widely. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D18: The Frequency Response Principle: We cant respond faster than our frequency response. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D19: The Quality of Service Principle: When response time is important, measure response time. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D20: The Second Market Principle: Use internal and external markets to decentralize control. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D21: The Principle of Regenerative Initiative: Cultivating initiative enables us to use initiative. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D22: The Principle of Face-to-Face Communication: Exploit the speed and bandwidth of face-to-face communications. &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;D23: The Trust Principle: Trust is built through experience. &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://lpd2.com/the-principles-of-flow/&amp;quot;&amp;gt;Source:&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;                http://spine.wiki/principle/PrinciplesOfFlow                http://spine.wiki/principle/PrinciplesOfFlow                2015-11-17T00:00:00+02:00                                Principles of Agile                &amp;lt;h1 id=&amp;quot;primary-principles&amp;quot;&amp;gt;Primary Principles&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;We are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/IndividualsAndInteractionsOverProcessesAndTools&amp;quot;&amp;gt;Individuals and interactions over processes and tools&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/WorkingSoftwareOverComprehensiveDocumentation&amp;quot;&amp;gt;Working software over comprehensive documentation&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/CustomerCollaborationOverContractNegotiation&amp;quot;&amp;gt;Customer collaboration over contract negotiation&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/principle/RespondingToChangeOverFollowingAPlan&amp;quot;&amp;gt;Responding to change over following a plan&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;That is, while there is value in the items on the right, we value the items on the left more.&amp;lt;/p&amp;gt;&amp;lt;h1 id=&amp;quot;additional-12-principles&amp;quot;&amp;gt;Additional 12 Principles&amp;lt;/h1&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Welcome changing requirements, even late in development. Agile processes harness change for the customers competitive advantage.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Business people and developers must work together daily throughout the project.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Working software is the primary measure of progress.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Continuous attention to technical excellence and good design enhances agility.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Simplicitythe art of maximizing the amount of work not doneis essential.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;The best architectures, requirements, and designs emerge from self-organizing teams.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;For more information, review the &amp;lt;a href=&amp;quot;/archetype/AgileManifesto/&amp;quot;&amp;gt;Agile archetype&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://agilemanifesto.org/&amp;quot;&amp;gt;agilemanifesto.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/PrinciplesOfAgile                http://spine.wiki/principle/PrinciplesOfAgile                2015-11-17T00:00:00+02:00                                Spine Model - A systemic approach to effective leadership                &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://spinemodel.info/news/agile2015talk&amp;quot;&amp;gt;This page has moved.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/news/agile2015talk                http://spine.wiki/news/agile2015talk                2015-10-14T00:00:00+02:00                                Responding to change over following a plan                &amp;lt;p&amp;gt;This is the fourth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of the &amp;lt;a href=&amp;quot;/archetype/AgileManifesto/&amp;quot;&amp;gt;Agile Manifesto&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/principle/RespondingToChangeOverFollowingAPlan                http://spine.wiki/principle/RespondingToChangeOverFollowingAPlan                2015-07-19T00:00:00+02:00                                Customer collaboration over contract negotiation                &amp;lt;p&amp;gt;This is the thirs &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of the &amp;lt;a href=&amp;quot;/archetype/AgileManifesto/&amp;quot;&amp;gt;Agile Manifesto&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/principle/CustomerCollaborationOverContractNegotiation                http://spine.wiki/principle/CustomerCollaborationOverContractNegotiation                2015-07-19T00:00:00+02:00                                Working software over comprehensive documentation                &amp;lt;p&amp;gt;This is the second &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of the &amp;lt;a href=&amp;quot;/archetype/AgileManifesto/&amp;quot;&amp;gt;Agile Manifesto&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/principle/WorkingSoftwareOverComprehensiveDocumentation                http://spine.wiki/principle/WorkingSoftwareOverComprehensiveDocumentation                2015-07-18T00:00:00+02:00                                Individuals and interactions over processes and tools                &amp;lt;p&amp;gt;This is the first &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of the &amp;lt;a href=&amp;quot;/prototype/AgileManifesto/&amp;quot;&amp;gt;Agile Manifesto&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/principle/IndividualsAndInteractionsOverProcessesAndTools                http://spine.wiki/principle/IndividualsAndInteractionsOverProcessesAndTools                2015-07-18T00:00:00+02:00                                Agile Software Development, Manifesto for                &amp;lt;h2 id=&amp;quot;origin&amp;quot;&amp;gt;Origin&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;On February 11-13, 2001, at The Lodge at Snowbird ski resort in the Wasatch mountains of Utah, seventeen people met to talk, ski, relax, and try to find common ground and of course, to eat. What emerged was the Agile Software Development Manifesto. Representatives from &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;Extreme Programming&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;/archetype/DSDM/&amp;quot;&amp;gt;DSDM&amp;lt;/a&amp;gt;, Adaptive Software Development, &amp;lt;a href=&amp;quot;/archetype/Crystal/&amp;quot;&amp;gt;Crystal&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;/archetype/FDD/&amp;quot;&amp;gt;Feature-Driven Development&amp;lt;/a&amp;gt;, Pragmatic Programming, and others sympathetic to the need for an alternative to documentation driven, heavyweight software development processes convened.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://agilemanifesto.org/history.html&amp;quot;&amp;gt;Read the rest here: History: The Agile Manifesto&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;needs&amp;quot;&amp;gt;Needs&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://agilemanifesto.org/history.html&amp;quot;&amp;gt;From Jim Highsmith, in History: The Agile Manifesto&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;In order to succeed in the new economy, to move aggressively into the era of e-business, e-commerce, and the web, companies have to rid themselves of their Dilbert manifestations of make-work and arcane policies. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;While the Manifesto provides some specific ideas, there is a deeper theme that drives many, but not all, to be sure, members of the alliance. At the close of the two-day meeting, Bob Martin joked that he was about to make a mushy statement. But while tinged with humor, few disagreed with Bobs [Robert Martins] sentiments that we all felt privileged to work with a group of people who held a set of compatible values, a set of values based on trust and respect for each other and promoting organizational models based on people, collaboration, and building the types of organizational communities in which we [the manifesto authors] would want to work. At the core, I [Jim Highsmith] believe Agile Methodologists are really about mushy stuff, about delivering good products to customers by operating in an environment that does more than talk about people as our most important asset but actually acts as if people were the most important, and lose the word asset. So in the final analysis, the meteoric rise of interest in and sometimes tremendous criticism of Agile Methodologies is about the mushy stuff of values and culture.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Agile movement is not anti-methodology, in fact, many of us want to restore credibility to the word methodology. We want to restore a balance. We embrace modeling, but not in order to file some diagram in a dusty corporate repository. We embrace documentation, but not hundreds of pages of never-maintained and rarely-used tomes. We plan, but recognize the limits of planning in a turbulent environment. Those who would brand proponents of XP or &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt; or any of the other Agile Methodologies as hackers are ignorant of both the methodologies and the original definition of the term hacker.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;(&amp;lt;a href=&amp;quot;http://agilemanifesto.org/history.html&amp;quot;&amp;gt;Read the rest here: History: The Agile Manifesto&amp;lt;/a&amp;gt;)&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;values&amp;quot;&amp;gt;Values&amp;lt;/h2&amp;gt;&amp;lt;h5 id=&amp;quot;systemic-values&amp;quot;&amp;gt;Systemic Values&amp;lt;/h5&amp;gt;&amp;lt;p&amp;gt;The Manifesto for Agile Software Development does not explicitly state any &amp;lt;a href=&amp;quot;/values.html&amp;quot;&amp;gt;Values&amp;lt;/a&amp;gt; (by the Spine Model definition). &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;You can infer them though. For example the first Principle below could be interpreted as valuing People higher than Process, or perhaps Effectiveness higher than Efficiency. The second Principle could be abstracted to valuing &amp;lt;a href=&amp;quot;/Value/Feedback/&amp;quot;&amp;gt;Feedback&amp;lt;/a&amp;gt; higher than Compliance. &amp;lt;/p&amp;gt;&amp;lt;h5 id=&amp;quot;personal-values&amp;quot;&amp;gt;Personal Values&amp;lt;/h5&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://agilemanifesto.org/history.html&amp;quot;&amp;gt;Robert Martin, from History: The Agile Manifesto&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;We all felt privileged to work with a group of people who held a set of compatible values, a set of values based on trust and respect for each other and promoting organizational models based on people, collaboration, and building the types of organizational communities in which we would want to work.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;principles&amp;quot;&amp;gt;Principles&amp;lt;/h2&amp;gt;&amp;lt;h5 id=&amp;quot;primary-principles&amp;quot;&amp;gt;Primary Principles&amp;lt;/h5&amp;gt;&amp;lt;p&amp;gt;We are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Principle/IndividualsAndInteractionsOverProcessesAndTools&amp;quot;&amp;gt;Individuals and interactions over processes and tools&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Principle/WorkingSoftwareOverComprehensiveDocumentation&amp;quot;&amp;gt;Working software over comprehensive documentation&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Principle/CustomerCollaborationOverContractNegotiation&amp;quot;&amp;gt;Customer collaboration over contract negotiation&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/Principle/RespondingToChangeOverFollowingAPlan&amp;quot;&amp;gt;Responding to change over following a plan&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;That is, while there is value in the items on the right, we value the items on the left more.&amp;lt;/p&amp;gt;&amp;lt;h5 id=&amp;quot;additional-12-principles&amp;quot;&amp;gt;Additional 12 Principles&amp;lt;/h5&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Welcome changing requirements, even late in development. Agile processes harness change for the customers competitive advantage.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Business people and developers must work together daily throughout the project.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Working software is the primary measure of progress.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Continuous attention to technical excellence and good design enhances agility.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Simplicitythe art of maximizing the amount of work not doneis essential.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;The best architectures, requirements, and designs emerge from self-organizing teams.&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(Source: &amp;lt;a href=&amp;quot;http://agilemanifesto.org/&amp;quot;&amp;gt;agilemanifesto.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;practices&amp;quot;&amp;gt;Practices&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The manifesto does not prescribe or give opinions on any specific &amp;lt;a href=&amp;quot;/practices.html&amp;quot;&amp;gt;Practices&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;tools&amp;quot;&amp;gt;Tools&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The manifesto does not prescribe or give opinions on any specific &amp;lt;a href=&amp;quot;/tools.html&amp;quot;&amp;gt;Tools&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/archetype/AgileManifesto                http://spine.wiki/archetype/AgileManifesto                2015-07-18T00:00:00+02:00                                Visualize and limit WIP, reduce batch sizes, and manage queue lengths                &amp;lt;p&amp;gt;This is the sixth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/visualize-and-limit-wip-reduce-batch-sizes-and-manage-queue-lengths/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/VisualizeAndLimitWIPReduceBatchSizesAndManageQueueLengths                http://spine.wiki/principle/VisualizeAndLimitWIPReduceBatchSizesAndManageQueueLengths                2015-06-09T00:00:00+02:00                                Unlock the intrinsic motivation of knowledge workers                &amp;lt;p&amp;gt;This is the eighth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/unlock-the-intrinsic-motivation-of-knowledge-workers/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/UnlockTheIntrinsicMotivationOfKnowledgeWorkers                http://spine.wiki/principle/UnlockTheIntrinsicMotivationOfKnowledgeWorkers                2015-06-09T00:00:00+02:00                                Take an Economic View                &amp;lt;p&amp;gt;This is the first &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/take-an-economic-view/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/TakeAnEconomicView                http://spine.wiki/principle/TakeAnEconomicView                2015-06-09T00:00:00+02:00                                Decentralize decision-making                &amp;lt;p&amp;gt;This is the ninth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/decentralize-decision-making/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/DecentralizeDecisionMaking                http://spine.wiki/principle/DecentralizeDecisionMaking                2015-06-09T00:00:00+02:00                                Build Incrementally With Fast Integrated Learning Cycles                &amp;lt;p&amp;gt;This is the fourth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/build-incrementally-with-fast-integrated-learning-cycles/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/BuildIncrementallyWithFastIntegratedLearningCycles                http://spine.wiki/principle/BuildIncrementallyWithFastIntegratedLearningCycles                2015-06-09T00:00:00+02:00                                Base Milestones On Objective Evaluation Of Working Systems                &amp;lt;p&amp;gt;This is the fifth &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/base-milestones-on-objective-evaluation-of-working-systems/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/BaseMilestonesOnObjectiveEvaluationOfWorkingSystems                http://spine.wiki/principle/BaseMilestonesOnObjectiveEvaluationOfWorkingSystems                2015-06-09T00:00:00+02:00                                Assume Variability; Preserve Options                &amp;lt;p&amp;gt;This is the third &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/assume-variability-preserve-options/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/AssumeVariabilityPreserveOptions                http://spine.wiki/principle/AssumeVariabilityPreserveOptions                2015-06-09T00:00:00+02:00                                Apply Systems Thinking                &amp;lt;p&amp;gt;This is the second &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/apply-systems-thinking/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/ApplySystemsThinking                http://spine.wiki/principle/ApplySystemsThinking                2015-06-09T00:00:00+02:00                                Apply cadence, synchronize with cross-domain planning                &amp;lt;p&amp;gt;This is the seventh &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principle&amp;lt;/a&amp;gt; of &amp;lt;a href=&amp;quot;/archetype/SAFe/&amp;quot;&amp;gt;SAFe&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://scaledagileframework.com/apply-cadence-synchronize-with-cross-domain-planning/&amp;quot;&amp;gt;More info here.&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/ApplyCadenceSynchronizeWithCrossDomainPlanning                http://spine.wiki/principle/ApplyCadenceSynchronizeWithCrossDomainPlanning                2015-06-09T00:00:00+02:00                                Can I contribute to Spine Wiki?                &amp;lt;p&amp;gt;We welcome contributions to the Spine Wiki. Please take a look at &amp;lt;a href=&amp;quot;/explanation/Contribution&amp;quot;&amp;gt;the guidelines on how to contribute&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;                http://spine.wiki/faq/Contribute                http://spine.wiki/faq/Contribute                2015-06-01T00:00:00+02:00                                Team Retrospective                &amp;lt;h2 id=&amp;quot;what-is-it&amp;quot;&amp;gt;What is it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;One of the most important practices for teams that are applying the Principle of Inspect and Adapt.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;why-use-it&amp;quot;&amp;gt;Why use it?&amp;lt;/h2&amp;gt;&amp;lt;h2 id=&amp;quot;when-to-use-it&amp;quot;&amp;gt;When to use it?&amp;lt;/h2&amp;gt;&amp;lt;h2 id=&amp;quot;what-could-it-look-like&amp;quot;&amp;gt;What could it look like?&amp;lt;/h2&amp;gt;&amp;lt;h2 id=&amp;quot;assumptions&amp;quot;&amp;gt;Assumptions&amp;lt;/h2&amp;gt;&amp;lt;h2 id=&amp;quot;sprint-retrospectives-in-scrumarchetypescrum&amp;quot;&amp;gt;Sprint Retrospectives in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Scrum prescribes the use of Retrospectives, and describes them in the official Scrum Guide as follows:&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Sprint Retrospective is an opportunity for the Scrum Team to inspect itself and create a plan for improvements to be enacted during the next Sprint.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Sprint Retrospective occurs after the Sprint Review and prior to the next Sprint Planning. This is a three-hour time-boxed meeting for one-month Sprints. For shorter Sprints, the event is usually shorter. The Scrum Master ensures that the event takes place and that attendants understand its purpose. The Scrum Master teaches all to keep it within the time-box. The Scrum Master participates as a peer team member in the meeting from the accountability over the Scrum process.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The purpose of the Sprint Retrospective is to:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Inspect how the last Sprint went with regards to people, relationships, process, and tools;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Identify and order the major items that went well and potential improvements; and,&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Create a plan for implementing improvements to the way the Scrum Team does its work.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;The Scrum Master encourages the Scrum Team to improve, within the Scrum process framework, its development process and practices to make it more effective and enjoyable for the next Sprint. During each Sprint Retrospective, the Scrum Team plans ways to increase product quality by adapting the definition of Done as appropriate.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;By the end of the Sprint Retrospective, the Scrum Team should have identified improvements that it will implement in the next Sprint. Implementing these improvements in the next Sprint is the adaptation to the inspection of the Scrum Team itself. Although improvements may be implemented at any time, the Sprint Retrospective provides a formal opportunity to focus on inspection and adaptation.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/docs/scrumguide/v1/scrum-guide-us.pdf&amp;quot;&amp;gt;Source: The Official Scrum Guide&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/TeamRetrospective                http://spine.wiki/practice/TeamRetrospective                2015-05-30T00:00:00+02:00                                Team Cognitive Load Tracker                &amp;lt;h2 id=&amp;quot;what-is-it&amp;quot;&amp;gt;What is it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;A way of gathering data on what work is interrupting people on a team and consuming their time and attention.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;why-use-it&amp;quot;&amp;gt;Why use it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Cognitive capacity is finite. If a team is experiencing many unscheduled interruptions then their ability to do their scheduled work will be restricted.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;when-to-use-it&amp;quot;&amp;gt;When to use it?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;When the team feels that they are unable to focus on the work they have committed to because of many unpredictable and unsheduled interruptions.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;what-could-it-look-like&amp;quot;&amp;gt;What could it look like?&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;A physical board in the team area with named swim lanes for each individual on the team. Two columns, Interruption and Done to show what the person has been interrupted for and whether or not they have done it. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Each team member keeps a pad of postits on their desk and writes one out and sticks it on the board as they get interrupted by unscheduled work. Weve found the board can get quite full in a two week period, so the little micro-postits work best to save space.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;After two weeks, probably in the teams Retrospective if they have one, the team then uses the items on the board to try and uncover root causes for interruptions, patterns or other insights. They then try and use this data to pick actions to address the situation.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For example if many interruptions are for user support they might decide to build a particular feature to enable users to help themselves with a certain type of recurring issue. Or, they might decide to have a weekly support rotation where one team member absorbs all the interruptions and allows the rest of the team to focus.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;assumptions&amp;quot;&amp;gt;Assumptions&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Use of this tool assumes that the team is attempting to manage their flow of work to be more effective and accurately forecast their capacity to complete work.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;You could of course apply the tool to yourself, to uncover your own interruptions.&amp;lt;/p&amp;gt;                http://spine.wiki/tool/CognitiveLoadTracker                http://spine.wiki/tool/CognitiveLoadTracker                2015-05-30T00:00:00+02:00                                Human needs according to NVC                &amp;lt;p&amp;gt;According to NVC, humans all have the following needs&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;connection&amp;quot;&amp;gt;Connection&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;acceptance&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;affection&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;appreciation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;belonging&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;cooperation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;communication&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;closeness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;community&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;companionship&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;compassion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;consideration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;consistency&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;empathy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;inclusion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;intimacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;love&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;mutuality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;nurturing&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;respect/self-respect&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;safety&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;security&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;stability&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;support&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;to know and be known&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;to see and be seen&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;to understand and be understood&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;trust&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;warmth&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;honesty&amp;quot;&amp;gt;Honesty&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;authenticity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;integrity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;presence&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;play&amp;quot;&amp;gt;Play&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;joy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;humor&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;peace&amp;quot;&amp;gt;Peace&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;beauty&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;communion&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;ease&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;equality&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;harmony&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;inspiration&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;order&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;physical-well-being&amp;quot;&amp;gt;Physical Well-being&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;air&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;food&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;movement/exercise&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;rest/sleep&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;sexual expression&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;safety&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;shelter&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;touch&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;water&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;meaning&amp;quot;&amp;gt;Meaning&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;awareness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;celebration of life&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;challenge&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;clarity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;competence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;consciousness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;contribution&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;creativity&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;discovery&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;efficacy&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;effectiveness&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;growth&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;hope&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;learning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;mourning&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;participation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;purpose&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;self-expression&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;stimulation&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;to matter&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;understanding&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;autonomy&amp;quot;&amp;gt;Autonomy&amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;choice&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;freedom&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;independence&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;space&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;spontaneity&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;                http://spine.wiki/need/NVCNeeds                http://spine.wiki/need/NVCNeeds                2015-05-28T00:00:00+02:00                                Pull Work Through the System                &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/PullWorkThroughTheSystem                http://spine.wiki/principle/PullWorkThroughTheSystem                2015-05-24T00:00:00+02:00                                Heuristics                &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/faq/WhatIsASystem&amp;quot;&amp;gt;System&amp;lt;/a&amp;gt; boundaries can be put in place by providing heuristic rules to govern a particular principle.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;People tend to remember heuristic better when they come in threes. For example we often use these three for teams:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;Increase&amp;lt;/strong&amp;gt; &amp;lt;a href=&amp;quot;/value/feedback&amp;quot;&amp;gt;feedback&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;Decrease&amp;lt;/strong&amp;gt; &amp;lt;a href=&amp;quot;/principle/batchsize&amp;quot;&amp;gt;batch size&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;Pull&amp;lt;/strong&amp;gt; &amp;lt;a href=&amp;quot;/principle/pullworkthroughthesystem&amp;quot;&amp;gt;work through the system&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;This does not tell teams what &amp;lt;a href=&amp;quot;/practices.html&amp;quot;&amp;gt;Practices&amp;lt;/a&amp;gt; to use, however they can be measured against whether or not they are applying the &amp;lt;a href=&amp;quot;/principles.html&amp;quot;&amp;gt;Principles&amp;lt;/a&amp;gt; in a desirable way.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;See the &amp;lt;a href=&amp;quot;/faq/PathToAgileMastery&amp;quot;&amp;gt;Path to Agile Mastery&amp;lt;/a&amp;gt; FAQ article for more some more in depth exploration of when heuristics are appropriate.&amp;lt;/p&amp;gt;                http://spine.wiki/explanation/Heuristics                http://spine.wiki/explanation/Heuristics                2015-05-24T00:00:00+02:00                                Batch Size                &amp;lt;h2 id=&amp;quot;optimum-batch-size&amp;quot;&amp;gt;Optimum batch size&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;img src=&amp;quot;/assets/images/optimum_batch_size.png&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;What to learn next&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;coming soon&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;coming soon&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;                http://spine.wiki/principle/BatchSize                http://spine.wiki/principle/BatchSize                2015-05-24T00:00:00+02:00                                Kanban                &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/archetype/Kanban                http://spine.wiki/archetype/Kanban                2015-05-23T00:00:00+02:00                                Feature Driven Development (FDD)                &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/archetype/FDD                http://spine.wiki/archetype/FDD                2015-05-23T00:00:00+02:00                                Dynamic Systems Development Method (DSDM)                &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/archetype/DSDM                http://spine.wiki/archetype/DSDM                2015-05-23T00:00:00+02:00                                Disciplined Agile Delivery (DAD)                &amp;lt;h2 id=&amp;quot;needs&amp;quot;&amp;gt;Needs&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The Disciplined Agile Delivery (DAD) process decision framework  is a people-first, learning-oriented hybrid agile approach to IT solution delivery. It has a risk-value delivery lifecycle, is goal-driven, is enterprise aware, and is scalable.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.disciplinedagiledelivery.com/introduction-to-dad/&amp;quot;&amp;gt;Source: The Official Introduction to DAD&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/archetype/DAD                http://spine.wiki/archetype/DAD                2015-05-23T00:00:00+02:00                                Crystal                &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/archetype/Crystal                http://spine.wiki/archetype/Crystal                2015-05-23T00:00:00+02:00                                Core Working Hours                &amp;lt;p&amp;gt;Core working hours are the block of hours in which the members of the team agree to be working as a team every working day. It is useful to get upfront agreement on when these are to ensure that the team has productive working time together.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;what-core-working-hours-means-me-by-danie-roux&amp;quot;&amp;gt;What Core Working Hours means me (by Danie Roux)&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Core Working Hours used to &amp;lt;em&amp;gt;mean&amp;lt;/em&amp;gt; something. I realise that this makesme sound like an extremely old man, but let me explain:&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;During the core working hours, we were productive. We produced something of value to the team and company. Things that werent considered adding value were e-mails, meetings, taking calls and fielding interruptions.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;In order to ensure we were productive and adding value during core working hours, we closed our office doors, turned off our cell phones, unplugged the office phones and closed the instant messaging applications. Then we tackled the work in front of us with gusto.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;That is what we mean by Core &amp;lt;em&amp;gt;Working&amp;lt;/em&amp;gt; Hours. The hours the team agree to be together, working.&amp;lt;/p&amp;gt;                http://spine.wiki/practice/CoreWorkingHours                http://spine.wiki/practice/CoreWorkingHours                2015-05-23T00:00:00+02:00                                Openness                &amp;lt;h2 id=&amp;quot;as-defined-in-scrumarchetypescrum&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;As we work together, we express how were doing, whats in our way, and our concerns so they can be addressed.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;https://www.scrumalliance.org/why-scrum/core-scrum-values-roles&amp;quot;&amp;gt;scrumalliance.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/value/Openness                http://spine.wiki/value/Openness                2015-05-14T00:00:00+02:00                                Focus                &amp;lt;h2 id=&amp;quot;as-defined-in-scrumarchetypescrum&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Because we focus on only a few things at a time, we work well together and produce excellent work. We deliver valuable items sooner.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;https://www.scrumalliance.org/why-scrum/core-scrum-values-roles&amp;quot;&amp;gt;scrumalliance.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/value/Focus                http://spine.wiki/value/Focus                2015-05-14T00:00:00+02:00                                Commitment                &amp;lt;h2 id=&amp;quot;as-defined-in-scrumarchetypescrum&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Because we have great control over our own destiny, we are more committed to success.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;https://www.scrumalliance.org/why-scrum/core-scrum-values-roles&amp;quot;&amp;gt;scrumalliance.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/value/Commitment                http://spine.wiki/value/Commitment                2015-05-14T00:00:00+02:00                                Simplicity                &amp;lt;h2 id=&amp;quot;as-defined-in-extreme-programming-xparchetypexp&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;eXtreme Programming (XP)&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;We will do what is needed and asked for, but no more. This will maximize the value created for the investment made to date. We will take small simple steps to our goal and mitigate failures as they happen. We will create something we are proud of and maintain it long term for reasonable costs. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/values.html&amp;quot;&amp;gt;extremeprogramming.org/values&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/value/Simplicity                http://spine.wiki/value/Simplicity                2015-05-13T00:00:00+02:00                                Respect                &amp;lt;h2 id=&amp;quot;as-defined-in-extreme-programming-xparchetypexp&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;eXtreme Programming (XP)&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Everyone gives and feels the respect they deserve as a valued team member. Everyone contributes value even if its simply enthusiasm. Developers respect the expertise of the customers and vice versa. Management respects our right to accept responsibility and receive authority over our own work.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/values.html&amp;quot;&amp;gt;extremeprogramming.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;as-defined-in-scrumarchetypescrum&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;As we work together, sharing successes and failures, we come to respect each other and to help each other become worthy of respect.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;https://www.scrumalliance.org/why-scrum/core-scrum-values-roles&amp;quot;&amp;gt;scrumalliance.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/value/Respect                http://spine.wiki/value/Respect                2015-05-13T00:00:00+02:00                                Feedback                &amp;lt;h2 id=&amp;quot;as-defined-in-extreme-programming-xparchetypexp&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;eXtreme Programming (XP)&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;We will take every iteration commitment seriously by delivering working software. We demonstrate our software early and often then listen carefully and make any changes needed. We will talk about the project and adapt our process to it, not the other way around.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/values.html&amp;quot;&amp;gt;extremeprogramming.org/values&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/value/Feedback                http://spine.wiki/value/Feedback                2015-05-13T00:00:00+02:00                                Courage                &amp;lt;h2 id=&amp;quot;as-defined-in-extreme-programming-xparchetypexp&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;eXtreme Programming (XP)&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;We will tell the truth about progress and estimates. We dont document excuses for failure because we plan to succeed. We dont fear anything because no one ever works alone. We will adapt to changes when ever they happen.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/values.html&amp;quot;&amp;gt;extremeprogramming.org/values&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;as-defined-in-scrumarchetypescrum&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Because we work as a team, we feel supported and have more resources at our disposal. This gives us the courage to undertake greater challenges.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;https://www.scrumalliance.org/why-scrum/core-scrum-values-roles&amp;quot;&amp;gt;scrumalliance.org&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/value/Courage                http://spine.wiki/value/Courage                2015-05-13T00:00:00+02:00                                Capacity of a work system                &amp;lt;p&amp;gt;Counterintuitively, the way for more work to be completed in a &amp;lt;a href=&amp;quot;/faq/WhatIsASystem&amp;quot;&amp;gt;work system&amp;lt;/a&amp;gt; is not for everyone to work harder. You first need to understand the capacity of the system to move the work from start to finished&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;iframe width=&amp;quot;560&amp;quot; height=&amp;quot;315&amp;quot; src=&amp;quot;https://www.youtube.com/embed/zEzKsEzuZYM&amp;quot; frameborder=&amp;quot;0&amp;quot; allowfullscreen=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;p&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;What to learn next&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;coming soon&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;coming soon&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/CapacityOfAWorkSystem                http://spine.wiki/principle/CapacityOfAWorkSystem                2015-05-13T00:00:00+02:00                                Communication                &amp;lt;h2 id=&amp;quot;as-defined-in-extreme-programming-xparchetypexp&amp;quot;&amp;gt;As defined in &amp;lt;a href=&amp;quot;/archetype/XP/&amp;quot;&amp;gt;eXtreme Programming (XP)&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Everyone is part of the team and we communicate face to face daily. We will work together on everything from requirements to code. We will create the best solution to our problem that we can together.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;(via &amp;lt;a href=&amp;quot;http://www.extremeprogramming.org/values.html&amp;quot;&amp;gt;extremeprogramming.org/values&amp;lt;/a&amp;gt;)&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/value/communication                http://spine.wiki/value/communication                2015-05-12T00:00:00+02:00                                Scrum Product Owner                &amp;lt;p&amp;gt;The Product Owner is responsible for maximizing the value of the product and the work of the Development Team. How this is done may vary widely across organizations, &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt; Teams, and individuals.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Product Owner is the sole person responsible for managing the Product Backlog. Product Backlog management includes:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Clearly expressing Product Backlog items;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ordering the items in the Product Backlog to best achieve goals and missions;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Optimizing the value of the work the Development Team performs;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ensuring that the Product Backlog is visible, transparent, and clear to all, and shows what the Scrum Team will work on next; and,&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ensuring the Development Team understands items in the Product Backlog to the level needed.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;The Product Owner may do the above work, or have the Development Team do it. However, the Product Owner remains accountable.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Product Owner is one person, not a committee. The Product Owner may represent the desires of a committee in the Product Backlog, but those wanting to change a Product Backlog items priority must address the Product Owner.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;For the Product Owner to succeed, the entire organization must respect his or her decisions. The Product Owners decisions are visible in the content and ordering of the Product Backlog. No one is allowed to tell the Development Team to work from a different set of requirements, and the Development Team isnt allowed to act on what anyone else says.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/docs/scrumguide/v1/scrum-guide-us.pdf&amp;quot;&amp;gt;Source: The Official Scrum Guide&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/ScrumProductOwner                http://spine.wiki/practice/ScrumProductOwner                2015-05-12T00:00:00+02:00                                Scrum Master                &amp;lt;p&amp;gt;The Scrum Master is responsible for ensuring &amp;lt;a href=&amp;quot;/archetype/SCRUM/&amp;quot;&amp;gt;SCRUM&amp;lt;/a&amp;gt; is understood and enacted. Scrum Masters do this by ensuring that the Scrum Team adheres to Scrum theory, practices, and rules.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The Scrum Master is a servant-leader for the Scrum Team. The Scrum Master helps those outside the Scrum Team understand which of their interactions with the Scrum Team are helpful and which arent. The Scrum Master helps everyone change these interactions to maximize the value created by the Scrum Team.&amp;lt;/p&amp;gt;&amp;lt;h2 id=&amp;quot;scrum-master-service-to-the-product-owner&amp;quot;&amp;gt;Scrum Master Service to the Product Owner&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The Scrum Master serves the Product Owner in several ways, including:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Finding techniques for effective Product Backlog management;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Helping the Scrum Team understand the need for clear and concise Product Backlog items;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Understanding product planning in an empirical environment;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Ensuring the Product Owner knows how to arrange the Product Backlog to maximize value;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Understanding and practicing agility; and,&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Facilitating Scrum events as requested or needed.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;scrum-master-service-to-the-development-team&amp;quot;&amp;gt;Scrum Master Service to the Development Team&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The Scrum Master serves the Development Team in several ways, including:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Coaching the Development Team in self-organization and cross-functionality;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Helping the Development Team to create high-value products;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Removing impediments to the Development Teams progress;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Facilitating Scrum events as requested or needed; and,&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Coaching the Development Team in organizational environments in which Scrum is not yet fully adopted and understood.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;h2 id=&amp;quot;scrum-master-service-to-the-organization&amp;quot;&amp;gt;Scrum Master Service to the Organization&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;The Scrum Master serves the organization in several ways, including:&amp;lt;/p&amp;gt;&amp;lt;ul&amp;gt;  &amp;lt;li&amp;gt;Leading and coaching the organization in its Scrum adoption;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Planning Scrum implementations within the organization;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Helping employees and stakeholders understand and enact Scrum and empirical product development;&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Causing change that increases the productivity of the Scrum Team; and,&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Working with other Scrum Masters to increase the effectiveness of the application of Scrum in the organization.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.scrumguides.org/docs/scrumguide/v1/scrum-guide-us.pdf&amp;quot;&amp;gt;Source: The Official Scrum Guide&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/practice/ScrumMaster                http://spine.wiki/practice/ScrumMaster                2015-05-12T00:00:00+02:00                                Resource vs Flow Optimisation                &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;/explanation/TODO&amp;quot;&amp;gt;To Do&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;                http://spine.wiki/principle/ResourceVsFlowOptimisation                http://spine.wiki/principle/ResourceVsFlowOptimisation                2015-05-12T00:00:00+02:00        "
     
   } ,
  
   {
     
   } ,
  
   {
     
        "title"    : "Sitemap",
        "category" : "",
        "tags"     : "",
        "url"      : "/sitemap.txt",
        "date"     : "",
        "content"  : "{% for page in site.pages %}{{site.production_url}}{{ page.url }}{% endfor %}{% for post in site.posts %}{{site.production_url}}{{ post.url }}{% endfor %}"
     
   } ,
  
   {
     
        "title"    : "Tags",
        "category" : "",
        "tags"     : "",
        "url"      : "/tags.html",
        "date"     : "",
        "content"  : "{% include JB/setup %}  {% assign tags_list = site.tags %}    {% include JB/tags_list %}{% for tag in site.tags %}   {{ tag[0] }}      {% assign pages_list = tag[1] %}      {% include JB/pages_list %}  {% endfor %}"
     
   } ,
  
   {
     
        "title"    : "Tools",
        "category" : "",
        "tags"     : "",
        "url"      : "/tools.html",
        "date"     : "",
        "content"  : "{% include JB/setup %}{% assign posts_collate = (site.posts | where: &quot;category&quot; , &quot;Tool&quot;) %}{% include JB/posts_collate %}*To learn about the &quot;Tools&quot; level of the Spine Model, go to [spinemodel.info/Tools](http://spinemodel.info/tools.html)*"
     
   } ,
  
   {
     
        "title"    : "Values",
        "category" : "",
        "tags"     : "",
        "url"      : "/values.html",
        "date"     : "",
        "content"  : "{% include JB/setup %}{% assign posts_collate = (site.posts | where: &quot;category&quot; , &quot;Value&quot;) %}{% include JB/posts_collate %}*To learn about the &quot;Values&quot; level of the Spine Model, go to [spinemodel.info/Values](http://spinemodel.info/values.html)*"
     
   } 
  
]